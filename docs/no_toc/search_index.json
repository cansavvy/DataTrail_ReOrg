[["index.html", "Introduction to DataTrail About this Course", " Introduction to DataTrail 2022-04-06 About this Course This course is part of a series of courses for DataTrail. DataTrail is a no-cost, paid 14-week educational initiative for young-adult, high school and GED-graduates. DataTrail aims to equip members of underserved communities with the necessary skills and support required to work in the booming field of data science. DataTrail is a fresh take on workforce development that focuses on training both Black, Indigenous, and other people of color (BIPOC) interested in the data science industry and their potential employers. Offered by the Johns Hopkins Bloomberg School of Public Health, in partnership with local non-profits and Leanpub, DataTrail combines a mutually-intensive learning experience (MILE) with a whole-person ecosystem of support to allow aspiring data scientists and their employers to succeed. DataTrail uses mutually-intensive learning DataTrail joins aspiring data science scholars and expert-level data scientist mentors in a mutually-intensive learning experience (MILE). In the DataTrail MILE: Scholars engage in cutting-edge technical and soft skills training needed to enter the data science field. Mentors engage in anti-racism and mentorship training needed to be impactful mentors and informed colleagues on diverse data science teams. The social connections created along the way will fuel job opportunities for scholars and foster a more diverse, equitable, and inclusive climate at the mentors’ institutions. { course-completeness: 100 course-attempts: 2 default-quiz-attempts: 2 default-random-choice-order: true default-quiz-show-answers: none } "],["welcome-to-datatrail.html", "Chapter 1 Welcome to DataTrail", " Chapter 1 Welcome to DataTrail Hello and welcome! This is the first course in the DataTrail program. The goal of DataTrail is to help anyone with an internet connection and a computer learn to do data science. The program will start with the very basics of using a computer on the internet and work all the way up to doing data science and data analysis. We hope that by building this program we can help people get into the exciting tech world in one of the fastest growing and most satisfying jobs in the United States. There are only going to be more and more jobs asking for data science skills in the future. We believe that by making this career accessible to anyone we can have a positive impact on the world. 1.0.1 Course Details Before we jump into the content, we just wanted to orient you to how this course and all the courses in this program will be laid out: Courses - There are multiple courses in the DataTrail program. The first one is “Introduction to DataTrail”, which is the course you’re in right now. Lessons - Each course will consist of lessons. You’re looking at the first lesson here. It’s called “Welcome to DataTrail”. You can see a list of all the lessons in this course in the left panel. The lessons will contain text and images to walk you through every lesson of each course. Videos - At the end of each lesson there will be a link to a YouTube video. This video contains the same information as what is included in the text of the lesson; however, we know that some people learn better by listening. Sometimes you may find the videos more helpful. Sometimes you may find the text more helpful. These are included in case they are more helpful than the text to you personally. Slides - Each lesson also has link at the bottom to an accompanying slide show. Feel free to look through these slides if you find them helpful. They are the same images that were used to generate the video. Quizzes - Most lessons will have a quiz to evaluate your understanding of the material in that lesson. Successful completion of these quizzes is required for receipt of the certificate at the end of each course. Exercise - A few of the courses will have associated exercises. Think of these as larger projects. They won’t be required to receive the certificate at the end of the course; however, the skills the exercises require will be essential if you’re interested in getting a job in data science, so we highly suggest you complete them. 1.0.2 What is data science? You might not think about data very much. Most people don’t. So why is data science such a popular and growing career? And what does data science even mean? One definition of data is any information that you can store on a computer. Examples of data that you produce all the time are text messages, Facebook posts, websites you visit, things you buy with a credit card, pictures of your car on speed cameras, and information you fill out in profiles for your work, school, or community organizations. If you can take a picture of it, write about it, make a video of it, or record it on audio - then it is probably data. All of these different kinds of data are collected and saved on a computer. It used to be that measuring and storing data was expensive and hard. Now it is easy and cheap. Governments, companies, organizations, and even individual people can now collect and store more data in a few days than the entire world collected over the last few centuries. Most of the time we don’t even think about the data we are collecting. We take pictures and post them to Facebook to show our grandparents, not because we want to analyze the data in the pictures. This is true for most of the data that we create and collect, both for ourselves and for companies. We don’t do it for the data - we do it because we want to record and share information about ourselves and the world. For example, companies do it so they can keep track of their customers, and governments do it because they want to keep records of who got parking tickets. But people started to figure out that you could use that data for other purposes. When you search for “symptoms of the flu” on Google, you are just looking for information because you are sick. But the data that you are searching for flu symptoms is valuable information for companies, doctors, and even scientists. We could use that data from you to do things like show you an ad for blankets or for flu medicine. We could also use data from you and everyone else who searched for flu symptoms to find out where there are lots of flu cases. Another example is social media. You might write a post on Facebook with pictures describing your child’s birthday party. You might do this so your child’s grandparents can see pictures of her birthday. But the information in that post can again be valuable for other people. We could figure out birthdays, hobbies, interests, and who knows who from Facebook posts and likes. That information can be valuable for showing ads, for suggesting other people you might know, or for studying how humans interact with each other on birthdays and holidays. But to make data valuable we need to be able to study it and separate the interesting facts (called the “signal”) from the uninteresting information (the “noise”). One definition for data science is that. “Data science is asking a question that can be answered with data, collecting and cleaning the data, studying the data, creating models to help understand and answer the question, and sharing the answer to the question with other people.” The reason this field is growing so fast is that nearly every government, company, and organization is now collecting data. As the data have become cheaper and cheaper, the ability to analyze that data and find useful information has become a more and more valuable skill. But most people don’t have training or experience sifting through big piles of data to make interesting and valuable discoveries. The people who can do this well are called data scientists. They have a job that is exciting, interesting, and promises to be in high demand for years to come. 1.0.3 What is DataTrail? Data science is a fast-growing and exciting profession. But it can be a challenge to get into this career. Some of the biggest challenges are: Finding out that data science is even a real career Getting an education in data science can be costly and inconvenient You usually need a background in math, statistics, or computer science The equipment for data science can be costly and difficult to set up Many of the jobs are only available in major cities Most of the people who are currently data scientists have degrees in math, statistics, physics. They can afford computers that cost thousands of dollars and specialized computing software to help them do their jobs. They also mostly live in a few major cities like New York, San Francisco, Seattle, and Washington D.C. Many of these data scientists are former software engineers or other white-collar workers who moved into data science when they saw the demand for this kind of job. It is our goal with DataTrail to try to help people who would otherwise not have access to this exciting career to get into the career. To do that we need to remove some of the challenges above. So we designed this program to tackle some of the challenges that are preventing more widespread adoption of this career. DataTrail is being released as a set of online courses with a pay-what-you-can model. That means you can take the whole series of courses for free or for whatever cost you can afford. DataTrail is designed to be done entirely online using only tools you can access from a web browser. This means that you can do the entire program on a Chromebook - which you can get for as little as $150. DataTrail starts at the very basics of how to set up all of your accounts, which websites and apps to use, and simple little projects that anyone can do. The only pre-requisites are high school math/reading and the ability to use a computer. DataTrail includes resources for finding, getting, and working at data science jobs. It also includes resources for finding and working at remote data science jobs that can be done from anywhere in the world. 1.0.4 Who is this program for? DataTrail is designed for people who have a high school education and know how to use a computer. Some people who we hope the program will be useful for are: High school students People who are working on or have completed a high school education Students at community colleges Older adults who want to learn something new But the program can be completed by anyone! We hope that it will be useful for anyone who wants to learn something new about data science. This program is also focused on people who want to learn to do data science. In some cases this program may not be the most efficient way to learn about data science. If you already have a background in statistics, math, or computer science and want to jump directly to more advanced topics we have already created a Data Science Specialization on Coursera just for you. There are many jobs that require people to understand or manage a data science project. If you are a leader or executive who just wants a high level overview of what data science is all about, we have also created an Executive Data Science Specialization. Our goal here is also to create a supportive and inclusive learning experience. Data science is frustrating and slow to learn. Often the best way is to learn from other people who have discovered similar solutions or made similar mistakes. Fortunately, there are communities in data science that are cheerful, friendly and willing to help new people get involved. Throughout the program we will introduce you to these communities and hope that you will also make an effort to help your fellow students as they discover this exciting field. 1.0.5 How the program is organized This program is a series of online classes. They are designed to be used in many different ways so they can be useful for the most people possible. The courses and projects can be completed entirely online using nothing more than a web browser. The program is organized into Courses: Courses are designed to be able to be done in about a month working in your spare time or day or two working full time. You can receive a certificate for each course and all courses are based on a pay-what-you-can model. Each course consists of: Text based tutorials and lessons Slides with the images from the tutorials Video tutorials that cover the same information as the lessons Ungraded exercises to practice what you have learned Graded quizzes to measure what you have learned Projects to help you build a portfolio for showing what you’ve learned Course Set: A Course Set is a group of courses that form credentials. To keep up on the latest information about the program, courses and more go to https://www.DataTrail.org/. 1.0.6 How this course is graded This first class is designed to get you set up with the accounts you will use as you learn to become a data scientist. You will also complete your first data science project. Each lesson will have a short quiz at the end. To pass the course you need to get 70% of the questions in the course correct. If you receive more than 90% of the points across all quizzes you will pass with honors. 1.0.7 Slides and Video Slides "],["program-philosophy.html", "Chapter 2 Program Philosophy", " Chapter 2 Program Philosophy Our philosophy with building this course and this program is to try to make data science accessible to the widest audience possible. This course is part of the DataTrail series of courses. These courses are designed to tackle some of the challenges that prevent people from getting into data science in the first place. Some of those challenges are geographic - we’ll talk more about that later. Some are due to the price of education - that is why we are offering these courses as MOOCs. But one of the key barriers is that the type of computer you usually need to do data science is expensive. Chromebooks, on the other hand, are a very cheap type of computer. Chromebooks aren’t exactly like normal computers and they have a few unique characteristics: They are usually very cheap They are designed mostly to use the web You don’t “install” any software on the computer itself Instead of “apps” and “software” you simply go to websites for your work A simple way to think about it is that a Chromebook is a computer that only lets you use an internet browser like Chrome. You can’t really do much on the computer itself. Some people call this way of working - working only through the internet - “cloud computing”. It’s called cloud computing because the computer you are using most of the time is not the one sitting in front of you. You are using the internet to access tools and computers to do your work. But the physical computers doing the work are stored somewhere else - it could be nearby or on the other side of the globe. That is why people call the computers “in the cloud”. The goal of DataTrail is not that you have to use a Chromebook to finish the program, it is just that you could use a Chromebook to finish the whole program. You can finish the entire sequence of courses using any computer with an internet connection and a web browser. We took this approach because we want data science to be accessible to everyone. We have found that in earlier classes we taught online, the cost of computers, difficulties installing software, and lack of computing resources prevented students from completing our courses. We wanted to strip all those barriers away so that more students would have access to our program. We also believe that the future of data science is increasingly cloud based. So this educational choice matches a trend we see in the field that we can help you take advantage of. It is less and less likely that you will work only on your laptop as a data scientist. Through the internet you will access data and computing power so that you can magnify the impact of what you are working on. We hope to show you how to use those resources to maximize the value you can bring as a new data scientist. We do recognize that internet access is also a limiting factor for many people. We have tried to make it so that you don’t have to download data so hopefully the broadband requirements will be minimal. We hope that if internet access is a challenge for you that you can leverage the resources you have - whether they are local libraries, coffee shops, or internet cafes to complete this program. If that isn’t an option for you we’d love to hear from you and see if we can find ways to make data science accessible to everyone, everywhere. 2.0.1 Slides and Video Program Philosophy Slides "],["the-data-science-process.html", "Chapter 3 The Data Science Process", " Chapter 3 The Data Science Process As a data scientist, what steps are involved in answering a question with data? In this course, we aim to frame everything in the context of the data science process. In the following chapters and courses we will cover each part of this process more in-depth. 3.0.1 The Parts of a Data Science Project Data science process generally follow these steps: The first part of the a data science process is forming a question. Sometimes you’ll have a dataset in mind that you will explore to form this question, and other times, you will have a question that you will find some data to help you answer. Form a question - What is the question you hope to answer with data? Get the data - To answer this question you’ll need data! Clean the data - Datasets are almost never ready to analyze from the get go. As a data scientist, we’ll need to do some cleaning and set up steps to get the data where we need it before we can really dig into it. Explore and plot the data - After your data is clean, you’ll want to do some initial exploration. What do these data look like? Plots are a great way to visual your data and start to get an idea of how the data might relate to your initial question. Get stats - You can use statistics and models to try to use your data to get to the bottom of your question. Interpret and report results - Given everything you are seeing with your data, how do we interpret this? What’s our conclusion when it comes to our initial question? Data Science Progress In the upcoming chapters and courses we will further dive into each of these steps and 3.0.2 A Data Science Project Example For this example, we’re going to use an example analysis from a data scientist named Hilary Parker. Her work can be found on her blog, and the specific project we’ll be working through here is from 2013 and titled “Hilary: the most poisoned baby name in US history”. To get the most out of this lesson, click on that link and read through Hilary’s post. Once you’re done, come on back to this lesson and read through the breakdown of this post. Hilary’s blog post 3.0.2.1 Form a question When setting out on a data science project, it’s always great to have your question well-defined. Additional questions may pop up as you do the analysis, but knowing what you want to answer with your analysis is a really important first step. Hilary Parker’s question is included in bold in her post. Highlighting this makes it clear that she’s interested in answer the following question: Is Hilary/Hillary really the most rapidly poisoned name in recorded American history? 3.0.2.2 Get the data To answer this question, Hilary collected data from the Social Security website. This dataset included the 1000 most popular baby names from 1880 until 2011. 3.0.2.3 Data Analysis As explained in the blog post, Hilary was interested in calculating the relative risk for each of the 4,110 different names in her dataset from one year to the next from 1880 to 2011. By hand, this would be a nightmare. Thankfully, by writing code in R, all of which is available on GitHub, Hilary was able to generate these values for all these names across all these years. It’s not important at this point in time to fully understand what a relative risk calculation is (although Hilary does a great job breaking it down in her post!), but it is important to know that after getting the data together, the next step is figuring out what you need to do with that data in order to answer your question. For Hilary’s question, calculating the relative risk for each name from one year to the next from 1880 to 2011 and looking at the percentage of babies named each name in a particular year would be what she needed to do to answer her question. Hilary’s GitHub repo for this project 3.0.2.4 Clean the data What you don’t see in the blog post is all of the code Hilary wrote to get the data from the Social Security website, to get it in the format she needed to do the analysis, and to generate the figures. As mentioned above, she made all this code available on GitHub so that others could see what she did and repeat her steps if they wanted. 3.0.2.5 Explore and plot the data In addition to this code, data science projects often involve writing a lot of code and generating a lot of figures that aren’t included in your final results. This is part of the data science process too. Figuring out how to do what you want to do to answer your question of interest is part of the process, doesn’t always show up in your final project, and can be very time-consuming. 3.0.2.6 Get stats That said, given that Hilary now had the necessary values calculated, she began to further analyze the data. The first thing she did was look at the names with the biggest drop in percentage from one year to the next. By this preliminary analysis, Hilary was sixth on the list, meaning there were five other names that had had a single year drop in popularity larger than the one the name “Hilary” experienced from 1992 to 1993. Biggest Drop Table In looking at the results of this analysis, the first five years appeared peculiar to Hilary Parker. (It’s always good to consider whether or not the results were what you were expecting, from any analysis!) None of them seemed to be names that were popular for long periods of time. To see if this hunch was true, Hilary plotted the percent of babies born each year with each of the names from this table. What she found was that, among these “poisoned” names (names that experienced a big drop from one year to the next in popularity), all of the names other than Hilary became popular all of a sudden and then dropped off in popularity. Hilary Parker was able to figure out why most of these other names became popular, so definitely read that section of her post! The name, Hilary, however, was different. It was popular for a while and then completely dropped off in popularity. 14 most poisoned names over time To figure out what was specifically going on with the name Hilary, she removed names that became popular for short periods of time before dropping off, and only looked at names that were in the top 1000 for more than 20 years. The results from this analysis definitively show that Hilary had the quickest fall from popularity in 1992 of any female baby name between 1880 and 2011. (“Marian”’s decline was gradual over many years.) 39 most poisoned names over time, controlling for fads 3.0.2.7 Interpret and communicate results The final step in this data analysis process was, once Hilary Parker had answered her question on her computer, it was time to share it with the world. An important part of any data science project is effectively communicating the results of the project. Hilary did so by writing a wonderful blog post that communicated the results of her analysis, answered the question she set out to answer, and did so in an entertaining way. Additionally, it’s important to note that most projects build off someone else’s work. It’s really important to give those people credit. Hilary accomplishes this by: linking to a blog post where someone had asked a similar question previously linking to the Social Security website where she got the data linking to a link about where she learned about web scraping 3.0.3 What you can build using R Hilary’s work was carried out using the R programming language. Throughout the courses in this series, you’ll learn the basics of programming in R, exploring and analyzing data, and how to build reports and web applications that allow you to effectively communicate your results. To give you an example of the types of things that can be built using the R programming and suite of available tools that use R, below are a few examples of the types of things that have been built using the data science process and the R programming language - the types of things that you’ll be able to generate by the end of this series of courses. 3.0.3.1 Prediction Risk of Opioid Overdoses in Providence, RI Masters students at the University of Pennsylvania set out to predict the risk of opioid overdoses in Providence, Rhode Island. They include details on the data they used, the steps they took to clean their data, their visualization process, and their final results. While the details aren’t important now, seeing the process and what types of reports can be generated is important. Additionally, they’ve created a Shiny App, which is an interactive web application. This means that you can choose what neighborhood in Providence you want to focus on. All of this was built using R programming. Prediction of Opioid Overdoses in Providence, RI 3.0.4 Other Cool Data Science Projects The following are smaller projects than the example above, but data science projects nonetheless! In each project, the author had a question they wanted to answer and used data to answer that question. They explored, visualized, and analyzed the data. Then, they wrote blog posts to communicate their findings. Take a look to learn more about the topics listed and to see how others work through the data science project process and communicate their results. Text analysis of Trump’s tweets confirms he writes only the (angrier) Android half, by David Robinson Where to Live in the US, by Maelle Salmon Sexual Health Clinics in Toronto, by Sharla Gelfand 3.0.5 Conclusions In this lesson, we hope we’ve conveyed that sometimes data science projects are tackling difficult questions (‘Can we predict the risk of opioid overdose?’) while other times the goal of the project is to answer a question you’re interested in personally (‘Is Hilary the most rapidly poisoned baby name in recorded American History?’). In either case, the process is similar. You have to form your question, get data, explore and analyze your data, and communicate your results. With the tools you’ll learn in this series of courses, you will be able to set out and carry out your own data science projects, like the examples included in this lesson! 3.0.6 Slides and Video The Data Science Process Slides "],["how-to-learn.html", "Chapter 4 How To Learn", " Chapter 4 How To Learn In the last lesson we walked through a few interesting data science projects. Eventually, using the foundational skills learned in the courses throughout this Course Set, with practice on your own, and with other skills you pick up along the way, you’ll be completing your own, equally-awesome data science projects. However, what many people don’t tell you early on is that that path will be paved with a lot of failure. This isn’t a bad thing! Data scientists fail all the time. They write code that produces an error they have to figure out. And they regularly have to abandon projects that aren’t going to work out. Failure is part of the process. Failure Even when a project is successful, know that there was failure on the way to success! The problem is that what you see in a final blog post or a product put out by data scientists at a company is the final product. This product may be something that is functional, really important, or even beautiful. What you don’t see is all the failure that happened on the way to getting the end product. Data science projects can be a lot like social media accounts. On social media, it’s easy to only show the good stuff about one’s life. For data science projects, the end product of a data science project may be awesome, so the user will only see the good stuff. But, there’s a lot of struggle and failure that went into creating the awesome end product! success requires failure In fact, that pathway to success in data science is always full of failure. And, often, failure followed by figuring out why you just failed is a great way to learn. That doesn’t make failure easier. It will be frustrating from time to time, and figuring out why something isn’t working can be hard. That’s ok! Know that you’re not alone. Even experienced data scientists who have built really cool stuff experience lots of failure along the way. process can be difficult 4.0.1 Learning How To Learn In addition to learning the basics of data science in this course set, we also want you to learn how to learn. First and foremost, the best way to learn data science is by doing it. Throughout these lessons, copy the code you see in the lessons and try it out on your own. If you get an error, that’s ok! Google that error and try to learn from this error! In fact, we’ve got a whole lesson in this course on how to Google and a lesson in a later course in this course set on how to get help for questions when you’re programming. But, there’s more to learning how to learn than getting good at searching on the Internet (although, that is important!) 4.0.1.1 The Mindset To learn how to learn, it’s important to know just how important your mindset is. Your goal should be to answer an interesting question. Your objective is not to memorize a bunch of functions. It’s to use those functions to do something interesting. The path to accomplishing that goal may be circuitous. You may take a few steps backward and experience a setback or two before moving forward. That’s ok! mindset 4.0.1.2 The Path When carrying out a data science projects, there is always more than one way to solve a problem. Your path may be different than someone else’s path. In fact, while you may not know R code yet, the following four lines of code all produce the exact same output: mtcars %&gt;% tidyr::gather(key = variable, value = value) tidyr::gather(mtcars, key = variable, value = value) mtcars %&gt;% tidyr::gather(key = variable) mtcars_long &lt;- tidyr::gather(mtcars, key = variable) Any one of these would be a reasonable approach. We use this example to explain that there is more than one way to approach and to answer a question! Your path may be different than someone else’s. Your approaches may not be identical. And, that is more than ok! path 4.0.1.3 Asking For Help While we’ll point out where to find help when you’re stuck throughout this course set; however, it may not be obvious when to ask for help. While this is not a hard and fast rule, if you’ve been trying to find the answer to something you’re stuck on for half an hour and cannot figure it out, it may be time to post your question online for someone else to answer or to reach out directly to someone to get your question answered. During the half hour when you’re trying on your own, you should Google for the answer. If it’s a coding question, you should try running code to test to see if the fixes from Google fix your problem. If you’re getting error messages, paste those messages into Google. If after trying all of these things you’re still stuck, then you should ask for help every time. Rather than give up because you’re stuck, ask questions! Ask Questions 4.0.2 Summary Learning how to learn and asking questions may seem simple when you read this lesson, but in practice it can be tough. It’s hard to admit you don’t know something and it can be difficult sometimes to explain what it is you don’t know. Try anyway! Everyone was a beginner at some point. Those who moved from beginner to advanced did so because they learned the material, practiced and because they asked questions along the way. We’ll remind you of the information included in this lesson throughout the course set because while it’s easy to read the information here, it’s not always easy to remember it when you’re struggling! 4.0.3 Slides and Video How To Learn Slides "],["finding-help.html", "Chapter 5 Finding Help", " Chapter 5 Finding Help In data science and computer-related work in general, it is common to ask for help multiple times per day. While sometimes we ask our colleagues for help in-person, most of the time we search the web. Throughout this coursework it may surprise you just how frequently other people have run into the same problem or had the exact same question you have. Often, there is an answer that was publicly shared previously on the Internet that can help answer the very question you’re asking. There are a number of websites and discussion boards where people frequently ask and answer questions. By knowing how to effectively search the web, you can easily find these answers. 5.0.1 Searching the Internet You’ve been working on the Internet through this coursework so far on the Chrome Browser? Within every Internet browser, you have access to web search engines. These are designed to find the most relevant answers to our question. The most common web search engine is Google. In fact, Google started as a web search engine before it developed any of the other many products it offers today.We can access Google by typing www.google.com in the search bar at the top of the Chrome browser. This will bring you to the Google homepage, where you will see a simple text box and a button called Google search. Google search On the search box, as you start typing your question you will see suggestions based on what you have written so far. This is called Google auto-complete. Here is an example where Google suggests a few common searches that start with “how to find help in”. Google auto-complete The auto-complete feature can be useful because it helps us refine our search query which will lead to more relevant results and answers. Throughout this course work, we’ll be using the R programming language to complete data analyses. Thus, you will often be searching for help related to the R programming language. So, in this example, let’s select “how to find help in r” and then click on the Google search button, we will get a list of websites that are most related to our question as shown below. Google search results Google highlights some of our key terms from our search in the search results list. For example, the word help is bolded twice on the first link title “R: Getting Help with R”. Each search result includes a short title, the web link, a short extract from the website, and some of our search terms (words) highlighted. Using this information we have to decide if our search was specific enough. For example, we could have searched “how to get help”. Google search would have had no way of knowing that we had an R question specifically. Alternatively, searching “how to get help for all the questions I’ve ever had or may have in the R programming language today or tomorrow” is also not ideal. Devising a search with the fewest words that help accurately answer your questions is the goal! We will cover different ways of finding help. Throughout this coursework, you’ll likely learn that part of being a data scientist means being good at Googling. Effectively searching the web is an important skill to have. 5.0.2 Search Guidelines The best way to get a response to your question is to be able to boil it down to relatively few words. Less is usually better…it’s also faster to type too! So, when you’re Googling things, keep a few things in mind: Use the fewest words possible - full sentences and correct grammar are not necessary when searching google Be Specific - include words that are important to your specific search Know specific websites where you can get help - while Google is generally a great place to start, sometimes it can be helpful to know specific websites where you can get help. StackOverflow Basecamp and the RStudio Community will likely be helpful places as you learn to program in R. These resources will be covered in detail in a future course; however, it’s good at this point to know they exist Finding Help Slides "],["account-setup.html", "Chapter 6 Account Setup", " Chapter 6 Account Setup Before we can get started doing fun things with data we need to make sure you are set up to use all of the different accounts that you will need throughout the course. We will tell you briefly what each of these accounts is used for and how to set it up now. If you don’t know what each of these accounts is for exactly, don’t worry! We will walk you through everything you need to know. 6.0.1 Choosing a Username Choosing an appropriate username is important. Some combination of your first and last name is a good idea. For example, if your name were Jane Doe, a username such as “JaneDoe” or “Jane.Doe” would work. If the first username you attempt is taken, you can try another, similar username. In this case, maybe try “JDoe”. But, be sure that whatever name you choose, you would be comfortable sharing it with your boss or family member. Usernames with nicknames or profanity are not a good idea. What to Avoid in Usernames 6.0.2 Using a Consistent Username Remembering different usernames for different accounts is difficult. It is best to make your life easy and use the same username whenever possible. We will make your life easy by using the Google Account you set up in the next section whenever possible. When it’s not possible to log in with Google, then we suggest you try to use the same username for each account. 6.0.3 Accounts To give you an idea of where we’re going, the first account (and arguably the most important account) you set up in the next lesson will be a Google account. After that we will walk you through the steps to get you set up with accounts on: LinkedIn - this is a site to share information about yourself with employers. Twitter - this is a social media site that we will use to share our data science products and get support from the data science community. Basecamp - this is a website where you will be able to chat online with your fellow students and instructors. RStudio Cloud - this is a website where you can use Rstudio, the main tool to learn data science. GitHub - this is a website where we will share the results of our data science projects with each other and the world. Accounts 6.0.4 Slides and Video Account Setup Slides "],["google-account-setup.html", "Chapter 7 Google Account Setup", " Chapter 7 Google Account Setup The first and most important account we need to set up will be a Google account. You will need a Google account to be able to use free Google products. These Google products, such as Gmail, Google Docs, Google Sheets, and Google Slides will be useful in many of the Data Science projects you complete. The Google account will also be useful for letting you get access to other websites we will use in the program. Google Products If you already have a Google account with an appropriate username that you would like to use throughout this course, you can skip the next section and move to the “Log off Guest Chromebook” section. However, it’s probably best to create a new account dedicated to all your Data Science accounts, many of which you will set up in the next lesson. 7.0.1 Getting a Google Login To get a Google account, you will first want to open a new tab in your current Chrome session. To do this, you’ll first click on the small gray box to the right of the tab you currently have open. Google website Once this new tab is open, type in ‘www.gmail.com’ in the web address bar at the top of your Chrome session. After clicking enter, you will be brought to a Login screen. Here, you will click on “More options” Google Sign in You will then click on “Create account” to start the process of getting a Google Login. Google Create Account Begin filling in the blank spaces in the box to the right with your information. Google will alert you if the username you’ve chosen has already been taken. Once you’ve filled out all the blanks, click on “Next Step” at the bottom right. Google Blank Form You’ll be asked to read the “Privacy and Terms.” To scroll through the entire document, click on the blue arrow in the middle at the bottom of the document. After reading over the Privacy and Terms, click “I AGREE” to continue. You will then be asked to verify your account. To do so, ensure that a valid phone number for you is in the ‘Phone number’ box. Select whether you prefer to be contacted by “Text message (SMS)” or ‘Voice Call’. Click ‘Continue’ once the information has been entered. You will then be sent a verification code by text message or by phone call, depending on your choice to this question. Enter the verification code into the box on the screen and click “Continue”. Congratulations!! You now have a Google username and account! Be sure to remember your username and password! This will be used for your email address (Gmail) and all other Google products. Google Welcome! 7.0.2 Log Off Guest Chromebook At this point, you’ll want to log off the Chromebook you’re using as a Guest and sign in using your Google Username. To do so, click on ‘Guest’ at the very bottom right-hand of the screen. Click ‘Exit guest’ on the screen that pops up. This will log you off of the Chromebook so you can re-login in using your Google account. Chromebook Log Off 7.0.3 Re-Login using Google Account You will now be on the Chromebook login screen. To sign in using your Google account, click ‘Add person’ at the bottom of the login screen. Chromebook Add Person A ‘Sign in to your Chromebook’ screen will open. Chromebook Sign in Enter your new Google account name here. Click ‘Next’. Enter your password. Click ‘Next.’ You will now be logged on. Anytime you work on this Chromebook now, you will simply log in using your new Google account. 7.0.4 Slides and Video Google Account Setup Slides "],["other-accounts-setup.html", "Chapter 8 Other Accounts Setup", " Chapter 8 Other Accounts Setup In addition to having a Google username, there are a number of other accounts to which you’ll need access. By the end of this lesson, you will have set up a number of different accounts. While this may seem like a lot of work now, it will get you set up with all the accounts you’ll need throughout this series of courses. The time you spend now will pay off later! Right now, we’ll walk through each one briefly, get you set up with an account, and discuss what the account is used for. 8.0.1 LinkedIn Account LinkedIn is a social networking site for employment. Think of it as Facebook for getting a job. It allows you to put your qualifications online (like an online resume), has a space where you can look for jobs, and can put you in contact with employers. Don’t worry about the details now. Through this program, you will have the chance to set up your LinkedIn gradually. For right now, we’re just worried about getting this account set up. To begin set up, you’ll go to the web address bar in your Chrome browser. You will type www.linkedin.com and hit ‘Enter.’ LinkedIn website This will bring you to LinkedIn’s login screen. On this screen you’ll begin filling out the boxes in the middle of the screen. Be sure to use the Gmail username you just created in the last chapter when asked for your Email address. Choose a password that cannot be easily guessed by someone else. Once the four boxes are filled in, click “Join now”. LinkedIn Blank Form A screen may pop up asking you to verify that you’re not a robot. Whenever this happens, just click on the empty square box to let the computer know you’re a real person. Not a robot After clicking “Join now” (and maybe after you verify that you are a human) you will be brought to a new screen. Here, at the top, it will show you that you almost have a LinkedIn login but that first you have to confirm your email address. To do so, you will open a new tab at the top of the Chrome browser window. You will then type in ‘www.gmail.com’ and click ‘Enter.’ gmail website This will bring you to your email account. An email from ‘LinkedIn Messages’ should be there. Click on that email to open it. Verify email from LinkedIn In that email there will be a button where you can click to ‘Confirm your email’. LinkedIn Confirm Your Email This will open a new screen where your google username will be in the box already. Click ‘Continue’ on this screen. LinkedIn Continue While other boxes may pop up for you to go further on LinkedIn and get your profile set up, this is all you have to do for now. You now have a LinkedIn username and account! We will now go through similar processes for the other accounts needed in this program. 8.0.2 Twitter Account The second account you will need will be a Twitter account. You may already be familiar with Twitter; however, data scientists tend to use Twitter for work rather than socializing. Twitter is a social media platform where users can “post and interact with messages.” These messages are known as ‘tweets.’ Twitter is a great place to learn new things, connect with other data scientists, and to ask/answer questions quickly. You will need a professional Twitter account for our program. If you already have a Twitter account you use for personal tweets and communicating with friends you should still create a new, professional account where you will only post professional links and interact with other data scientists. To get a Twitter account, first type ‘www.twitter.com’ in the search bar at the top of your Chrome session. Twitter website This will bring you to a screen where at the top right you’ll want to click ‘Sign up’. Twitter sign in This will bring you to a screen that prompts you for some information and asks you to create a new password. After filling out the information, you will click ‘Sign up.’ Twitter sign in You will be brought to a screen asking for your phone number. After entering your phone number, you will click ‘Next.’ Twitter phone number This will bring you to a screen where you will choose a username. This will be what your Twitter ‘handle’ will be. For simplicity, it would be best for your Gmail username and Twitter handle to be the same (ie if your Gmail address is Jane.Doe@gmail.com, ‘Jane.Doe’ would be a great Twitter username). If that name is unavailable, choose a different, but appropriate and simple, Twitter username. Once you have chosen a Twitter username, click ‘Next’. Twitter username At this point you will be brought to a screen that will have a button saying ‘Let’s go!’ This will lead you to set up your profile further, which is not needed at this time. Instead, go to your gmail, look for an email from ‘Twitter’ and click on the email. Twitter Let’s go! In this email, there will be a ‘Confirm now’ button to click. To verify your Twitter account, click on this button. Twitter Confirm now Congrats! You now have a Twitter account! 8.0.3 Basecamp Account Slack is a place where teams of people can easily communicate and work together on a project. As a data scientist, you are often working in a group on a project. Basecamp is a place where everyone working on that project can communicate. Basecamp is where communication throughout this course will happen. You will be able to ask questions, answer questions, and communicate with others on Basecamp about the things you are learning and the projects you are working on. To get a Basecamp account, you will first open a new tab in your browser by typing ctrl and t. Once you have a new tab open, you will type ‘www.Basecamp.com’ at the top of your browser in the web address bar. Basecamp Web Address On this webpage, type your Gmail address in the ‘email address’ box, and click ‘GET STARTED.’ Basecamp Get Started! We won’t be signing into any workspaces yet; however, later in the program, when we do, you will have an account! That’s all you need to do with Basecamp for now! 8.0.4 RStudio Cloud Account As a data scientist A LOT of your work will be done in something called RStudio. In this program, you will be learning the basics of the programming language, R. R is a free programming language for statistical computing and graphics. In other words, the code you write to work with data will all be done in R. RStudio Cloud is the place (or ‘platform’) where you will type this code and make basic plots. Luckily, RStudio Cloud makes it easy to sign up. You will first go to ‘rstudio.cloud’. Note: This web address does not start with ‘www.’ rstudio.cloud web address This will bring you to a screen where you can click on ‘Get Started.’ This will bring you to a login screen where, instead of typing in your information, since you already have a Google account, just click on ‘Sign up with Google.’ rstudio.cloud sign up with Google You will be prompted to choose which Google account you want to use. Choose your professional Google account. Then, you will be brought to a screen where you will have to enter a username. Again, for simplicity, try to use the same username across all accounts. rstudio.cloud choose account Then, click ‘Create Account’ and you’re all set! You now have an RStudio Cloud account! 8.0.5 GitHub Account GitHub is a website that hosts computer code and allows for version control. We’ll get back to what version control is later, but as for now, know that GitHub is where you’ll be ‘saving’ all of the code you write. It’s also a place where you can look at other people’s code. And, throughout this program, you’ll realize that you can learn a lot from other people’s code! To get a GitHub account, first type www.github.com into the web address bar at the top of your Chrome window and hit ‘Enter’. GitHub web address You will be brought to a page where you should fill in your information. As with the other accounts, try to use the same Username if possible. Enter your Gmail Email address. And, create a password that cannot be easily guessed by others. Then, click ‘Sign up for GitHub.’ One final note about GitHub usernames in particular. This will be used for your website (which you’ll build later) and all the code you write. You’ll use GitHub a lot, so this is a case where it is particularly helpful to choose a good username, particularly one that has something to do with your name and not much else. For example, the person writing this lesson is named Shannon Ellis. Her GitHub username is “ShanEllis.” While it is possible to change your GitHub username down the line, it’s a bit of a pain, so choose wisely now! You now have a GitHub account and all of the online accounts needed for this program! 8.0.6 Slides and Video Other Accounts Setup Slides "],["your-first-data-science-project.html", "Chapter 9 Your first data science project", " Chapter 9 Your first data science project We are using this definition of data science. “Data science is asking a question that can be answered with data, collecting and cleaning the data, studying the data, creating models to help understand and answer the question, and sharing the answer to the question with other people.” Rather than try to explain data science with examples made by other people, we are going to show you the process of data science through a project that you will complete. The first step in any data science project is to come up with a question. You are taking this course on Leanpub. Leanpub is a website where you can sell books and courses. For this first project the question we are trying to answer is: “How does the price of a bestselling book relate to how much the author is charging for that book?” This question isn’t about data. It is just something we might be curious about. In this case, if you were going to write and sell a book on Leanpub you might want to know what price to pick in order to try to sell the most books. Many good data science questions don’t start out with data. They are just questions you wish that you knew the answer to. Later, you try to find out if there is data to answer your question. In this case, to answer our question, we need some information on books on the Leanpub website. If you go to https://leanpub.com/bookstore you will see a website that looks like this. Leanpub bookstore website This shows the bestseller books for the last week. If you click on one of the pictures of a book you can get some information on that book. If I click on the page for the first book “PowerShell 101” I see something like this. Powershell 101 landing page on Leanpub It will probably be a different book for you since it will be a different weekly bestseller. But you can look in the top left corner and see how many people read the book. This information is there for most books, but is sometimes missing if the author decides not to publish that number. In this case there are 1,036 total readers of this book. Number of readers for Powershell 101 Next we can find out the suggested price. This is on the right hand side and is the price the author thinks is the appropriate price for their book. In this case the suggested price is $15.99. Suggested price for Powershell 101 But one nice thing about Leanpub is that you can set up a “pay what you want” model where people can choose how much they pay for a book. When authors do this, there is also a minimum price they set for the book. If there is a minimum price it is also on the right hand side. In this case the minimum price is $7.99. Minimum price for Powershell 101 We could do this for each book and then we’d have a nice data set that would tell us something about the number of readers for a book and the price of that book. Then we could start to look at the numbers we collected and see if we see any patterns to the data that we have collected to try to answer our question. We’ll go through the steps necessary to do all of this and answer the project question “How does the price of a bestselling book relate to how much the author is charging for that book?” in the following lessons. 9.0.1 Slides and Video Your First Data Science Project Slides "],["google-sheets.html", "Chapter 10 Google Sheets", " Chapter 10 Google Sheets Google Sheets is a free, online spreadsheet program. If you’re familiar with Excel, it is similar to Excel. If you are unfamiliar with Excel, that’s ok! We’ll go through everything you need to know to get started on the project here. And, later in the program, we will go into more details to get you fully comfortable working with Google Sheets. As for right now, just know that when you have data that you want to input into a spreadsheet, Google Sheets is an ok place to start. Google Sheets is also great because you never have to worry about saving your work. If you are online, Google Sheets automatically saves your work. 10.0.1 What is a spreadsheet? A spreadsheet is a type of document where data are stored in rows and columns of a grid. Each square is referred to as a ‘cell’ in the spreadsheet. In Google Sheets (and many other spreadsheet programs like Excel), the rows are numbered (like 1,2,3,…) and the columns are labeled with capital letters (like A, B, C,…). spreadsheet If you want to talk about a specific spot on the grid you can use the number and letter corresponding to that point. For example, A2 specifies the data in cell in the first column (A) and second row (2) of the spreadsheet. spreadsheet position When you are working with data in a spreadsheet you can type directly into the spreadsheet. It is important to make sure you double check all the numbers you type since there isn’t a good way to “spellcheck” your work when you are editing a spreadsheet. We will talk a lot more in future courses about how to organize data that you have collected. Mostly we will want to collect “tidy data” which is data that has Each type of data in one column. Each data point in one row. One spreadsheet for each “kind” of data. If you have more than one spreadsheet, they should include a column in the table that allows them to be linked. Here we are only collecting one “kind” of data - just data on books. The columns will be different types of information about the books. We will collect information on the name of the book, the number of sales of that book, the minimum price of the book, and the suggested price of the book. Each of those will be in a separate column. Then, for each book, we will make a new row with the data for that book. Remember we are collecting information on the bestselling books from the last week on Leanpub. You can find the list of bestsellers here: https://leanpub.com/bookstore. Remember that if you click on the image of one book you will get something that looks like this. Powershell 101 landing page 10.0.2 Setting up your spreadsheet When we collect the information we will use the Google Sheets software to store it for us. You will need to open up another web browser. You can do this by holding down the key ctrl and pressing t. This will open up a new tab. Leave this page open and type go to Google Sheets by navigating to the website https://docs.google.com/spreadsheets/ in the new tab. You will see something like this. Google sheets home Now click on the big plus sign and you will get a new spreadsheet that will look like this. Untitled sheet If you click on the words “Untitled Spreadsheet” you can rename the spreadsheet. Type in the words “leanpub_data” to change the name of your spreadsheet. You should now have a spreadsheet that looks like this. leanpub_data sheet We are almost done setting up the spreadsheet, now we just need to label the different kinds of data we are going to collect. Start by clicking on the upper left hand cell (A1) and type “title”. This will be the column where we are going to store information on the title of the book. leanpub_data sheet with title Then move one cell to the right, click and type “readers”. This will be where we will store how many readers a book has. Move one more cell to the right type “suggested” and then one more cell and type “minimum”. Make sure your column names are not capitalized. leanpub_data sheet with headers 10.0.3 Collecting data Now you are all set to start collecting data! To do this open another new tab by holding ctrl and pressing t, then go to the webpage: https://leanpub.com/bookstore. Click on the book and write the title, number of readers, suggested, and minimum prices on a row in the spreadsheet tab. When you are doing this make sure that: There are no commas in numbers. Just leave them out. So don’t write “1,036” write “1036” instead. You don’t put dollar signs for the price, just include the number like “7.99.” If a book’s minimum price is free, enter “0” in the cell. If the book has no readers, put “0” in the cell. If the book’s author opted not to include how many readers their book has, put “NA” in the “readers” column for that book. So for me, since the first book is “PowerShell 101” after getting the data for the first book my spreadsheet will look like this. First row of data for project Continue this process, entering each book into a new row. Collect information on ten or twenty books. One book for every row. At the end you should have a data set that looks something like this. But yours will have different numbers and names in it. First complete data set 10.0.4 Checking your data Now that you’ve entered your data into the Google Sheet, we want to check for a few possible issues before moving on to make sure the data are formatted correctly. Double to make sure the following are true for the data in your spreadsheet: You have at least 11 rows with reader and minimum price information (one header row and at least 10 books included - if you have NAs anywhere, you’ll want more than 11 books) Your dollar amounts do NOT have dollar signs next to them. Your number of readers does not include any commas. If a book’s minimum price is FREE, you have put the number 0 in the cell, rather than “FREE” Checking your data This is great! You now have a question you want to answer and you have collected some data to answer that question. You are on your way to becoming a data scientist! 10.0.5 Publishing to the web Our plan is to use the data in this spreadsheet to answer our question about how the price of a bestselling book relates to how much the author is charging for that book. To do so in the next lesson, you will first have to publish the data to the web. This gives the software we’ll use in the next lesson permission to access your data. to make your sheet public, you’ll want to click on File at the top of the Google Sheet. From the drop-down menu that appears, you’ll want to click on “Publish to the web.” Publish to the web… In the window that pops up, you’ll want to click on “Publish” Publish A box will appear to confirm that you would like to publish this Google Sheet. Click “OK.” OK 10.0.6 Making the sheet public After publishing your data to the web, the last step is to make these data accessible to others who have the link.This can be done easily on a Google Sheet by clicking on “Share” in the top right-hand corner of the Google Sheet. Share A “Share with others” box will pop up. Click on “Get shareable link.” Share with others Your screen will update so that this document can now be viewed by anyone, as long as they have the link to the spreadsheet. Shareable Congrats!! You have successfully made this spreadsheet shareable and the link has been copied. You’ll be asked to paste this link in the quiz for this lesson, and we’ll use this spreadsheet link in the next lesson when you get started using RStudio Cloud, so don’t close your Google Sheets tab quite yet. 10.0.7 Slides and Video Google Sheets Slides "],["rstudio-cloud.html", "Chapter 11 RStudio Cloud", " Chapter 11 RStudio Cloud The main software that we are going to use to analyze data in this class is called R. R is a piece of software that lets you write computer code to analyze data. RStudio is a company that makes a piece of software that works with R. RStudio makes it easier to create, save, share, and work with R code and data sets. R is one of the two most popular languages for data science. We will learn a lot more about it throughout the courses, but here we are just going to use it to take a peak at the data you have created. If you have a more traditional laptop you can download and install R and RStudio on your laptop. But this class is part of our DataTrail program where we will be teaching you how to do everything through a web browser. Fortunately RStudio also offers a web-based version of their software called RStudio Cloud. In a future class we will go into much more detail about RStudio and RStudio Cloud. For now, we will just go over the basics and then use RStudio Cloud to do a very basic analysis of the data you collected in your Google Sheet. Using RStudio Cloud we will give you all the commands you need to run to complete this project. Don’t worry if this seems a little foreign, we are going to learn a lot more about it later! Just follow the steps and you’ll end up with your very first plot! 11.0.1 RStudio Cloud Basics Before we get started with the data you collected, we’ll explain the basic components of RStudio Cloud. There are four main components in an RStudio Cloud window: the scripting area, the Console, the Environment, and the Files directory. We’ll briefly discuss each part now and go into a lot more detail later. Four RStudio Cloud components First, in the top left-hand portion of the window, the scripting area is where you will see code to run in your first project in a few slides. In the future, this will be where you will type all your code. The code typed in this space can be saved and re-run later whenever you need it. Scripting RStudio Cloud In the bottom left-hand portion of the window is the Console. This is where the code you type in the scripting window above will actually run. You script what you want to happen in the scripting window. In the Console, what you wanted to happen actually happens. Console RStudio Cloud The coding language R is an object-oriented programming language. This means that when you code, objects are created. We’ll talk in detail about what that means later. However, any objects that you create while coding will be listed here in the Environment section in the top right-hand portion of the RStudio Cloud window. Environment RStudio Cloud The fourth component is at the bottom on the right-hand side of the window. Here, any files or folders you create, such as the scripts you save, will be listed. Files RStudio Cloud You’ll also note that there are multiple tabs in each of these sections. We’ll talk about the other tabs shortly; however, we’ll note now that in the bottom right-hand section, there is a “Plots” tab. If you were to click on that you would simply see an empty blank space because you haven’t made any plots yet. However, when you do the project you’ll be generating a plot. The plot you create will show up in this tab. Plots RStudio Cloud 11.0.2 Data Science Project in RStudio Cloud Now that you’re a little familiar with RStudio Cloud, we can get started on using the data you collected from Leanpub and entered into your Google Sheet spreadsheet. We’ll then be one step closer to answering the project question “How does the price of a bestselling book relate to how much the author is charging for that book?” To start working in RStudio Cloud, open up a new tab by pressing ctrl and pressing t, then copy this URL and paste it into your web browser https://bit.ly/datatrail-rstudio. If you get a log in page, press the button to “Log in with Google” just like you did when you were setting up your account. You should now see a page that looks like this. You should see a Project listed that is called “leanpub_project”. RStudio Cloud projects home page On the right-hand side, you should see an icon to “Copy” the project. Click on this icon. RStudio Cloud new project You should now see a page that looks like this across the top. RStudio Cloud project page You’ll first want to title your project. Click on ‘leanpub_project’ at the top and begin typing. Title it with ‘leanpub_project_lastname’. So, for example if your last name were Doe, the project would be titled ‘leanpub_project_doe’. You’re ready to get going! RStudio Cloud project named You are now using the RStudio software! The first thing that you should do is go to the bottom right hand side of the screen and click on the file called “leanpub_googlesheets_analysis.R”. RStudio Cloud project R file This should open up a file full of code in the top left-hand portion of the screen. Your screen should now look like this. RStudio Cloud project page with script open This file already has computer code in it. That computer code will read the data from the Google Sheet you have created and make a plot. If you scroll through this code you will see likes that start with “#”. Any time you see a line that starts with a pound sign (#) in code is a comment. This is text that is added to explain to anyone looking at the code what the code does. The rest of the text in this file tells the computer what to do. Using this code, we’ll do a few things: Get things set up. The details aren’t important now, but we’ll definitely get into them later in the series. Read in the Google Sheet you generated. Check to make sure that the data are in the correct format. Make a plot that will look at the relationship between the number of readers and minimum price for Leanpub books. In the future, you’ll learn how to write this code. For now, all the code is available to you. All you should have to do to make this work is copy the public URL for the Google Sheet that you made in the last chapter of the course. To do this, scroll through the code in the top left-hand panel of RStudio Cloud. Find the place in the computer code that says “PASTE_YOUR_GOOGLE_SHEET_LINK_HERE!”. rstudio.cloud with leanpub_googlesheets_analysis.R with PASTE_YOUR_GOOGLE_SHEET_LINK_HERE! Delete ‘PASTE_YOUR_GOOGLE_SHEET_LINK_HERE!’ and paste your URL. One thing to keep in mind is that when you copy the URL from the top of your Google Sheet OR from the blue ‘Share’ button at the top right-hand side of the screen, the link will have a little extra information at the end. After pasting the copied URL into the code, you’ll want to delete the tail-end of the URL starting at ‘/edit’. Below you will see what should be included in the pink box at top or the pink text of the link below. Everything after ‘/edit’ should be deleted. RStudio Cloud with URL edited Your code should look something like this now: RStudio Cloud with leanpub_googlesheets_analysis.R with personal URL Now you should be ready to run your code! You can do so all at once by highlighting all the code in the “leanpub_googlesheets_analysis.R” script. Then, you would find the button that says “Run” at the top of the code file and click on that button. RStudio Cloud run code You should see code running in the bottom left-hand panel. As code runs, there will be some output in red text, letting you know that the code is running. This red text does not mean anything is wrong. Note that red text in RStudio sometimes is an error, while other times it is just providing you with information. If it says error, than it’s an error. But, don’t be alarmed that red text is appearing on your screen. If the code runs, a plot should appear on the lower right hand side. RStudio Cloud with plot If a plot does not show up, there are errors. The first place to check for errors is in your ‘leanpub_googlesheets_analysis.R’ code file. Errors in code formatting in RStudio are marked by a red ‘X’ to the left of any code lines that have errors. For example, if you copy and pasted your Google Slides link but accidentally deleted the second set of quotes before the final parenthesis, a red X would show up, showing you which line has the coding error that needs to be fixed. RStudio Cloud code error in leanpub_googlesheets_analysis.R If you don’t see any red Xs in your code, there is likely an error with how you formatted your spreadsheet. The errors will appear in the bottom left-hand Console panel. Scroll through the text there to see if any of the error messages help point you to what mistake may have been made. Then, edit your spreadsheet in Google Sheets and re-run all the code again. RStudio Cloud after running the code in leanpub_googlesheets_analysis.R Once you have your plot, you have what you need to make the Google Doc and finish your project in the next lesson. Keep this tab open so that you can copy your plot in the next lesson! 11.0.3 Slides and Video RStudio Cloud Slides "],["getting-help-with-a-chromebook.html", "Chapter 12 Getting Help with a Chromebook", " Chapter 12 Getting Help with a Chromebook Chromebooks have the advantage of being very simple. You are going to do almost everything through the Internet browser. This minimizes many issues that laptop computers had historically. However, there are still issues that you will run into from time to time. We’ll discuss them below and describe where you can find help for these problems. 12.0.1 Common Issues Common Chromebook Issues generally fall under one of the following categories: Operating Systems Issues Internet Connection Problems Google Account Login All of these issues are addressed among Google’s Chromebook help pages. Chromebook Support Page Below we’ll demonstrate how to step through finding answers among this documentation; however, a few good things to consider before going to the help documentation are: did I type that web address correctly? Am I getting this error because of a mistake I made? If it is, fix that mistake and move on! Have I restarted recently (within the past week or two)? If not, now may be a good time to consider restarting to see if the issue still exists. If restarting doesn’t work or you can’t find a mistake, it may be time to consult the Chromebook Support documentation. We’ll walk through how to do that below. 12.0.2 Chromebook Support In addition to addressing common issues above, Google has a place where Chromebook users can go for support. At https://support.google.com/chromebook, you can search for answers to questions others have already asked or ask new questions. For example, if you were struggling to connect to the Internet on your Chromebook, you could first click on ‘Connect your Chromebook’ among the list of help topics. Connect your Chromebook This will expand the list to expose a number of topics of interest. If you were struggling to connect your Chromebook using Wi-Fi, you would click on ‘Connect your Chromebook to Wi-Fi’ Connect your Chromebook to Wi-Fi This would open a new web page with step-by-step instructions to help get you connected to wifi. Wi-Fi Connection Help Page If you don’t see what you’re looking for immediately among these topics, you can use the search bar at top. Search Bar By typing in the issue you are having in the search bar at the top, you can be directed to questions others have previously asked. For example, if you want to learn how to add an extension, you could type ’add extension in the search bar. As with most Google search bars, Google will try to provide helpful suggestions of topics you may be interested in. You can click on this if it matches what you’re interested in Add Extension Search Bar As before, a page with helpful steps to help solve your problem will show up. Adding Extensions Finally, if your topic isn’t here or doesn’t pop up, you can search additional questions asked in the ‘Help Forum.’ To access the help forum, click on ‘HELP FORUM’ at the top right hand of the page. Help Forum Button This will bring you to the Chromebook Central Help Forum. Chromebook Central Help Forum Always begin by searching for your topic to see if it has already been asked and answered using the search bar at the top. However, if you have a new question, you are welcome to start a new topic using the button at the top right. NEW TOPIC Clicking on the red ‘NEW TOPIC’ button will bring you to a new window where you can write out your specific question. Once you have asked your question as clearly and with as few words as possible, click ‘POST’ at the bottom right-hand of the screen so that others will be able to help you out by answering your question. New Topic Empty Box You’re now all up-to-date! 12.0.3 Slides and Video Getting Help Slides "],["google-docs.html", "Chapter 13 Google Docs", " Chapter 13 Google Docs Like Google Sheets, Google Docs is an online and free program, but instead of being used to create and edit spreadsheets, Google Docs is a place where you can create and edit word documents. Google Docs is similar to Microsoft Word, for those who are familiar. For those who aren’t, Google Docs is somewhere you can type notes or any type of text. Like Google Sheets, Google Docs will automatically save your work anytime you are connected to the Internet. 13.0.1 Getting started in Google Docs To begin, you’ll open a new tab by typing ctrl and t at the same time. In the web address bar you’ll go to ‘www.docs.google.com’. This will bring you to the homepage for Google Docs. To get started with a blank document you’ll click on the ‘Blank’ document at the left top of the screen. Google Docs Home This will open a Blank Google Doc. You’re now ready to get started working in Google Docs. Blank Google Doc 13.0.2 Using Google Docs You could just start typing in the document; however, for your Leanpub data science project, you’ll want to first change the name of the document. To do so, click at the top of the document where it says ‘Untitled document’ and type leanpub_project_lastname. So if your last name were Doe, the title of this document would be ‘leanpub_project_doe.’ Google Doc named project In this document, you’ll want to include a short summary about what question you were asking, what data you collected, and where these data were collected from in a section titled “Summary”. You’ll then want to paste your results and explain what you see in the plot you generated in a “Results” section. Finally you’ll conclude how the price of a bestselling book relates to how much the author is charging for that book in a “Conclusion” section. Google Doc Report sample In order to get the plot to paste into your report, you’ll start a new tab by typing ctrl and t at the same time and going to https://bit.ly/datatrail-rstudio. You should see your project here. You will click on that project. The analysis you already carried out will be here. To copy the plot you generated, click on ‘Export’ in the ‘Plots’ tab in the bottom right-hand of the RStudio window. Export in rstudio.cloud Then, click on ‘Copy to Clipboard.’ Copy to Clipboard Your plot will pop up in a new window. Plot in rstudio.cloud With your cursor over the plot that pops up, you will then tap the mouse keypad with two fingers at the same time to bring up a new menu. On this menu, select, ‘Copy Image.’ Copy image in rstudio.cloud You can now return to Google Docs, place your cursor where you’d like the plot to go, tap the mouse keypad with two fingers at the same time to bring up a new menu, and click ‘Paste’ to paste your plot from RStudio Cloud in your Google Doc. Paste in Google Docs Your plot will now be in your Google Doc! Plot in Google Doc 13.0.3 Sharing Your Google Doc Google Docs are helpful to data scientists because they will not only allow you to keep notes about what you have done and what you have found from your analyses, but they will allow you to share this information with people you work with, which is critically important to data scientists. So, the last thing we’ll do is get the link so that you can share this document with others. You will paste this link in the quiz at the end of this section. To get this link, you’ll click on the blue ‘Share’ button on the top right-hand section of the Google Doc. Share Google Doc A ‘Share with others’ box will pop up in the middle of the screen. Click on ‘Get shareable link.’ Shareable Link A new screen will pop up informing you that your link has been copied. This is the link you will paste by pressing ctrl and v in the quiz below when asked for your Google Doc link. Congrats! You’ve completed your first report from a data science project! 13.0.4 Slides and Video Google Docs Slides "],["google-slides.html", "Chapter 14 Google Slides", " Chapter 14 Google Slides Google Slides is the last Google product we will discuss today. It is a place to make free, online presentations. Similar to Microsoft PowerPoint, Google Slides allows users like you to create presentations to communicate findings from a project to a general audience. However, unlike PowerPoint, fortunately your work is saved automatically whenever you are online, and it’s free! As a data scientist, you are frequently required to present your findings. Sometimes that is in the form of a report, such as the Google Doc you made in the last section. However, very often, you are required to make a slide presentation. Here, we will discuss what a slide presentation is and some features of a good slide presentation before you make a brief presentation about your Leanpub data science project. Slide presentations are often used to present to a group of people. You as the analyst would be explaining what is on the slides out loud and using what is on the slides to support what you are saying. This means that every detail of the analysis does not have to be on the slide. You can use what you say out loud to fill in the details. 14.0.1 What is a slide presentation? A slide presentation is a presentation that consists of multiple slides. Each slide is there to get a smaller message across so that when all the slides are viewed in order, they tell a story. As data scientists, the story we are most often telling is the story of an analysis. This typically starts with a question, then explains the data collected to answer the question, followed by an explanation of the analysis, and concludes with the results and conclusions drawn from the analysis. Each part of this story will typically have at least one slide to explain that part of the analysis. Here we will discuss how to get started in Google Slides and then make a short presentation. 14.0.2 Presentation Guidelines We’ll go into more details later, but there are three things to keep in mind anytime you are making a slide presentation: 1. Pictures are often better than words. 2. Minimize the number of words on each slide. 3. Make the font and pictures big enough to be seen when presentation is projected. 14.0.3 Getting started in Google Slides To get started, open a new tab in your browser by holding down ctrl and t at the same time and going to ‘slides.google.com’. This will bring you to the Google Slides home page. To start a new presentation, click on the “Blank” presentation at left. Google Slides Home This will open up a blank and simple slide where you can begin to work on your presentation. Google Slides Blank presentation Similar to the Google Doc you created, you’ll want to rename this file. To do so, click on ‘Untitled presentation’ in the top left-hand corner of the presentation. Again, title this slideshow using your last name. For example, if your last name were Doe, you would title this ‘leanpub_presentation_doe.’ You’re now ready to get ready working on your first slide! Google Slides rename file 14.0.4 Making a simple presentation Keeping the presentation guidelines we discussed earlier in mind, you’ll now start to make a short (approximately 4 slides) Google Slides presentation. To begin, you’ll want a title slide. To change the title, click on the slide where it says ‘Click to add title’ and then begin to type the title of your slide presentation. Google Slides Blank slide A reasonable title would be ‘Leanpub Data Science Project.’ You’d then want to include who did the analysis as a subtitle. By clicking ‘Click to add subtitle’ you can then include your name on your presentation. Google slide with title and name If you wanted to change the font size of any of the text to make it bigger or smaller, you would highlight that text and then click on the font size at the top of the menu to display a drop down menu. Font size can be selected from this list or typed in that box directly. Change font size on Google Slides You can use a similar process of highlighting text and then selecting from the toolbar to change formatting in a number of other ways. You can change the font of the text, make the text bold, italicize the text, underline the text, or change the color of the text as well. other formatting options on slides Once you’re happy with how your title slide looks, you’ll want to start working on the next slide in your presentation. To start the next slide, you’ll click the plus sign at the top left-hand portion of your Google Slides presentation. Google Slides new slide A second slide in your presentation will appear. You can add text to this slide the same way you did on the title slide. Pictures can also be copy and pasted into your Google Slides. Google Slides second slide You will want to create a Google Slides presentation with approximately four slides summarizing the Leanpub data science project you have been working on. These slides should include * Title slide * The question you were asking in your data science project * Information about how the data were collected, where the data came from, and what data were collected * The results (including your plot!) and conclusions from your analysis 14.0.5 Sharing your Google Slides Presentation Once you’ve finished creating your Google Slides presentation, you’ll want to make sure it can be shared with others. This will be the same process as in Google Sheets and Google Docs. To make the presentation shareable, you will first click the Blue ‘Share’ button at the top right-hand side of the slide. Google Slides share A ‘Share with others’ window will pop up. Here you will click ‘Get shareable link’. This will bring up a new box indicating that your link has been copied. This is the link you will paste when asked by the quiz at the end of this lesson for your Google slides link. Google Slides shared 14.0.6 Slides and Video Google Slides Slides "],["what-is-a-chromebook.html", "Chapter 15 What is a Chromebook", " Chapter 15 What is a Chromebook This course is part of “DataTrail”; however, it is not a required course in this Course Set. While not required for completion of the DataTrail course set on Leanpub, it may be very helpful to you! It’s not required because you don’t need a Chromebook to complete the courses. The only requirement for all of these courses is an Internet browser and connection to the web. However, if you have a Chromebook and want to get better acquainted with how it works, this course is for you! Chromebooks are a very specific type of computer produced by Google. Chromebooks aren’t exactly like normal computers and they have a few unique characteristics: They are usually very cheap They are designed mostly to use the web You don’t “install” any software on the computer itself Instead of “apps” and “software” you simply go to websites for your work A simple way to think about it is that a Chromebook is a computer that only lets you use an Internet browser like Chrome. You can’t really do much on the computer itself. Some people call this way of working - working only through the Internet - “cloud computing”. It’s called cloud computing because the computer you are using most of the time is not the one sitting in front of you. You are using the Internet to access tools and computers to do your work. But the physical computers doing the work are stored somewhere else - it could be nearby or on the other side of the globe. That is why people call the computers “in the cloud”. The goal of DataTrail is not that you have to use a Chromebook to finish the program, it is just that you could use a Chromebook to finish the whole program. You can finish the entire sequence of courses using any computer with an Internet connection and a web browser. Doing everything through a web browser has a couple of advantages for a training program like this: All Chromebooks have the same system so if you log out of one Chromebook and log onto another you will always see the same system (unless there has been an update to Chrome OS that affects all Chromebooks). Since everything is stored on the Internet (sometimes called “in the cloud”) then the Chromebook will always be set up with your preferences when you log off and log back on. Everyone is using the same software through the websites, so it reduces problems that come from different people using different versions of each computer program on different operating systems. Since Chromebooks are cheap and widely used, we expect many of the students who work on the class will use actual Chromebooks. In this course we will show you a little bit about how Chromebooks work, focusing on the Chrome OS operating system. If you are used to using a “normal” computer it can take a little getting used to to adapt to a Chromebook. A couple of things that you will likely do differently are: File storage: You won’t have much room for files on the computer itself, so you won’t store them on your laptop, you will store them on “the cloud” in Google Drive or Dropbox. Software: You won’t install any software on your local computer. You will instead make accounts on different websites or “web apps” that let you use tools through your web browser. For example you wouldn’t install a Twitter app on your computer, you’d browse to the Twitter website to use that software. If you restrict yourself to only working in web browsers, doing everything will feel a little weird at first. It is sort of like writing a Haiku - a type of poem with a very specific set of rules. When you first start writing these poems it can be difficult to remember the rules. But after you get used to it the rules begin to come much more naturally. In a similar way, using a web browser for everything becomes second nature after a period of “learning the rules”. Using Chromebooks to do data science is a relatively new idea and is only possible in the last few years. But increasingly the tools for doing data science are available through the web. It is more and more common to have to use the Internet to rent computers, do analyses, or distribute your results. So by learning to do data science on a Chromebook, you are preparing for a future where most analysis is done online. 15.0.1 Slides and Video What is a Chromebook Slides "],["chrome-browser.html", "Chapter 16 Chrome Browser", " Chapter 16 Chrome Browser A Chromebook is designed to primarily be an Internet browser. In other words, it mostly will only allow you to open up websites and navigate between them. Chromebooks use Chrome OS - this is like Windows on a Microsoft computer, Android on your phone, or OS X on your Apple computer. It is the main software that runs your computer. But unlike “normal” computers Chrome OS basically only allows you to use an Internet browser. Chromebooks use Google Chrome, Google’s Internet browser. When you are using a Chromebook, almost all of the time you will be interacting with the world through Chrome. When you have opened up your Chromebook you will see something like this. Chromebook opening screen The first thing you notice is that there is nothing on the “Desktop” and that all the “apps” are linked to from the bottom of the screen. This is called the “shelf” on a Chromebook. All the apps are basically just links to websites. To open a new Chrome Browser you can either click on the Chrome icon in the lower left of the screen or you can hold down the Ctrl key and press the n key. We write this combination of keys as Ctrl+n. If you do that you’ll see a new Chrome browser pop up. Chrome browser Here you can navigate to new websites and do all the usual things. At the bottom of the page are websites you visit frequently. In Chrome if you press the little square box (or boxes) in the top right hand side it will either maximize the size of a browser to fill the whole screen, or shrink it enough that you can drag the browser around. Chrome browser Click that box until the browser doesn’t fill the whole window. You can then create a second browser window by again using the Ctrl+n command. Multiple Chrome browsers If you want to do more than one thing at once you can do it in multiple windows like this. But it is often easier to see what you are doing if you use tabs instead of windows. You can close one of the browser windows by clicking the X in the upper right hand corner or by holding down Ctrl and pressing w. Closing a window With only one browser window open you can then open a new tab by holding down the Ctrl key and pressing the t key (we will call this Ctrl+t). Opening a new tab Now you can flip back and forth between tabs by clicking on the top of the tab in the browser. You can open more tabs by pressing Ctrl+t again. You can close them by pressing the x in the top right corner of the tab or pressing Ctrl+w. Closing a tab We’ll learn more about Chrome Apps later but for now if you press one of the other icons at the bottom of the screen then it will also open a Chrome window. The only difference is that it will go to a specific website for that icon. For example if you press the little blue paper icon you will open up a Google Doc. Open a Google Doc You can see that the Google Doc app is just another web browser but sent to a specific website - the website for Google Docs. Google Docs website Signing in to Chrome using your Gmail account automatically signs you in to all Google services including YouTube, Gmail, Google Drive, and others. This is particularly useful since you don’t have to sign in to websites that use Google services when you go to them with your web browser. For example if you click on the Gmail icon - the envelope - on your shelf in the bottom left corner of the screen you’ll be taken to the Gmail website and then logged in to your account. You are already logged into Gmail when you log into your Chromebook If you open a second tab by again clicking the Google Docs icon on your shelf in the bottom left corner of your screen, you’ll have two tabs open. You can separate the two tabs into two different windows by clicking on the top part of the Google Docs tab and dragging the Google Docs tab away from the Gmail tab. You can drag to separate tabs You can also put two windows together into a single window with multiple tabs. To do this, click on the tab at the top of the Google Docs window and drag it until it is close to the tab for Gmail. When you let go both tabs will go together into a single window. You can drag to combine tabs into a single window Finally, if you want to keep track of websites you use frequently you can use bookmarking. You can “bookmark” pages that you visit regularly and Chrome will keep track of those websites for you. It’s especially helpful if you don’t want to type the full address of a webpage, visit a page frequently, or are afraid you will forget about a page you will need later. To bookmark a webpage in Chrome, simply click on the star in the address bar or pressCtrl+d on your keyboard. This will open the following window. Bookmark Menu If you click on “Done”, the bookmark will be saved to the Bookmarks bar. Next time you like to check the webpage you bookmarked without typing the address, you can click on the Chrome menu in the top-right corner, hover over Bookmarks, then click the bookmark you’d like to open. Bookmarks Those are the basics of how you manipulate windows and tabs in the Chrome browser. In the following lessons we’ll learn more about how you can use these windows to take advantage of the web through your Chromebook. 16.0.1 Slides and Video Chrome Browser Slides "],["chrome-os.html", "Chapter 17 Chrome OS", " Chapter 17 Chrome OS Your Chromebook is a little different than most normal Desktop computers. The main difference is that almost everything will be done in a Chrome web browser. For the most part, we won’t use any software that saves data directly to your computer with a few small exceptions. All this is not to say you’ll be limited in what you can do as a data scientist. Rather, your work will be done in the “cloud”, rather than on your Chromebook directly. When using a “normal” computer you usually download software that makes it possible to edit files, make presentations, use your calendar, or use social media. On a Chromebook there are three different ways that you can add new software to use. Chrome Apps: Are apps that you “add” to Chrome. The user interface is just the Chrome Browser. Very often these apps are actually just a link to a website that lets you do something like manage your calendar or write a document. But sometimes they have other offline functionality. Chrome Extensions: These are actually pieces of software that modify the way the Chrome Browser itself works. An example would be an ad blocker that prevents ads on webpages you visit in Chrome from being shown. Android Apps: Many modern Chromebooks now support installing Android Apps. These are the same apps that you would get if you had an Android phone. These apps won’t run inside of a web browser, but will function just like an app on your phone. You can think of all three of these extensions to Chrome OS as “Apps”. Not all Chromebooks support Android Apps and we want anyone to be able to complete the Cloud-based Data Science Program if they have a Chrome web browser and an Internet connection. So we will mostly focus on Chrome Apps and Extensions for this course. But if you have Android Apps that you like on your phone and have a Chromebook that supports Android Apps then you can install those apps as well as we discuss in the next section. 17.0.1 Chrome “Apps” Chrome Apps are software programs that run in the web browser. They can be as simple as a link to a website where the app runs or they can be actual pieces of software that download and run on your local Chrome computer. When you set up your Chrome OS account and log in, there will be a number of Chrome Apps that are available to you by default. Some of the most useful ones are: Google Docs: for creating, writing and editing formatted text documents (similar to Microsoft Word, but through the web browser) Google Slides: for creating, writing and editing presentations (similar to Microsoft Office, but through the web browser) Google Sheets: for creating, writing and editing spreadsheets (similar to Microsoft Excel, but through the web browser) Google Docs, Slides and Sheets are three Chrome Apps that come installed on your Chromebook We won’t go into too much detail about each of these apps here as we will cover them in a future class. For now we are just going to cover how to find these apps on your Chromebook, how to install and uninstall new ones, and how to organize them on your Chromebook. 17.0.2 Where do Chromebook Apps live? When you log into your Chromebook for the first time you can see icons for some apps at the bottom of the screen. This set of apps that are visible from the main screen are called your “Shelf”. The shelf is at the bottom of the screen Once you have installed a Chrome App or Android App you can find it by by clicking the Launcher button on the lower left hand side of the screen. If you don’t see the app among the first set of apps if you click on the arrow at the bottom of the screen you will be taken to a large list of apps installed on your Chromebook. You can click on the launcher button, then the arrow to see more apps Another way to open the screen with your apps is to click on the Launcher button on your keyboard. On most Chromebooks this is a button that looks like a magnifying glass. The keyboard launcher button looks like a magnifying glass Once you have found the App you want to open, click on it. When you click on a Chrome App the Chrome Browser will open and be directed to the website where that piece of software lives. For example if you click on the Google Docs icon (the blue piece of paper) then you will be directed to the website https://docs.google.com/document/u/0/ which lets you edit and work with your Google Docs. Clicking on the Google Docs icon will open Google Docs in the web browser. 17.0.3 The Shelf Your “Shelf” is the set of apps that are viewable on the bottom of your Desktop. You can use your Shelf to provide easy access to the Chrome Apps that you use most often. That way you don’t have to remember the exact web address for your most frequently used websites. You can “Pin” an app to the shelf by clicking with two fingers (sometimes called right clicking) on an app and then hovering over “Pin to Shelf” and letting go. For example you might want to pin your “Folder” with your local files to your Shelf so you can easily access it. Pin an app by right clicking You will then see the app on your Shelf so you can click on it to be taken directly to that Chrome App. The app is now pinned to your shelf. If you want to “Unpin” or remove an App from your Shelf you should right click on the app on the Shelf, hover over the Unpin command and let go. The App will then be removed from your shelf. The app is now pinned to your shelf. 17.0.4 Websites as Chrome Apps You can actually add any website you want to your shelf, not just the ones that have Chrome Apps. For example, we will be using http://rstudio.cloud for a lot of the work in this course. There is not a Chrome App for http://rstudio.cloud. But you can still add this website to your shelf. You can do this by first navigating to the website you want to add. Then clicking on the three dots in the upper right hand corner of the Chrome Browser. This will open up a menu and you can move your cursor until it hovers over More Tools. Then you can move your cursor over Add to shelf… and let go. Navigate to rstudio.cloud, move the cursor over More Tools, then Add to Shelf. This should then open up a window where you can name the website you are linking to. Uncheck the box that says Open as Window so that your Chromebook knows this is a website you want to open. Then click Add to put the icon onto your shelf. Uncheck Open as Window and click Add to add this website as an app. Once you are done you will see an icon for http://rstudio.cloud on your shelf so you will be able to quickly navigate to this web app in the future. The rstudio.cloud icon now appears on your shelf. 17.0.5 The Chrome Web Store and Chrome Apps Chrome Apps are pieces of software that can be run from the web browser. Sometimes you will need to download and install them on your Chromebook and sometimes they will just be an icon with a link to a particular website that lets you do some function. We already talked about how you can install any webpage as a Chrome App directly. But many Chrome Apps can also be found in the Chrome Web Store. This is a website that lets you search and find Chrome Apps for your Chromebook, similar to Google Play for Android Apps or the App Store for Apple apps. You can get to the Chrome Web Store by clicking on the launcher button, then finding and clicking the Web Store icon. Open the Chrome Web Store by clicking on the Web Store Icon. You will be taken to the Chrome Web Store in your browser. You can filter by whether they are free, built by Google, or are able to run offline. The first thing we will do is click on Apps to ensure that we are searching only among Chrome Apps. As an example we will find and install the StackEdit app, which is useful for writing markdown documents that you will use throughout the Cloud-based Data Science courses. One nice feature of StackEdit is that it can be used even when your Chromebook is offline. To find the app, we will search for StackEdit and then click return. Search for stackedit on the Chrome Web Store. This will show two options one as a Chrome App and one as a Chrome Extension. We will select the app version and click Add to Chrome. This will bring up a dialogue box that asks if you would like to add Stackedit. Click on Add and the app will be installed on your Chromebook. Click add to Chrome and then Add to add the app to your Chrome browser. You can then click the Launcher button in the lower left to see that the app has been installed. StackEdit is now installed. If you click on the StackEdit icon you’ll be taken to the app, which you can see is also run in the Chrome web browser, just like any website you would visit. The difference is that this website will let you write and save Markdown files. StackEdit runs in the web browser. 17.0.6 Chrome Extensions Chrome extensions are software programs that modify the way that the Chrome browser itself works. You can find and install them through the Chrome Web Store just like you can with Chrome Apps but they look and function slightly differently. Sometimes these extensions may do something very simple (like show you a funny picture when you open a new tab) or they might do something very important (like managing your passwords). As an example we will install the Pocket Chrome extension. Pocket is an extension that lets you save a particular website or essay for reading when your Chromebook is offline. So if you know you will need to read a document you can save it to Pocket before you are traveling somewhere where you will not have Internet access and then retrieve and read it even when you are offline. You can open the Chrome Web Store just as we did previously and search for Pocket under the Extensions window. Once you have found the extension you want, you can click on the extension and it will open a page where you can click on Add to Chrome if you do that and click add the extension will be added. Click Add to Chrome to add the Pocket extension. Chrome Extensions often show up as a small icon in the top right hand side of the Chrome Browser. You can click on the icon to bring up the Pocket extension - which will also come up as a web page in your web browser. The Pocket extension comes up as a web browser. If you sign up for the Pocket extension you can then navigate to a web page that you are interested in saving for later and click the Pocket icon in the top right hand side of the screen. Click the Pocket icon to save the webpage This will save the page for later so that you can read it offline. The page is now saved for offline reading Extensions, like Chrome Web Apps, can improve the way that Chrome OS functions in the same way that installing software on your local computer works. Extensions and Apps help you use your Chromebook to accomplish tasks that would not otherwise be possible. 17.0.7 Slides and Video Chromebook OS Slides "],["android-apps.html", "Chapter 18 Android Apps", " Chapter 18 Android Apps Android is an operating system that was made available by Google and now powers most of the mobile phones in the world. Android is not the same thing as Chrome OS even though the two systems are both produced by Google. Until recently the only kind of apps you could install on a Chromebook were Apps and Extensions as we discussed in the last section. But Google has started to support the use of Android Apps on a small but growing number of Chromebooks. If you have one of these Chromebooks it is now possible to use the same apps you use on your phone on your Chromebook. Android Apps are now available on Chromebooks Chromebook Apps are stored in the same place on your Chromebook as Chrome Web Apps and Extensions. In fact, just by looking at the Shelf or your list of Apps you won’t be able to tell which are Chrome Apps and which are Android Apps. So to get started, we do the same thing as we did in the previous section, click on the Launcher button to show a list of potential apps. You can again click the arrow to view more apps if the Play Store does not appear among the first set of apps Find the Google Play App The first time you click on ‘Play Store’ will bring you to the Google Play Terms of Service. After reading the Terms of Service, if you agree to the Terms click on ‘Agree’ in the bottom right-hand side of the window. Google Play Terms of Service The following window will ask you to accept the Google Play Terms of Service. Here, you will need to click ‘ACCEPT’ to get to Google Play’s apps if you agree with the Terms of Service. You must accept terms of service to install Android Apps This will bring up Google Play where you can install Android Apps. This is the same place you would go if you have an Android Phone and you were going to install an App on your phone. The Google Play Store We will install the Basecamp app that can be used for communication with teams and is frequently used by data scientists. First we search for the app in the Google Play Store. Search for the Basecamp App When you find the Basecamp app you will be taken to a page where you can click Install to install the app. You may be asked to agree to terms and Google Play may ask you to enter payment details. However, if you are only going to use free apps you can find the small grey Skip box and skip over entering this information. Once you install the app it will appear as any other app on your Chromebook. Install the Basecamp App However one key difference is that if you click on the Basecamp icon and open the app then you will see that it does not open in a browser window. Click on the Basecamp icon to open Basecamp Android Apps are not Chrome Apps so are not accessed through the web browser. In this case, they will open in a separate window. Even though they don’t open in a web browser, many apps, including Basecamp, still require an Internet connection to be fully functional. Others may be more useful when used entirely offline. The app is working in a window, but not a Chrome Browser 18.0.1 Slides and Video Android Apps Slides "],["chromebook-shortcuts.html", "Chapter 19 Chromebook Shortcuts", " Chapter 19 Chromebook Shortcuts When we discussed the Chrome Browser we learned a couple of keyboard shortcuts. Keyboard shortcuts are combination of keys that make your Chromebook do certain functions. For example, if you hold the Crtl key and press the n key you get a new Chrome window. When we want to tell you to press this key combination we will use the symbols Ctrl+n to describe what you are doing. In our Chrome Browser lesson we taught you the commands: Ctrl+n - open a new Chrome window Ctrl+t - open a new Chrome tab Ctrl+w - close an open Chrome Window or tab Ctrl+d - this will bookmark a page There are in fact a large number of keyboard shortcuts. Depending on what you do most often with your Chromebook some may be more or less useful to you. Here we will highlight a few that we use frequently and will come in handy for you during your data science career. To understand these key combinations first it is useful to know what some of the symbols on your Chromebook keyboard represent. The arrows in the top left hand corner take you back to the previous webpage you visited in a Chrome Tab and forward to the next page you visited. We will call them the forward and back keys. The back and forward keys are the arrows in the upper left of the keyboard. The curly key next to that refreshes the page you are currently visiting. Sometimes if you make an update to a webpage you are building and want to see the update you will need to refresh the page. We will call this the refresh key. The refresh key is the curly key in the upper left of the keyboard. The full screen key will take a tab you are working on and make that tab fill the whole screen. This will hide your shelf and hide the bookmarks and search bar at the top of your screen. When working on coding or when you feel you don’t have enough screen space this button can be helpful. You can shrink the browser window back to the normal size by pressing the full screen button again. We will call this the fullscreen key. The full screen key is the key with the window with two arrows in the upper middle of the keyboard. The button next to that is the show all windows button. This button will show you all the windows you have open, including Chrome Windows and any Android Apps you might have open. We will call this button the showwindows button. The show windows key is the key with the window and two lines next to it in the upper middle of the keyboard. The screen lock key in the upper right hand corner will lock your Chromebook when you aren’t using it and if you set up your settings to require a password, then you will need to re-enter your password to re-open your Chromebook. When working on data science projects where the data is sensitive it is a good idea to lock your Chromebook whenever you aren’t using it. We will call this the lock key. The lock key is the key with the lock in the upper right of the keyboard. You will recall that the Launcher key is the key with the magnifying glass on the left hand side of the keyboard. We will call this the launcher key. The launcher key is the magnifying glass on the right of the keyboard. 19.0.1 Taking Screenshots on a Chromebook Using these keys we can now consider some of the more useful keyboard shortcuts on your Chromebook. This will definitely be a partial list, you can learn about the rest of the shortcuts from the Chromebook help documentation. One of the most useful things to know how to do is to be able to take a screenshot. You will use this when you are trouble shooting problems in the course frequently. There are two ways to take a screenshot. The first is to use the command ctrl+showwindows. If you use this key combination you will take a picture of everything that appears on the screen. This first will appear as a pop-up box in the lower right hand corner. The screenshot appears as a dialog in the lower right. You can also open the Files App and see that the screenshot has been stored on your computer. All screenshots you take will automatically stored in Files on your computer. The screenshot appears is stored in the Files App. If you click twice quickly on the screenshot file it will open and you can see it looks exactly like what was on your screen when you took the screenshot. The screenshot is a picture of whatever was on your screen. Sometimes, rather than taking a picture of the whole screen you will want to take a picture of just a small part of the screen. There is a second screenshot command that lets you do this. If you press crtl+shift+showwindows then your screen will turn a shade darker and you will see your cursor is replaced with a bullseye icon. If you click and then drag, you can select only part of your screen to take a screenshot of. For example you could take a screenshot of just the upper right hand corner of the Files App. A targeted screenshot is also stored as a png in the Files App. This screenshot also will pop up in the lower right hand corner of your screen and then appear in your Files App. A targeted screenshot only takes a picture of part of the screen. 19.0.2 Zooming in and out Another set of useful shortcuts is to zoom your screen in and zoom your screen out. To zoom in, you can hold down ctrl and press the key that has the plus and equals on it (near the top right hand side of the keyboard). To zoom out, you can hold the ctrl key and press the key with the minus and underscore key on it (near the top right hand side of the keyboard). This will allow you to make the text on websites bigger and smaller to ease reading. For example on the website https://rstudio.cloud/ if you press ctrl+plus/equals four times you will zoom in 175%. If you use the zoom shortcut the text on a webpage increases in size. 19.0.3 Finding a word on a page Sometimes you will need to search a webpage for a specific word or phrase. To do this you can press ctrl+f and a box will pop up. You can then search for the specific word, for example we could search for the word “teach” on https://rstudio.cloud/. You can find a word or phrase on a page using the find shortcut. 19.0.4 Text formatting shortcuts Many of the text formatting shortcuts are nearly the same as on other types of computers. We will review them briefly here as they will be very useful when editing documents, presentations, and code. If you have used computers before you may already know these. ctrl+c - copies selected text ctrl+v - pastes the selected text ctrl+x - cuts the selected text and copies it so you can paste it elsewhere ctrl+z - undoes the previous action you did when editing a file One thing that is somewhat unusual about a Chromebook is that there is not a caps lock key. If you want to turn on caps lock you will need to use the command alt+launcher. To turn caps lock back off again you can simply click on the shift key. 19.0.5 Slides and Video Chromebook Shortcuts Slides "],["where-are-files-stored.html", "Chapter 20 Where Are Files Stored?", " Chapter 20 Where Are Files Stored? Chromebooks operate on the basic idea that you will store everything in the cloud. And, this set of courses is designed with this principle in mind. So most files will be stored online and used through your web browser. There is not a lot of room to store files on most Chromebooks, so we will want to store all of your documents, presentations, spreadsheets, and data on Google Drive or Dropbox. There is local storage on your Chromebook where you can place files. For example, we saw that when you take a screenshot with your Chromebook the file is saved onto your Chromebook directly, not onto the cloud. This can be particularly useful when people send you a file in an email and you want to eventually store it online. You might need to download it first to upload it again to one of the online file storage systems. 20.0.1 Where is the local storage? Files stored on your Chromebook can be found using the Files App. You can find them by first clicking on the Launcher circle at the bottom left-hand corner of your screen. To see all of the apps available on your Chromebook you will expand the selection from your Launcher by clicking on the ‘^’ (up arrow) symbol on your screen. Launcher Screen You can then find the Files App which looks like a blue circle with a white file folder on it. As we discussed in a previous section you can pin this app to your Shelf by clicking with two finders, then moving the cursor over Pin to Shelf and letting go. It is important to pin this app to your shelf since it will be one of the apps you use most regularly. Pin the Files App to your Shelf. If you click on the Files App you will see all of the files you have downloaded from the Internet, any screenshots you may have taken, and any other files you have stored locally on your computer. The Files App shows you all of your files. These files are all stored in a folder called “Downloads” if you click on the Downloads button you will only see the files that are actually stored on your Chromebook. These files will be available whether you are connected to the Internet or not. The Downloads folder shows you all of the files on your Chromebook. One challenge is that most Chromebooks don’t have much space on them to store data and files. You can check how much space is left on your Chromebook by clicking the three dots on the upper right hand side of the Files app. The Files options lets you see how much storage you have left. Despite the limitation on local storage you can also store some of your files and data on the cloud. We will talk about different options for this depending on whether you are storing code, data, or other files later. But in general, you have access to all of your files stored on the “cloud” here as well. For example, everything in Google Drive is also available from the Files App. These files aren’t saved to your computer, they are saved on the Internet, so you will need an Internet connection to be able to access them. To see these files click on “Google Drive” on the left hand side of the Files App. Google Drive files can be accessed from the Files App If you want to free up space on your Chromebook, one thing that you can do is transfer some of your files from your Downloads folder to your Google Drive. You can do that by clicking on a file in your Downloads folder, holding down, and dragging it to Google Drive. This will upload the file to the cloud. You can drag files from Download to Google Drive to upload them. Then if you delete it from your Downloads folder, it will only be stored on the web and will free up space on your Chromebook. To delete a file you can click with two fingers on the file. This will bring up options for different things you can do with the file. If you move your cursor down to delete and let go, you will be asked if you want to delete the file. If you say yes, the file will be permanently deleted from your Chromebook. Click with two fingers on a file and then move the cursor over delete to rename the file. You might also find that the names of files aren’t easy to follow. In a later course we will cover file naming for data science. But for now, it is useful to know how to change the name of a file. You start by again clicking with two fingers on the file. Then you can drag the cursor over “Rename” and let go. Click with two fingers on a file and then move the cursor over delete to delete the file. This will place your cursor on the file name which will now be editable. If you type in the new name and hit return the file will be renamed. Type in the new name and hit return, but don’t change the extension. Usually it is a good idea to leave the file extension the same even if you rename a file. The extension is all of the characters after the period that tells your computer what type of file it is - a code file, a data file, a text file, or something else. For example if your file is named “file.png” then the extension is “.png”. So you might change the file name to something like “new_file.png” but you would want to leave the “.png” at the end. 20.0.2 Slides and Video File Storage Slides "],["working-offline.html", "Chapter 21 Working Offline", " Chapter 21 Working Offline Chromebooks are primarily meant to be used with an Internet connection. This is because most of the software you are using is through an Internet browser. So you will want to make sure you have Internet access when you are working on your Chromebook whenever possible. But sometimes you won’t have access to the Internet. Fortunately, some of the Chromebook Apps and functionality are available offline. You can use these to work when you can’t get an Internet connection. Then your changes will appear online when you reconnect. 21.0.1 Google Drive As we discussed in a previous section, the Files App shows files both from your Google Drive and in a “Downloads” folder. All the files in your “Downloads” folder are saved directly on your Chromebook and are available even if you aren’t connected to the Internet. But you can also store files on your Google Drive. The advantage of Google Drive is that all your files are stored online. This means they won’t be lost if you lose your Chromebook and will be accessible from any Internet connected computer. However, sometimes when you don’t have access to the Internet you may want to access your files offline. You can make Google Drive files available offline on your Chromebook. To do so you need to open the Google Drive App on your Chromebook. You can find the Google Drive App by opening the apps using the launcher button and clicking on the Google Drive icon. To confirm that you are set to work offline open the Google Drive App Once you have opened Google Drive you can open the Settings in the upper right hand corner. Open the Google Drive Settings Then you can confirm that the box is checked next to the “Offline” setting. This means that all of your Google Slides presentations, Google Docs text files, and Google Sheets data files will be available offline. This will use up storage on your Chromebook, but will let you work even when your computer is not connected to the Internet. Confirm that the setting to work offline is turned on 21.0.2 Example: editing a text file offline One of the most common things you might want to do when you don’t have Internet access is to write in a text file. You can do this with a number of different apps. But the one we will use most frequently is Google Docs. You will learn more about Google Docs in a future course, but for now we will show you how offline editing works. First, click on the Google Docs icon to open up the Google Docs App. Note you may have to click on the launcher window to find this App if it is not pinned to your shelf. When Google Docs is open you can click on the plus sign to create a new document. Open Google Docs and create a new document Now you should add some text by typing in the Google Doc, this text will automatically be saved on the Google Doc online. Add some text to the Google Doc online To test offline editing you need to turn off wifi on your computer. You can do that by clicking the avatar picture in the bottom right hand side of the screen to bring up your global options. Then you can click on the wifi connection to open up the wifi options. Open your wifi options You can turn off wifi and your Internet connection by clicking the dot at the top of the wifi menu. Now your Chromebook is offline. Turn off wifi by clicking the dot. Now you can open the Google Docs App back up by clicking on the Google Docs icon at the bottom of your screen. You can still make edits to the document created while you are offline. You can still edit the Google Doc offline. When you are working offline the offline icon will appear next to the file name. The offline icon appears next to the file name. When you are editing a file offline you will see that it says “All changes saved offline” at the top of the window next to the file name. This means that changes to your online document won’t happen until you reconnect to the Internet. Changes are not saved to the file on the Internet until you reconnect. To see how this works you can open back up the wifi menu and turn the Internet connection back on by again going through the menu opened by clicking on your avatar on the lower right hand side of the screen. Turn the wifi back on. Right after you turn the wifi back on you will briefly see that it says “Saving” at the top of the document next to the file name. This means that the changes you have made to the file are being saved from the version on your Chromebook to the version on the Internet. Changes are saved when you go back online. In a similar way you can also edit presentations and spreadsheets offline using Google Slides and Google Sheets. We will cover those Apps more in a separate course. One thing that is worth noting is that if you work with files offline, then the version you change will update the version of the file online. So if you have shared a document with someone else, when you edit that document offline and re-connect, it might write over some of their changes to the file. 21.0.3 Offline Apps In addition to the main apps from Google, many other apps and extensions offer Offline functionality. Some will be fully functional when they are offline and some will only partially work. When you open the Google Web Store you can specifically search for Apps that have offline functionality. But you will need to review each App to figure out what is available when you are online or offline. You can search for apps that say they have offline functionality. 21.0.4 Slides and Video Working Offline Slides "],["chromebook-security.html", "Chapter 22 Chromebook Security", " Chapter 22 Chromebook Security In some ways a Chromebook provides some security for you. Chrome OS has a number of security features that are constantly being improved by Google. We will discuss updating your Chromebook in a later section, but the updates ensure that at a basic level your Chromebook will have good security features. For example, data will be encrypted when passing through a web browser and each browser window will be sandboxed so a web app open in one browser window can’t access data from another window. But there are still some steps that you can take to make sure that your Chromebook is secure. This will be particularly important if your Chromebook is lost or stolen, but will also be useful if you share your computer with family or friends. Since a data scientist is often working with data that may be private or sensitive, it is important that if they lose their computer, they don’t risk losing the data they are working on. Setting your Chromebook up to be secure from the start is an important step for any data scientist. 22.0.1 Setting your Chromebook password One of the most important parts of securing your Chromebook is making sure that you have a good password. Good passwords are long, easy for you to remember, but hard for other people to guess. Don’t use simple passwords like “12345” or “password”, don’t use your name, your date of birth, or other details that would be easy to guess if someone saw your Facebook profile. Good passwords have a few important characteristics: They are long, ideally more than 10 characters They are easy for you to remember. They are not a commonly used password. One way to create relatively good passwords is to string together four or five random words. This approach was made popular by an xkcd cartoon. For example a password made with this approach would be “bikerainsmellblue”. This password has more than 10 characters, is easy for you to remember, and is unlikely to be used by a lot of other people. Try to pick words that aren’t related to each other. Then you only have to remember the four words to remember your password. xkcd suggested a good password combines four random words. Another way to create a password is to choose a line from a book or movie and choose the first one to three letters of each word. For example, you might use the line “Once upon a midnight dreary, while I pondered, weak and weary,” then you could change that to “onupamiddrwhipoweanwe”. You can then just remember the line that you have chosen and the fact that you used a certain number of letters from each word. Again, its a good idea to pick a line from a poem or a book that is less famous to do this. You can improve either of those password schemes by capitalizing some letters or turning words like “too” into numbers to make them more unique. The key is just to have a password that is not very common, easy to remember, and would be hard for other people to guess. 22.0.2 Requiring password to wake from sleep Now that you have set a good password you can make your Chromebook more secure by making sure that anyone will have to use the password to log in. To do this you need to again open up your personal settings by clicking on your personal avatar in the bottom of your screen and then click on the gear to open your personal settings. Open your personal settings Once you have your personal settings open you can click on the “Screen Lock” settings. Open the Screen Lock settings. You’ll be required to input your (hopefully good!) password. Input your password. Then you can turn on screen lock by clicking the option in the upper right hand corner of the screen for “Show screen lock when waking from sleep”. Click on option to Show screen lock when waking from sleep. Now if you close your Chromebook, put it to sleep, or log out, you will have to input your password to get access to your account. This will prevent other users from getting access to your Chromebook account even if they get a hold of the physical device. 22.0.3 Managing other people Another thing that you can do to make your Chromebook more secure is decide in advance who can log into your Chromebook. To do this, open your personal settings by clicking on the personal avatar at the bottom right hand side of your screen, then click the gear to open your personal settings. The click on the option to “Manage Other People”. Click on Manage Other People to manage users of your Chromebook. If you are the owner of the Chromebook you can then click on the dot next to “Restrict sign-in to the following users”. If you are the owner of the Chromebook will then be able to input which users can and can’t log on to your computer. Click on the option to restrict users. 22.0.4 Two step verification If you are dealing with very sensitive data or want to be more secure about who can access your account, you can turn on two step verification. All this means is that you can set it up so that entering your password is not enough to unlock your computer. You will also need to get a text message to your phone with a special code each time that you log in. This means that even if someone gets ahold of your Chromebook, they would also have to have your phone to be able to log into your account. Two step verification is often required for data scientists working in industry and is a good idea to prevent loss of your account information. To turn on two step verification first go to the website https://www.google.com/landing/2step and click on “Get Started” in the upper right hand corner of the screen. Go to the two step verification page and click Get Started. This will take you through the two step verification set up process. First you will again need to click “Get Started”. Click Get Started. Then you will be required to enter your password to confirm that it really is you trying to step two step verification. Enter your password. You will be asked to input your phone number. This is the phone number that will receive the text message every time you input your password and try to log in. This should be for your personal phone that you will have with you when you want to log in to your Chromebook. You won’t be able to log in without your phone after you set this up. Enter the phone number of the phone you will use for two step verification. Once you input your phone number, you will get a text message with a 6 digit number. Take this code and type it in to the next screen to confirm that you have the right phone number set up for two step verification. Enter your verification code to confirm your phone. After confirming both your password and your phone number you will be given the option to turn on two factor verification. You can do this by clicking “Turn On” on the next window. Turn on two factor authentication. Once this is turned on you can turn it back off by going through the same steps as before and then clicking “Turn Off” on the next screen. You can turn off two factor verification by clicking Turn Off. Finally, once you have enabled two step verification, you will need to have your phone with you every time you log in to your computer. This is good for security purposes, but will cause problems if you lose or replace your phone. Make sure you turn this feature back off if you are planning on getting a new phone. 22.0.5 Managing apps and devices You can monitor and manage which apps and devices have access to your account information from your account security page at https://myaccount.google.com/security. You should check this information periodically (every month or so at least) to see if there are any events or activity that you don’t recognize. If anyone has gotten access to your password or log in information, you will be able to see here when they have logged into your account. Your account security page. First you can see any security events that have occurred. Security events can be found by looking under “Device activity &amp; security events” in the section “Recent Security Events”. This will give you information on when your passwords are changed or when you have turned on or off two step verification. Your security events tell you about when your password or two step verification settings have changed. You can also see all the devices that have logged in to your Google account under “Device activity &amp; security events” in the section “Recently used devices”. You will see the Chromebook you are currently working on, but you will also see any Android phones you have logged in to or other computers where you signed into your account. Your recently used devices tells you what devices have logged into your account. As we have discussed in other sections, all of the software running on your Chromebook will be either Chrome Apps or Extensions or Android apps. For a lot of this software you will use Google to log in. That way you don’t have to have a separate password for each app and website. But each time you do this, you give the app a little bit of your information. When you stop using an app you may no longer want them to have access to your information. You can look and see which apps have access to your Google information by looking under “Apps with Account Access” in the section “Apps with Access to your Account”. You can see which apps have access to your account. If you click on a particular app you can take away the permission of that app to use your Google information. It is a good idea to check these apps from time to time and remove those that you no longer need, so they don’t have access to your Google information anymore. You can remove access for specific apps by clicking on them. 22.0.6 Slides and Video Chromebook Security Slides "],["printing-with-a-chromebook.html", "Chapter 23 Printing with a Chromebook", " Chapter 23 Printing with a Chromebook A Chromebook is designed to mostly work with files and documents online. The same is true if you want to print documents from a Chromebook. To print a document you will need to have a printer that is connected to the same wifi network as your Chromebook. If it is your personal printer you will need to follow the instructions that came with your printer to connect it to the wifi. If it is a work computer, make sure that the person responsible for the printer has enabled wifi-based printing. You can then set up your Chromebook to print by first going to your avatar and clicking the settings icon as we have done before. Open your settings. You can then scroll down through all of the settings in the main menu until you see the word “Advanced”. Click on “Advanced” to see your more advanced settings including your printer settings. Click on advanced. You can scroll down again until you find the “Printing Settings” section and then click on “Printers”. Click on printers. On the next page you will be shown a list of available printers. If this is your first time setting up a printer there won’t be any available yet. Click “ADD PRINTER” to open the printer list. Click on ADD PRINTER. You will see a list of all the printers available on your current wifi network. You should make very sure that you are selecting the right printer name to match either your personal printer or your work printer. You may want to print something harmless the first time you print to be sure you have connected to the right printer. Find the name of the printer that you want and click the name, then “ADD” Click the name of the printer, then ADD to add the printer. You should then see the printer under the list of printers. You can click on the three dots next to the printer to remove it if you selected the wrong one. The printer is now ready to be used. To print something, navigate to a website, for example https://www.google.com/. Then you can use the command ctrl+p to print this page. Remember this means to hold the ctrl key and press p. You should come to the printing window. One option that is immediately available is for you to save the page to a pdf file on your local computer. This won’t print the file, but it can be a good way to get a pdf copy of a website onto your computer if you want to save it. ctrl+p opens the printing window, you can save the page as a pdf by clicking save. If you haven’t previously used a printer you will still need to do one more step to get ready to print. You can click on “Change” in the “Destination” section. ctrl+p opens the printing window, click on change to change the printing destination. Then you need to find the printer name again and click on it. This will make that the destination for your file to print to. Click on the name of your printer This will return you to the printing window where you will now see the printer listed under the destination. You can then click on the “Print” button to print your document. Click on Print to print the document This will send the file to your printer. One thing to note is that printing from a Chromebook can be tricky in some settings because if printers are behind security firewalls then they won’t appear among the options for you to print to. You may have to contact the person who manages printers to have them help set the printer up to be recognized by a Chromebook. 23.0.1 Slides and Video Printing with a Chromebook Slides "],["projecting-from-a-chromebook.html", "Chapter 24 Projecting from a Chromebook", " Chapter 24 Projecting from a Chromebook As a data scientist you will often be asked to give presentations on your findings to your employers, to your colleagues, or at workshops or conferences. So you will need to learn to connect your Chromebook to a projector. 24.0.1 Finding the right dongle You won’t be able to plug your Chromebook in directly to a projector. You will need an adapter - often informally called a “dongle” to connect from your computer to the input cord of the projector. To figure out what kind of dongle you need, you need to know both the type of projector input you will be using and what type of ports you have on your computer to plug your dongle into. The two main types of inputs for projectors are VGA and HDMI. You can figure it out by looking at the cable coming from the projector. Find out what kind of projector cable you will be using You will then need to figure out what ports you have available on your computer. For example, the type of Chromebook I’m writing this on is a Chromebook Plus from Samsung. My computer has a USB-C port for connecting external devices like printers. My Chromebook has a USB-C connector, but yours might be different. To find out what kind of ports you have on your Chromebook you can go to the website https://www.google.com/chromebook. Then click on “Find Yours”. Go to https://www.google.com/chromebook and click Find Yours You will need to search or scroll down to find the version of Chromebook that you have. Once you have found your style of Chromebook click on it. Find your style of Chromebook and click on it. This should bring you to a screen with different options for purchasing a Chromebook. Any of those websites will have information about your Chromebook, but we have found that BestBuy often has the most information about ports, so click on the BestBuy logo on the left hand side to see more information. Click on the BestBuy logo to see more information. On the BestBuy page you can scroll down until you see the section called “Features”. Look for the word “Port” to find the type of port you have. In this case it is a USB-C port. Find the type of port you have under Features. Once you know the type of port you have on your Chromebook and the type of connection the projector cable has you can get the right dongle. Sometimes the place you will be presenting has a dongle available, but it is better to have two dongles. For each dongle you want one end to plug into the appropriate port on your computer (in my case USB-C). One of the dongles should have a VGA connection on the other end and the other dongle should have an HDMI connection. Then you will be prepared to connect your Chromebook to the vast majority of projectors you will use. Get a projector with the port for your computer and a VGA and HDMI connection on the other end. 24.0.2 Projecting from your Chromebook If you have the appropriate dongle you are now ready to project from your Chromebook. First, connect the dongle to the projector cord. Then connect the other end of the dongle to the port on your computer. Connect the dongle to the projector cord and to the port on your Chromebook. When you do this you will see that a window appears that says “Extending screen to” and then the name of the display. You should click on this box to open the display settings. Click on the extend displays box to open your Displays settings. There are two ways that the projector and your laptop can be connected. Extended display means that the projected screen is like a second Desktop connected to the Desktop on your computer. So you can drag files from the screen on your laptop to the projected screen. Mirrored display means that exactly what is on your Desktop is displayed on the projector. Usually when you first connect a Chromebook to a projector it will extend the display. This means that if you open the Displays window by clicking on the extending displays box, it may appear on the projected screen but not on your Desktop! This is because you have extended your screen so you actually have two screens you are working with. Extended display gives you two screens so what appears on your Desktop may differ from what appears on the projector screen. Usually when presenting you want the same thing to appear on your Desktop screen and the projector screen. You can do this by changing the setting from “Extending Display” to “Mirrored Display”. First you need to get the Displays Window to your Desktop. You can move your cursor all the way off the left or right hand side of the screen while watching the projector screen. You will see the cursor move up to the projector screen and you can click on the Displays window, hold down, and drag the display back to your Desktop. Drag the displays window to your Desktop and click mirror displays. Then if you click mirror displays you will see that your Desktop and the projector show the same thing. Click the Mirror Displays box to mirror the displays. You are now corrected and ready to present! Mirrored displays show the same thing on your laptop as on the projector. Once displays are mirrored you see the same thing on the laptop and the remote version. In a future class we will go over the software for making and delivering data science presentations. 24.0.3 Slides and Video Projecting From a Chromebook Slides "],["useful-applications.html", "Chapter 25 Useful Applications", " Chapter 25 Useful Applications In previous lessons we have discussed how to download apps from the Chrome Web Store. Here we will discuss some Chrome web apps that may be useful for the course and where you can get them. None of these apps is essential, but they may be helpful for productivity or organization. These apps can all be accessed directly from your Internet browser, but sometimes it will make your life and work easier to have the app directly on your Chromebook. 25.0.1 Basecamp We’ve previously discussed Basecamp as a place where you and all your other team members can communicate about projects. You can chat, share documents, read past conversations, and receive notifications on Basecamp. Having the Basecamp App on your Chromebook will allow you to be updated whenever anyone on the team is trying to communicate with you. You can get Slack from either the Chrome Web Store or from the Google Play Store if your Chromebook runs Android. Basecamp is available from the Chrome Web Store or from the Google Play Store 25.0.2 Google Calendar Google Calendar is a great place to keep track of meetings and life events. We’ll discuss the ins and outs of Google Calendar in a later lesson; however, for now, it’s important to know that there is a standalone app for Google Calendar. You can get this app from the Google Play Store. Google Calendar is available from the Google Play Store 25.0.3 Wunderlist Wunderlist is a list-making app. It is somewhere you can make to-do lists for work and grocery lists for at home. You can access these lists on your Chromebook or your smartphone. These lists can be shared with others from the app and tasks on to-do lists can be delegated to others. Additionally, it has reminder capabilities so that you never forget someone’s birthday or to take out the trash. You can get Wunderlist from either the Chrome Web Store or from the Google Play Store if your Chromebook runs Android. Wunderlist is available from the Chrome Web Store or from the Google Play Store 25.0.4 Tweetdeck The Tweetdeck app has all the same information as the Twitter website, but it is organized to make it easy to use multiple accounts. It has the same tweets, news, and messaging capabilities; however, with it directly on your Chromebook, it makes accessing this information a little easier. You can get Tweetdeck from the Chrome Web Store. Tweetdeck is available from the Chrome Web Store 25.0.5 Evernote Evernote is an app that can help you get and stay organized. It is primarily a place where you can take notes. However, it also allows you to generate to-do lists, organize receipts and bills, and to share these things with others. You can get Evernote from either the Chrome Web Store or from the Google Play Store if your Chromebook runs Android. Evernote is available from the Chrome Web Store or from the Google Play Store 25.0.6 Swirl Swirl will be used for tutorials throughout this sequence. Swirl is an R package with interactive lessons that we will use to get familiar with how R works. We have special Swirl DataTrail modules that we will use in these courses. 25.0.7 DocHub DocHub can be used to upload documents, edit them, and sign them. When you need to apply an electronic signature to a document you are working on DocHub is useful. You can get DocHub from the Chrome Web Store. DocHub is available from the Chrome Web Store. There are lots of other useful apps and as we go through the courses we will point out when there are apps that may be useful to help you speed your way through your work as a data scientist. 25.0.8 Slides and Video Useful Applications Slides "],["updating-your-chromebook.html", "Chapter 26 Updating your Chromebook", " Chapter 26 Updating your Chromebook In computing, there are often updates that are available. Updates can fix bugs, add new features, and/or improve security on your chromebook. Over time, your apps will need to be updated as well as your Chromebook’s operating system (OS) itself. To update your Chromebook you need internet connection. Every time you power on your Chromebook, it will check for and apply available updates. In fact, some updates to the Chrome OS happen in the background automatically while you’re using your device with the updates going into effect the next time you restart. However, should you ever need or want to manually update your Chromebook, you can do so using the following steps: 26.0.1 Steps to Update Step 1. Click on your username or photo at the bottom right-hand of the screen. Home Screen Step 2. A menu will display. On this menu, click on the settings button, which is the icon that looks like a gear turning. Settings Icon Step 3. A new window will appear. Here, you will click settings in the top left-hand portion of the screen. Settings Screen Step 4. On the menu that appears, click on ‘About Chrome OS’. About Chrome OS Step 5. From the ‘About Chrome OS’ window that is now displayed, click on ‘CHECK FOR UPDATES.’ CHECK FOR UPDATES Step 6. The progress of your update will be displayed in that window. Once the update has finished, a message will display letting you know that you are “Nearly up to date!” Nearly up to date! RESTART your device to finish updating To complete the update, you will have to restart your Chromebook. To do so, click ‘RESTART’ at the right of the window. RESTART to finish updating At this point, your screen will go black for a few seconds. Your Chromebook will then restart and you’ll be brought back to the login screen. Login back in here using your Google username and password. 26.0.2 Slides and Video Updating Your Chromebook Slides "],["what-is-r.html", "Chapter 27 What is R?", " Chapter 27 What is R? 27.0.1 Introduction to R R, most simply, is a programming language. Just like there are many different spoken languages throughout the world, there are many different programming languages. Similar to how each spoken language is used by a subset of the humans on this Earth, each programming language was created for a different group of people who code. You may have heard of other programming languages, such as C++, Java, or HMTL previously. These are all enormously popular programming languages, but each has what it does best along with its own disadvantages. For example, if you’re interested in building software that runs really quickly, you may learn C++. If you want to build and edit websites, you would maybe start by learning HTML. And, Java may be most helpful if you want to build video games. R Similarly, R has its strengths and weaknesses. R was designed to be helpful to those interested in statistical computing and graphics. That said, in its simplest form, R is a calculator. If you type ‘3 + 7’ into the R console and hit enter, R will tell you the answer to that math problem is ‘10.’ R is a calculator However, R is much more than just a calculator. It also has the ability to work with data, such as the information in spreadsheets. It’s able to tell you how many rows are in your column. It’s able to find the average age of individuals across a data set. It’s able to create plots to show you how many males or females are included in your data set. And beyond data summary, you can run statistical analyses, write your own software, and carry out complicated analyses start to finish in R. So, while it is a calculator, it is much more than a calculator. It is a place where you can do all of your data analysis. RStudio makes the process of doing an analysis in R easier. 27.0.2 RStudio RStudio is a free, integrated development environment (IDE) for R. Generally, IDEs are software applications that allow software developers to program more efficiently, putting everything the programmer needs in one place. With regards to RStudio specifically, RStudio has a space for the programmer to code, a separate space for that code to run (the Console), a place to see all the objects created in the current session (the Workspace), and a place to see Plots that have been generated. All of these spaces are viewable in a single window, simplifying programming and data analysis. Those who work at RStudio seek to develop tools that support analysts to perform trustworthy and high quality analysis. Their singular goal is to make your life programming in RStudio easier! RStudio IDE 27.0.3 RStudio Cloud RStudio Cloud is a version of RStudio that can run in the cloud. This means that regardless of what computer you’re on, you can access the analysis you were doing previously in your RStudio Cloud session. Other than that, it has many of the same features and is being developed by the same group of people who developed the version of RStudio you download and use on your individual laptop. This means that in RStudio Cloud, like in RStudio, you have four main components, each of which is visible in the same window. To review from the introductory lesson of this series of courses, RStudio Cloud has the following four main components: Scripting - where you write your code Console - where your code runs Environment - where you can see what objects have been created during your analysis Files - where you can see all the files that are part of your project RStudio Cloud There are additional features that you can play around with; however, one important feature to note is that whenever you create a plot in RStudio or RStudio Cloud, it will be visible in the plots tab at the bottom right-hand of your screen. This, and a number of additional features will be discussed in more detail in the next lesson in this course. RStudio Cloud plots 27.0.4 Basic History Knowing the background of a programming language often helps to add some context. So, very briefly, R first appeared in 1993 and was developed to be very similar to another programming language, S. R was initially written by Ross Ihaka and Robert Gentleman in the Department of Statistics at the University of Auckland in New Zealand. Since its inception, many people have contributed code and improvements to R. And, since 1997, the “R Core Team” is responsible for all modifications to the language. R is an open source language. This means that the language is free to use and the source code is available to the general public. As for RStudio, it was first released in 2011. It was founded by J.J. Allaire, who is the company’s current CEO. RStudio Cloud, the cloud-based version of RStudio, was first released for alpha testing (meaning it would have bugs and things that still needed to be fixed and will likely be updated significantly in the coming years) in 2017. R Basic History 27.0.5 Learning R Learning R can be difficult and frustrating. If you get stuck, you’re definitely not alone! The Internet and conversations with others can be very helpful to you! frustration is normal We just wanted to take a second to remind you that getting frustrated is normal and failure is expected. The goal here is to learn how to use R, not to memorize functions (there are too many functions and new ones being made all the time for this to even be possible!). failure is inevitable So, try things out on your own. Try to work through error messages when you’re stuck. But, if you can’t figure it out, ask questions of others who have more experience than you! try first; then ask questions 27.0.6 Slides and Video What is R? Slides "],["rstudio-cloud-tour.html", "Chapter 28 RStudio Cloud Tour", " Chapter 28 RStudio Cloud Tour At this point in the course, you’ve been introduced to RStudio Cloud. You know that it’s where you’ll be writing code, and you’ve been briefly introduced to RStudio and RStudio Cloud. You’ve learned how to organize your files within RStudio Cloud for data science projects. And, you have worked with markdown files within RStudio Cloud. While you were introduced to the parts of RStudio previously, we’ll review them in this lesson and then go into a little more depth to get you even more comfortable working in RStudio Cloud. 28.0.1 Getting Started in RStudio Cloud To get started working in RStudio Cloud, you’ll want to go to rstudio.cloud and log in using your RStudio Cloud login. You’ll be logged into your home screen. As discussed previously, to get started working on a new project, you would click on the “New Project” blue icon toward the top right. This will create a new project. However, all your old projects will be listed at left underneath “Spaces.” You can always return to an old project or start a new one. RStudio Cloud Home Screen - New Project By starting a new project you’ll be brought to a screen where three spaces are available. RStudio Cloud Project However, if you remember from previously, there are four main quadrants when working in RStudio Cloud. To access the fourth space, you’ll have to start a new R Script. To do so, you’ll click on File, hover over New File from the drop-down menu that appears, and then click “R Script” from the drop-down menu. Open up a new R Script This will open up a new R Script, which is currently called “Untitled1,” which you can see on the tab at the top left of the quadrant has just appeared. RStudio Cloud 28.0.2 The Tour Now that RStudio Cloud is opened and you have access to each of four quadrants, we can discuss and review each quadrant’s purpose. We will go through each of the regions and describe some of their main functions, so follow along with each step and make sure you understand the function and how to access each part of RStudio Cloud on your own. But, it would be impossible to cover everything that RStudio can do, so we urge you to explore RStudio Cloud further on your own too! RStudio’s quadrants 28.0.2.1 The menu bar In addition to the four main quadrants, there is also a menu bar. The menu bar runs across the top of your screen and should have two rows. The first row should be a fairly standard menu, starting with “File” and “Edit.” Below that, there is a row of icons that are shortcuts for functions that you’ll frequently use. The commonly used options of the main menu bar To start, let’s explore the main sections of the menu bar that you will use. The first is the File menu. Here we can open new or saved files, save our current document, or close RStudio. As we saw earlier in this lesson, if you mouse over “New File”, a new menu will appear that suggests the various file formats available to you. R Script and R Markdown files are the most common file types for use, but you can also generate R notebooks, web apps, websites, or slide presentations. If you click on any one of these, a new tab in the “Source” quadrant will open. We’ll spend more time in a future lesson on R Markdown files and their use. The File menu The Session menu has some R specific functions, in which you can restart, interrupt or terminate R - these can be helpful if R isn’t behaving or is stuck and you want to stop what it is doing and start from scratch. The Session menu The Tools menu is a treasure trove of functions for you to explore. For now, you should know that this is where you can go to install new packages (see the next lesson in this course!), set up your version control software (GitHub was discussed in the last course in this series!), and set your options and preferences for how RStudio looks and functions. For now, we will leave this alone, but be sure to explore these menus on your own once you have a bit more experience with RStudio and see what you can change to best suit your preferences! The Tools menu 28.0.2.2 Console This region should look familiar to you - when you opened R, you were presented with the console. This is where you type and execute commands, and where the output of these commands is displayed. The console To execute your first command, at the &gt; prompt, try typing 1 + 1. Then, hit enter. You should see the output [1] 2 below your command. Typing into the console and getting an output 28.0.3 Source: script editor panel However, often you want to write code and save it so that you can open the code again and re-run it later. This saved file with code in it is referred to as a script. When you want to write code and save it in a script, you’ll do this in the Source panel. To get started in your script file, copy and paste the following into your Source quadrant (top-left). example &lt;- matrix(c(1, 2, 3, 4, 5, 6, 7, 8), nrow = 4, ncol = 2) To run this code, you can’t just hit enter (as you were able to do in the Console). Hitting enter will just bring your cursor to the next line in the script. Instead, with your cursor in the line of code you want to run, you can click on “Run” at the top right of your script file. This will execute the code in the Console. Note Alternatively, to run code, with your cursor on the line of code you’d like to run, you could hit ‘ctrl + enter’ to run that line of code. This will save you a lot of time as you start writing a lot of code and analyzing data. Practice this keyboard shortcut now! What this code does is create an object (we’ll define what that is soon!) called ‘example’ that has the numbers 1 through 8 in four different rows and two different columns. To see what this object looks like, we’ll take a look at the environment quadrant of RStudio Cloud. 28.0.3.1 Environment (&amp; History) To view this object we’ve just created, you’ll first want to ensure that the object was created. In the Environment quadrant, you should see that ‘example’ is now there. The object was created! The environment quadrant Then, just click anywhere on the “example” line, and a new tab on the Source quadrant should appear, showing the matrix you created. Your newly made object, opened in a new tab of the source panel RStudio Cloud also tells you some information about the object in the environment, like whether it is a list or a data frame or if it contains numbers, integers or characters. This is very helpful information to have as some functions only work with certain classes of data. We’ll get into the details of all this later, but for now, knowing that this information is in the Environment tab is enough. The quadrant has two other tabs running across the top of it. We’ll just look at the History tab now. Your history tab should look something like this: The history tab Here you will see the commands that we have run in this session of R. If you click on any one of them, you can click “To Console” or “To Source” and this will either rerun the command in the console, or will move the command to the source, respectively. From History to Source Do so now for your View(example) object and send it to Source. Sending ‘View(example)’ from History to Source This line of code is now in your Source document. When you save this document, you’ll also have this line of code saved for future use. 28.0.3.2 Saving Script Files Now that you’ve created a script with code in it, you likely want to save it. To do so, you’ll want to click on the save icon. Save Icon In RStudio Cloud this will open a Save File window. Save File Window In the File Organization Course, you learned that code is saved in a directory called code. So, we’ll first create a “New Folder”. New Folder We’ll name this folder “code” by typing it in the box and clicking “OK”. Create code folder After creating this new folder, as discussed in a previous lesson, you’ll see along the top that you’re now in the “code” directory. Within this folder, we’ll create another new folder called “raw_code.” Create raw_code folder This is where we’ll save this file as “R_basics.R” by typing that in the File name: box and clicking “Save.” Save file by typing file name in “File name:” box This file name ‘R_basics.R’ will now show up in the tab at the top of the R Source quadrant. 28.0.4 Files/Help/Plots/Packages/Viewer 28.0.4.1 Files You can also see where this file is saved using the fourth and final quadrant in RStudio Cloud that we’ll discuss. In this final quadrant you’ll see five tabs: Files, Plots, Packages, Help, and Viewer. Files, Plots, Packages, Help, Viewer In Files, you can see everything in your current working directory. You should now be able to see the code folder you just created. code directory in Files tab By clicking on that folder, you should then see the raw_code folder you created. raw_code folder in Files tab By clicking on this, you’ll see the script file you just saved! R_basics.R is saved in code/raw_code/ After you save a file in a folder, if you realize it’s not where you wanted it, you do have the option to move it around. To do so, click on the check box of the file you want to move, and click on the “More” icon to expose options. Click through these to move your file to where you actually wanted it. The “More”” icon 28.0.4.2 Plots In the Plots tab, if you generate a plot with your code, it will appear here. You can use the arrows to navigate to previously generated plots. The Zoom function will open the plot in a new window, that is much larger than the quadrant. Export is one way to save the plot. (Saving plots will be discussed in more detail in a future lesson.) The broom icon clears all plots from memory. The plots tab 28.0.4.3 Packages The Packages tab will be explored more in depth in the next lesson on R packages. Here you can see all the packages you have installed, load and unload these packages, and update them. The packages tab 28.0.4.4 Help The Help tab is where you find the documentation for your R packages and various functions. In the upper right of this panel there is a search function for when you have a specific function or package in question. Navigating this tab will be discussed in more detail in a later lesson in this course. The help tab 28.0.5 Swirl Throughout the courses in this Course Set, we’ll be using something called Swirl modules to practice the R code learned in many of the lessons. These modules will all be run within RStudio Cloud. To make sure that you’re comfortable using Swirl, we’ll go through the steps on where to go to run Swirl and how to work through a module. This will be important as many of the quizzes accompanying these lessons will require you to use Swirl. Follow the steps in this section of the lesson to get started with your first Swirl module! Throughout this Course Set, whenever you’re asked to complete a Swirl module, you’ll always start in the same place: the RStudio Cloud DataTrail Space. Click on this link now. If prompted, log into your RStudio Cloud account. Cloud-based Data Science on RStudio Cloud Among the projects listed you’ll see one called “swirl” (You may have to scroll down on the list to see it.). To the right of swirl, you’ll want to click on “Copy”. make a copy of “swirl” project This project contains all of the swirl modules you’ll be completing throughout the quizzes in this course set. For each module you’re supposed to complete, there will be a quiz question specifying which you’re supposed to complete. But for now, let’s just get comfortable with how swirl works. Any time you are within this space and supposed to complete a swirl module you’ll start by first loading the swirl package (it has already been installed in that space for you) and running the command swirl(): ## load package library(swirl) ## start swirl swirl() As a reminder, to run code, with your cursor on the line of code you’d like to run, you can hit ‘ctrl + enter’ to run that line of code. Similarly, if there are multiple lines you want to run, you can highlight the lines you want to run and again hit ‘ctrl + enter’ to run those lines of code. This will bring up a prompt asking you what swirl should call you. Type your first name as a response here and hit “enter.” starting swirl Swirl will often send you some text to read. Always read the text as this text will help explain the background information you need or will provide you with information you need to answer the question. At this point, swirl is explaining that when you see ..., that’s when you should press “enter” to continue. When you see &gt; or a list of options (like 1:, 2:, 3), that lets you know swirl is looking for something from you! When you see &gt; that’s a prompt letting you know swirl is expecting you to write some code. When you see a list of options, those are the possible answers to a question you’re being asked. In these cases, you’ll want to select the number corresponding to the right answer. For this practice in swirl, select 1, 2, or 3 and press enter. Getting started in swirl You’ll then be given a number of options that you can use within swirl whenever you see the &gt; prompt. Read the list here, but know that info() gives you this list of options again, main() returns you to swirl’s main menu, and bye() saves your progress but exits swirl. swirl menu options After this, you will be shown a list of courses. The list will be longer than what you see here, but we’re showing this simple example to demonstrate that if you wanted to start on the course “DataTrail Introduction to R”, you would type 1. You’ll be told which course to select throughout the course set. Selecting a course Note that for each quiz question you complete in swirl, upon completion, you’ll receive a code. This code is to be entered as the answer to the quiz question on Leanpub. That’s a basic introduction to using swirl. You’ll have lots of quiz questions that require you to use swirl in this Course Set, so be sure to walk through this introduction on RStudio Cloud now and get comfortable navigating within swirl. 28.0.6 Summary In this lesson we took a tour of RStudio Cloud. We became familiar with the main menu and its various menus. We looked at the Console, where R code is input and run. We then moved on to the Environment panel that lists all of the objects that have been created within an R session and allows you to view these objects in a new tab in Source. In this same quadrant, there is a History tab, that keeps a record of all commands that have been run. It also presents the option to either rerun the command in the Console, or send the command to Source, to be saved. Source is where you save your R commands. And the bottom right quadrant contains a listing of all the files in your working directory, displays generated plots, lists your installed packages, and supplies help files for when you need some assistance! Take some time to explore RStudio Cloud and get more comfortable navigating swirl on your own! 28.0.7 Slides and Video RStudio Cloud Tour Slides "],["r-packages.html", "Chapter 29 R Packages", " Chapter 29 R Packages Now that we’ve looked at R and RStudio and have a basic understanding of how they work together, we can get at one thing that makes R so special: packages. 29.0.1 What is an R package? So far, anything we’ve played around with in R uses the “base” R system. Base R, or everything included in R when you download it, has rather basic functionality for statistics and plotting but it can sometimes be limiting. To expand upon R’s basic functionality, people have developed packages A package is a collection of functions, data, and code conveniently provided in a nice, complete format for you. At the time of writing, there are just over 17,600 packages available to download - each with their own specialized functions and code, all developed for a specific but different purpose. For a really in depth look at R Packages (what they are, how to develop them), check out Hadley Wickham’s book from O’Reilly, “R Packages” Side note: A package is not to be confused with a library (these two terms are often conflated in colloquial speech about R). A library is the place where the package is located on your computer. To think of an analogy, a library is, well, a library… and a package is a book within the library. The library is where the books/packages are located. Packages are what make R so unique. Not only does base R have some great functionality but these packages greatly expand its functionality. And perhaps most special of all, each package is developed and published by the R community at large and deposited in repositories. 29.0.2 What are repositories? For R packages, a repository is central location where many developed packages are located and available for download. Note: You may remember the word “repository” from an earlier lesson on GitHub. Like in GitHub, where a repository was where all the code for each data science project is stored, the repositories for R packages are also places where information and code are stored. (In fact, as you’ll see below, GitHub repositories are one of the main repositories for R packages!) There are three big repositories for R packages: 1. CRAN (Comprehensive R Archive Network): R’s main repository (&gt;12,100 packages available!) 2. BioConductor: A repository mainly for bioinformatic-focused packages 3. GitHub: A very popular, open source repository (not R specific!) Take a second to explore the links above and check out the various packages that are out there! 29.0.3 How do you know what package is right for you? So, you know where to find packages… but there are so many of them, how can you find a package that will do what you are trying to do in R? There are a few different avenues for exploring packages. First, CRAN groups all of its packages by their functionality/topic into 35 “themes.” It calls this its “Task view.” This at least allows you to narrow the packages you can look through to a topic relevant to your interests. Second, there is a great website, R Documentation, which is a search engine for packages and functions from CRAN, BioConductor, and GitHub (ie: the big three repositories). If you have a task in mind, this is a great way to search for specific packages to help you accomplish that task! It also has a “task” view like CRAN, that allows you to browse themes. More often, if you have a specific task in mind, Googling that task followed by “R package” is a great place to start! From there, looking at tutorials, vignettes, and forums for people already doing what you want to do is a great way to find relevant packages. 29.0.4 How do you install packages? Great! You’ve found a package you want… How do you install it? 29.0.4.1 Installing from CRAN If you are installing from the CRAN repository, use the install.packages() function, with the name of the package you want to install in quotes between the parentheses (note: you can use either single or double quotes). For example, if you want to install the package ggplot2, you would use: install.packages(\"ggplot2\") Try doing so in your R console! This command downloads the ggplot2 package from CRAN and installs it onto your computer. If you want to install multiple packages at once, you can do so by using a character vector (we’ll get back to exactly what that means in a later lesson in this course!), like: install.packages(c(\"ggplot2\", \"devtools\", \"lme4\")) If you want to use RStudio’s graphical interface (meaning you would point-and-click more than you would type into the console) to install packages, go to the Tools menu, and the first option should be “Install packages…” If installing from CRAN, select it as the repository and type the desired packages in the appropriate box. You can install through the console interface using the above commands or using the Install Packages menu option Select the appropriate repository and type in your desired packages 29.0.4.2 Installing from Bioconductor The BioConductor repository uses their own method to install packages. While you get started and learn to code in R, you will likely not be installing packages from Bioconductor; however, if you later on work in biology-focused fields, you’ll want to know about Bioconductor. So, we’ll cover this now so you know about Bioconductor, even if you don’t install most of your packages from this repository right now. First, to get the basic functions required to install through BioConductor, use: install.packages(\"BiocManager\") This makes the main install function of BioConductor, BiocManager::install(), available to you. Following this, you call the package you want to install in quotes, between the parentheses of the BiocManager::install command, like so: BiocManager::install(\"GenomicFeatures\") 29.0.4.3 Installing from GitHub This is a more specific case that you probably won’t run into too often as you just get started working in R. As packages are developed, the code is frequently put into a GitHub repository. At this point, as long as the repository is public, anyone can install the package in RStudio. However, most developers, once a package is complete, will submit it to CRAN (the first repository discussed above), making it stably available to all R users. Thus, most of the packages discussed throughout these courses will be available from CRAN. However, newer packages that are still under active development will likely have to be installed directly from GitHub. In the event you want to do this, you first must find the package you want on GitHub and take note of both the package name AND the author of the package. Check out this guide for installing from GitHub, but the general workflow is: install.packages(\"devtools\") - only run this if you don’t already have devtools installed. If you've been following along with this lesson, you may have installed it when we were practicing installations using the R console library(devtools) - more on what this command is doing immediately below this install_github(\"author/package\") replacing “author” and “package” with their GitHub username and the name of the package. 29.0.5 Loading packages Installing a package does not make its functions immediately available to you. First you must load the package into R; to do so, use the library() function. Think of this like any other software you install on your computer. Just because you’ve installed a program, doesn’t mean it’s automatically running - you have to open the program. Same with R. You’ve installed it, but now you have to “open” it. For example, to “open” the “ggplot2” package, you would run:library(ggplot2) NOTE: Unlike when you’re installing a package, when loading a package, you do not have to put the package name in quotes. There is an order to loading packages - some packages require other packages to be loaded first. These other packages are known as dependencies. When you install a new package, that new package’s manual/help pages will automatically determine what packages this new package is dependent upon and will install those packages as well. If you want to load a package using the RStudio interface, in the lower right quadrant there is a tab called “Packages” that lists out all of the packages and a brief description, as well as the version number, of all of the packages you have installed. To load a package just click on the checkbox beside the package name Find the package you want to load from the list of installed packages and check the box to load it 29.0.6 Updating, removing, unloading packages Once you’ve got a package, there are a few things you might need to know how to do: 29.0.6.1 Checking what packages you have installed If you aren’t sure if you’ve already installed a package, or want to check what packages are installed, you can use either of: installed.packages() or library() with nothing between the parentheses to check! In RStudio, that package tab introduced earlier is another way to look at all of the packages you have installed. 29.0.6.2 Updating packages Like your projects in GitHub, packages are version controlled. As updates are made to packages, the version on the package will change and be updated. To see if packages you’ve installed need an update, use the function old.packages(). This will identify all packages that have been updated since you installed them/last updated them. To update all packages, use update.packages(). If you only want to update a specific package, just use once again install.packages(\"packagename\") Within the RStudio interface, still in that Packages tab, you can click “Update,” which will list all of the packages that are not up to date. It gives you the option to update all of your packages, or allows you to select specific packages. If all of your packages are up to date you will get the message “All packages are up to date.” Using the Update menu, you can select all or some of the packages you have installed that you can update You will want to periodically check in on your packages and check if you’ve fallen out of date - be careful though! Sometimes an update can change the functionality of certain functions, so if you re-run some old code, the command may be changed or perhaps even outright gone and you will need to update your code too! 29.0.6.3 Unloading packages Sometimes you want to unload a package in the middle of a script - the package you have loaded may not play nicely with another package you want to use. To unload a given package you can use the detach() function. For example, detach(\"package:ggplot2\", unload=TRUE) would unload the ggplot2 package (that we loaded earlier). Within the RStudio interface, in the Packages tab, you can simply unload a package by unchecking the box beside the package name. 29.0.6.4 Uninstalling packages If you no longer want to have a package installed, you can simply uninstall it using the function remove.packages(). For example, remove.packages(\"ggplot2\") (Try that, but then actually re-install the ggplot2package - it’s a super useful plotting package!) Within RStudio, in the Packages tab, clicking on the “X” at the end of a package’s row will uninstall that package. 29.0.6.5 Sidenote: How do you know what version of R you have? Sometimes, when you are looking at a package that you might want to install, you will see that it requires a certain version of R to run. To know if you can use that package, you need to know what version of R you are running! One way to know your R version is to check when you first open R/RStudio - the first thing it outputs in the console tells you what version of R is currently running. If you didn’t pay attention at the beginning, you can type version into the console and it will output information on the R version you are running. Another helpful command is sessionInfo() - it will tell you what version of R you are running along with a listing of all of the packages you have loaded. The output of this command is a great detail to include when posting a question to forums - it tells potential helpers a lot of information about your OS, R, and the packages (plus their version numbers!) that you are using. In the output from sessionInfo(), you’ll note that the end of each package’s name has an underscore followed by a series of numbers. Those numbers indicate the packages version. For example, the version of ggplot2 installed in this session is version 2.2.1 (read version two point two point 1). This number will change (increase) every time developers make changes to this package. sessionInfo() shows you packages and versions 29.0.7 Using the commands in a function In all of this information about packages, we haven’t actually discussed how to use a package’s functions! While functions are discussed in greater detail in a later lesson in this course, for now, know that to use the contents of a package, you’ll use functions. First, you need to know what functions are included within a package. To do this, you can look at the man/help pages included in all (well-made) packages. In the console, you can use the help() function to access a package’s help files. Try help(package = \"ggplot2\") and you will see all of the many functions that ggplot2? provides. Within the RStudio interface, you can access the help files through the Packages tab (again) - clicking on any package name should open up the associated help files in the “Help” tab, found in that same quadrant, beside the Packages tab. Clicking on any one of these help pages will take you to that functions help page, that tells you what that function is for and how to use it. Once you know what function within a package you want to use, you simply call it in the console like any other function we’ve been using throughout this lesson. Once a package has been loaded, it is as if it were a part of the base R functionality. If you still have questions about what functions within a package are right for you or how to use them, many packages include “vignettes.” These are extended help files, that include an overview of the package and its functions, but often they go the extra mile and include detailed examples of how to use the functions in plain words that you can follow along with to see how to use the package. To see the vignettes included in a package, you can use the browseVignettes() function. For example, let’s look at the vignettes included in ggplot2:browseVignettes(\"ggplot2\") . You should see that there are two included vignettes: “Extending ggplot2” and “Aesthetic specifications.” Exploring the Aesthetic specifications vignette is a great example of how vignettes can be helpful, clear instructions on how to use the included functions. 29.0.8 Summary In this lesson, we’ve explored R packages in depth. We examined what a packages is (and how it differs from a library), what repositories are, and how to find a package relevant to your interests. We investigated all aspects of how packages work: how to install them (from the various repositories), how to load them, how to check which packages are installed, and how to update, uninstall, and unload packages. We took a small detour and looked at how to check what version of R you have, which is often an important detail to know when installing packages. And finally, we spent some time learning how to explore help files and vignettes, which often give you a good idea of how to use a package and all of its functions. If you still want to learn more about R packages, here is a great resource: Introduction to R Packages from Ken Rice and Timothy Thornton. 29.0.9 Additional Resources “R Packages”, by Hadley Wickham CRAN (Comprehensive R Archive Network): BioConductor: GitHub: Introduction to R Packages, from Ken Rice and Timothy Thornton 29.0.10 Slides and Video R Packages Slides "],["objects-in-r.html", "Chapter 30 Objects in R", " Chapter 30 Objects in R 30.0.1 What is an object? An object in R is something that contains information. In R there are a number of basic classes and types of objects. Classes - tell us what kind of data is being stored? Is it a number? A category? A word? Types - tell us what shape the data are being stored as. Is it a table? A series of items together (called a vector)? Or something with a different structure all together. 30.0.2 Storing objects In R, as with all programming languages, it is important to be able to store objects that we create so that we can use them in later code. The process of storing an object is called assignment, and it entails giving an object a name. For example, the following code creates an object called min_age and stores inside that object the value 21. min_age &lt;- 21 The &lt;- operator is called the assignment operator. After you run this code in R, you will see the object min_age show up in your Environment panel. Assignment Now if we tell R min_age it will print back to us the number 21. Having this minimum age variable stored in an object can be useful later if we have data where we only want to keep individuals who exceed this minimum age. 30.0.3 Printing objects Often we will want to print the contents of an object to see the information it contains. We can do this by clicking in the Console in RStudio Cloud (bottom left corner). The R prompt is indicated by the &gt; in the Console. This indicates that R is ready to accept a command from you. If we simply enter the number 21 at the R prompt, the 21 object will be printed, but you will not see an object come up under the Environment pane (top right corner). &gt; 21 [1] 21 &gt; min_age &lt;- 21 &gt; min_age [1] 21 The 1 in square brackets that gets displayed in the printed output is simply an index that is provided for convenience of reading in case the object contains several values. It indicates that the number 21 is the first number in this object. It also happens to be the only number in this object. Throughout this course and curriculum, when we display code without the &gt; indicating that we are not at the R prompt in the Console, we are emphasizing only the R command. When we display code with the &gt; indicating that we are at the R prompt in the Console, we want to emphasize the commands and how the output is displayed on the screen. 30.0.3.1 Classes of objects Five classes that you’ll be working with commonly are: Character - e.g. \"sharon\" \"marcus\" Integer - e.g. 1, 4 (whole numbers) Numeric - e.g. 1.2, 3.4, 4 Logical - only two options: TRUE or FALSE. Factor - red, red, blue, yellow (categories that could be repeated). We will describe each of these classes in more detail but first, why are these important anyway? 30.0.3.2 Why are classes important? Let’s discuss an example. If we asked: “What is Blue divided by 2 equal?” You would rightly tell us that question doesn’t even make sense and you can’t answer it. But if we asked: “What is 4 divided by 2 equal?”, then you could easily tell us 4/2 = 2. In the same way, R will throw errors at us if we ask it nonsensical questions or things that its not built to do. Because of this, we need to keep an eye on what kind of data classes we have, and what kinds of things we are asking R to do to make sure that those things make sense together. 30.0.4 Character Character objects in R can be created by surrounding a string in either double quotes or single quotes as in the following two examples. “This is a character object.” ‘This is also a character object.’ The example below shows how to store the above sentence character object in an object named my_char. my_char is a character vector of length 1. my_char &lt;- &quot;This is a character object.&quot; We can create a character vector named my_char_vec with multiple character objects using the concatenate function, c(). While we’ll discuss functions more in later lessons, the word concatenate means to link things together in a series, so this function links pieces of information together: my_char_vec &lt;- c(&quot;char object 1&quot;, &quot;char object 2&quot;) This character vector contains two different pieces of information. In R, the number of pieces of information in a vector is referred to as that vectors length. Thus, this vector is of length 2. 30.0.5 Integer Integers are whole numbers, such as 1, 23, or 1000. 1.2 is not an integer, as it contains a fraction of a number. Integer objects in R can be created by specifying an integer number followed by the letter “L”. The following creates an integer object called num and stores the value 1. num &lt;- 1L Without the letter “L”, the number will be recognized as a more general, numeric object (discussed below). We can create an integer vector with multiple items using the c function, the concatenation function. The following creates an integer vector of length 3 with the numbers 1, 10, and 3. num_vec &lt;- c(1L, 10L, 3L) We can also create an integer vector with the colon operator. The colon operator specifies to include all numbers between the value before the colon and the value after the colon. The following command creates an integer vector with the numbers 2, 3, 4, and 5. num_vec2 &lt;- 2:5 If we create longer vectors and print the output, we can see the use of having the square bracket indices at the beginning of the lines of the printed output. In this last example, we see that 4 is the first number in the vector, and 12 is the ninth number in the vector, as specified by the 9 in brackets to start the second line of output. &gt; 4:16 [1] 4 5 6 7 8 9 10 11 [9] 12 13 14 15 16 30.0.6 Numeric Numeric objects in R represent real numbers and are created by simply entering a number. Thus, while 1.2 is not an integer, it is a real number. Thus 1.2 could be stored as a numeric but not an integer. num1 &lt;- 1 num2 &lt;- 1.2 We can create a numeric vector with multiple items using the c function. num_vec &lt;- c(1.2, 9.8) As discussed previously, we can also use R as calculator. At the prompt, we can enter mathematical expressions without assignment to display the results as a calculator would. The operators for addition, subtraction, multiplication, division, and exponentiation in R are +, -, *, /, and ^ respectively. &gt; 1+5 [1] 6 &gt; 2-3 [1] -1 &gt; 4*2 [1] 8 &gt; 4/5 [1] 0.8 &gt; 3^2 [1] 9 30.0.7 Logical Logical objects in R represent true or false conditions and can be created by typing “TRUE” or “FALSE”. check_condition &lt;- TRUE check_condition &lt;- FALSE We can create a logical vector with multiple items using the c function. check_condition &lt;- c(TRUE, TRUE, FALSE) 30.0.8 Factor Factor objects contain information for categorical variables (e.g. color, shape), where there are a number of possible values the object can take, but these values are limited. For example, a categorical variable could include the colors of the rainbow. Here, values could be red, orange, yellow, green, blue, indigo, or violet. Thus, values could be one of seven different colors, but the categorical variable is limited to one of these seven values. To simplify this example and make factors explicitly clear, the following colors object is a character vector containing five pieces of color information. There are only two unique colors present: red and blue. These unique colors are called the levels of a factor. colors &lt;- c(&quot;red&quot;, &quot;red&quot;, &quot;blue&quot;, &quot;red&quot;, &quot;blue&quot;) To create a factor object out of this character vector we can use the factor function or the as.factor function. Let’s try both and look at the objects created. &gt; colors_factor1 &lt;- factor(colors, levels = c(&quot;red&quot;, &quot;blue&quot;)) &gt; colors_factor1 [1] red red blue red blue Levels: red blue &gt; colors_factor2 &lt;- as.factor(colors) &gt; colors_factor2 [1] red red blue red blue Levels: blue red When we used the factor function we also specified the levels to be red and blue. The order of the levels we specified is important: first red, then blue. We can see that when we print this object the levels are listed in the order we specified. A quick way to create a factor object is with the coercion function as.factor. When we print this object, the levels are opposite to what we specified when we used the factor function because by default, the levels are specified in alphabetical order. Here the first level is blue and the second is red. The ordering of levels will be important in future courses when we cover data tidying, plotting, and statistical modeling. One last topic to cover with factors is labeling. We can control the displayed labels of a factor with another option with the factor function. This need often arises if we want to create a factor object from an integer object or from a character object with labels that we don’t like. In the example below, we see that we originally had ozone information encoded with integers. When we use the factor function to make a corresponding factor object, we specify both the unique levels present in the integer object and the desired labels with a character vector. The order of the specified levels should correspond to the order of the specified labels. The two examples, ozone_factor and ozone_factor2, create the same labeling of the original integer vector, but the order of the levels is different between the two approaches. In the first approach, the first level is low, the second is medium, and the third is high, which is the most natural ordering. In the second approach, the first level is medium, the second is low, and the third is high. &gt; ozone_levels &lt;- c(1,2,1,3,1,1) &gt; ozone_factor &lt;- factor(ozone_levels, levels = 1:3, labels = c(&quot;low&quot;, &quot;medium&quot;, &quot;high&quot;)) &gt; ozone_factor [1] low medium low high low low Levels: low medium high &gt; ozone_factor2 &lt;- factor(ozone_levels, levels = c(2,1,3), labels = c(&quot;medium&quot;, &quot;low&quot;, &quot;high&quot;)) &gt; ozone_factor2 [1] low medium low high low low Levels: medium low high 30.0.9 Data frames Now that we’ve covered common basic data classes, we will now discuss data frames. Data frames are a more complex data type than the simple vectors than we’ve seen so far. Data frames organize data into a rectangular format where each column corresponds to a single variable and each row corresponds to an observation. So a row of a data frame contains an observation’s values for all variables. An example of a data frame is shown below: Data frame example We see along the columns different variables related to car properties, and each row gives information on those properties for a particular car model. Every column in a data frame is a simple vector of values all from the same class. Most often, the data that we work with can be represented with data frames. You will learn more about working with data frames in subsequent lessons in this course and also in later courses. 30.0.10 Missing values The last topic that we should discuss in our introduction to R objects is missing values. During nearly any type of data collection, there is information missing for one or more variables. Thus, it is important to understand how R handles missing values. Most missing values that you will deal with are encoded with NA in R. Below are some examples of creating objects of the various basic types we discussed above that contain missing values. &gt; char_vec &lt;- c(NA, &quot;two&quot;, &quot;four&quot;) &gt; char_vec [1] NA &quot;two&quot; &quot;four&quot; &gt; num_vec &lt;- c(1L, 10L, NA, 3L) &gt; num_vec [1] 1 10 NA 3 &gt; num_vec &lt;- c(1.2, 9.8, NA) &gt; num_vec [1] 1.2 9.8 NA &gt; logi_vec &lt;- c(TRUE, NA, FALSE, FALSE) &gt; logi_vec [1] TRUE NA FALSE FALSE &gt; factor_vec &lt;- as.factor(c(NA, &quot;apple&quot;, &quot;banana&quot;)) &gt; factor_vec [1] &lt;NA&gt; apple banana Levels: apple banana Another missing value that can arise in R is NaN which stands for “not a number.” This can arise in mathematical calculations, such as 0 divided by 0. &gt; 0/0 [1] NaN 30.0.11 Determining the class of an object In this lesson so far we have discussed how to create the five main classes of objects in R; however, we haven’t yet described how to determine the class of an object once its been stored. To do so, you would use the function class() and specify the class of the object within the parentheses: &gt; min_age &lt;- 21 &gt; class(min_age) [1] &quot;numeric&quot; &gt; min_age &lt;- 21L &gt; class(min_age) [1] &quot;integer&quot; &gt; colors &lt;- c(&quot;red&quot;, &quot;red&quot;, &quot;blue&quot;, &quot;red&quot;, &quot;blue&quot;) &gt; class(colors) [1] &quot;character&quot; &gt; colors_factor1 &lt;- factor(colors, levels = c(&quot;red&quot;, &quot;blue&quot;)) &gt; class(colors_factor1) [1] &quot;factor&quot; As you can see, the class of the object specified within the parentheses is the class of that object. 30.0.11.1 Types of objects We store these different classes of objects in different ways. The ways this information is stored is referred to as the *type** of object. When talking about objects in R, it may be helpful to think of actual objects in every day life for comparison. For example, think of three objects: a bucket, a pot you would cook with, and a backpack. These three objects are clearly designed for and carry out different purposes. The bucket may be used to carry water to clean your floor, the pot to cook pasta, and the backpack to carry notebooks, but, we can agree that they are all objects, just different **types* of objects. The water, pasta, and notebooks would be the information contained in the object. In this real-life example, the “class” of the information may be “liquid”, “food”, and “paper”. Objects in real-life analogy The simplest type of object in R is called a vector, which is an object that can contain multiple items. Generally, each individual vector can only contain objects of the same class, but a certain type of vector, called a list, can contain objects of different classes. You will learn about lists in a later lesson. For now, it’s not important to understand the details of that last paragraph, but it is important to know that there are different types of objects and that these objects each hold information of a specific class. We’ll begin this lesson by looking at how to create objects in each of these five basic classes in R. 30.0.12 Summary In this lesson, we’ve discussed that within R information can be assigned to objects. We’ve covered the five main classes of objects in R and have started to touch on the different types of objects in R, but will discuss this in greater detail in later lessons in this course. We’ve discussed how to create each class of object in R as well as each class’ unique properties. Finally, we discussed how to determine the class of an object in R using the function class(). 30.0.13 Slides and Video Objects in R Slides "],["basic-commands-in-r.html", "Chapter 31 Basic Commands in R", " Chapter 31 Basic Commands in R Now that we’ve covered some essentials about R objects, we’ll go over some basic commands that will be helpful in working with data. 31.0.1 Functions In working with data, we will be making substantial use of functions. Functions in R carry out some task. They are always a word (or set of words connected by underscores or periods followed by a set of parentheses, so the general structure of a function in R would look something like this: function(input) function_name(input) The input to a function in R is known as an argument. Functions require at least one argument, but can require multiple different arguments, depending on the function. These inputs are often objects and other variables detailing how you wish to view, summarize, or manipulate these objects. Function outputs come in a variety of formats. They can return information about the contents of an object; they can return a manipulated version of an object; and they can create entirely new objects. In this lesson, we will cover some essential functions for exploring data. This will only consist of functions that return information about the contents of an object. As you learn more about R, you will learn about functions that can manipulate objects or create entirely new objects. To visually understand the anatomy of a function call (a term that describes the using of a function), let’s look at the following example: mean(x, trim = 0.1) We have an object x that should contain numbers, and we want to compute the mean of these numbers with the mean function. As stated above, all of the information inside the parentheses are function inputs (also called arguments), and they are separated by commas. In this command, I have supplied the object x and an additional argument trim that I set to be 0.1. The trim argument calls for a number between 0 and 0.5 and specifies the fraction of the observations in x to trim from the upper and lower ends of the data. Here, by including the trim argument, I am specifying that I want to take the mean of the middle 80% of the data. 31.0.2 What is this object? If someone were to write down a mystery noun for us to guess, our first question would likely be: “Is it a person, place, or thing?” When working with R objects, we will initially want similar types of information. Here we will go over some functions that can help in this regard. As discussed briefly in the last lesson, the class function returns the class of an R object. This is useful for determining if an object is an atomic vector, list, or some other type of object. If it is an atomic vector, this function tells you the type. &gt; x &lt;- 1:10 &gt; class(x) [1] &quot;integer&quot; &gt; y &lt;- c(1.1,2.2) &gt; class(y) [1] &quot;numeric&quot; &gt; class(mtcars) [1] &quot;data.frame&quot; The str function stands for “structure”, and it returns a description of the structure of an object. It tells you the class of an object, its size, and a preview of different components of the object. For example, when we call the str function on a data frame object (mtcars), we see that its class is data.frame, it has 32 rows and 11 columns, and a preview of each of the 11 columns, including the class of each column. In this example, all of the columns are numeric variables relating to features of different models of cars. &gt; str(mtcars) &#39;data.frame&#39;: 32 obs. of 11 variables: $ mpg : num 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... $ cyl : num 6 6 4 6 8 6 8 4 4 6 ... $ disp: num 160 160 108 258 360 ... $ hp : num 110 110 93 110 175 105 245 62 95 123 ... $ drat: num 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... $ wt : num 2.62 2.88 2.32 3.21 3.44 ... $ qsec: num 16.5 17 18.6 19.4 17 ... $ vs : num 0 0 1 1 0 1 0 1 1 1 ... $ am : num 1 1 1 0 0 0 0 0 0 0 ... $ gear: num 4 4 4 3 3 3 3 4 4 4 ... $ carb: num 4 4 1 1 2 1 4 2 2 4 ... 31.0.3 How big is this object? After we determine generally what an object is, it is useful to know how much information it contains, how big it is. The dim function returns the dimensions of a rectangular object, such as a matrix or a data frame. The output is an integer vector with two components: first is the number of rows (which can also be obtained with nrow()), and second is the number of columns (which can also be obtained with ncol()). We saw previously that the str function provides the same information and more, so why would we use these functions instead? The str function provides this information by printing it to the screen for us to visually see, but it does not extract this information directly. If we need to use the dimensions later in the analysis as a variable, these functions provide a direct way to store this information. &gt; dim(mtcars) [1] 32 11 &gt; nrow(mtcars) [1] 32 &gt; ncol(mtcars) [1] 11 The length function returns the number of items in a vector object. We talked about this briefly last lesson that the number of things in your object is referred to as its length. Here, we can quickly calculate the length of an object by calling the length function. &gt; x &lt;- c(1, 10, 3) &gt; length(x) [1] 3 31.0.4 Are there named features of this object? Another way to explore an object in R is to see what components it has. In R, these components are designated with names. The names function can be used to get and set the names of an R object, most often an atomic vector or a list. For example, we can create an R object called prize_money that contains the prize money for first, second, and third places: prize_money &lt;- c(1000, 500, 250) If we want to label this vector with the prizes, we can use names combined with the assignment operator &lt;- and a character vector of labels: names(prize_money) &lt;- c(&quot;first&quot;, &quot;second&quot;, &quot;third&quot;) Later in our work, if we want to remind ourselves of the labels, we can use the names function by itself, which will print the names for the object. &gt; names(prize_money) [1] &quot;first&quot; &quot;second&quot; &quot;third&quot; Note that in many situations, it will be better practice to encapsulate the above information in a two-column data frame instead of a named vector as below. prize_info &lt;- data.frame( money = c(1000,500,250), place = c(&quot;first&quot;, &quot;second&quot;, &quot;third&quot;) ) This is more convenient for further work if you have other objects that have information on first, second, or third placing, but not prize money information. You’ll learn more about these concepts when you learn about “tidy data” in a later course. The colnames() and rownames() functions act analogously to the names function but are used for the column labels and row labels of a matrix or data frame. The numbers in square brackets at the beginning of the lines of printed output indicate the index of the first observation on the line. So for the row names, we can see that “Duster 360” is the seventh element. &gt; colnames(mtcars) [1] &quot;mpg&quot; &quot;cyl&quot; &quot;disp&quot; &quot;hp&quot; &quot;drat&quot; &quot;wt&quot; &quot;qsec&quot; &quot;vs&quot; &quot;am&quot; &quot;gear&quot; [11] &quot;carb&quot; &gt; rownames(mtcars) [1] &quot;Mazda RX4&quot; &quot;Mazda RX4 Wag&quot; &quot;Datsun 710&quot; [4] &quot;Hornet 4 Drive&quot; &quot;Hornet Sportabout&quot; &quot;Valiant&quot; [7] &quot;Duster 360&quot; &quot;Merc 240D&quot; &quot;Merc 230&quot; [10] &quot;Merc 280&quot; &quot;Merc 280C&quot; &quot;Merc 450SE&quot; [13] &quot;Merc 450SL&quot; &quot;Merc 450SLC&quot; &quot;Cadillac Fleetwood&quot; [16] &quot;Lincoln Continental&quot; &quot;Chrysler Imperial&quot; &quot;Fiat 128&quot; [19] &quot;Honda Civic&quot; &quot;Toyota Corolla&quot; &quot;Toyota Corona&quot; [22] &quot;Dodge Challenger&quot; &quot;AMC Javelin&quot; &quot;Camaro Z28&quot; [25] &quot;Pontiac Firebird&quot; &quot;Fiat X1-9&quot; &quot;Porsche 914-2&quot; [28] &quot;Lotus Europa&quot; &quot;Ford Pantera L&quot; &quot;Ferrari Dino&quot; [31] &quot;Maserati Bora&quot; &quot;Volvo 142E&quot; colnames() and rownames() functions 31.0.5 What does this object look like? Sometimes we may just want to see the information contained in an object. Here we will discuss functions that allow you to see parts of objects. The print function displays the entire contents of an object. print(mtcars) Recall that in R, the Console is where commands can be typed and entered for R to run. When R is ready to accept a command a greater than sign will be displayed. An alternative to calling the print function is to simply type the name of the object in the Console and press enter. In general printing an entire object is not advisable just in case the object is quite large. In this case your screen would overflow with text! mtcars printing objects’ contents to the screen Safer alternatives to printing are the head and tail functions. The head function displays the beginning of an object. By default, it shows the first 6 items. If the object is a vector, head shows the first 6 entries. If the object is a rectangle, such as a matrix or a data frame, head shows the first 6 rows. The tail function is analogous to head but for the end of the object. &gt; head(mtcars) mpg cyl disp hp drat wt qsec vs am gear carb Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 &gt; tail(mtcars) mpg cyl disp hp drat wt qsec vs am gear carb Porsche 914-2 26.0 4 120.3 91 4.43 2.140 16.7 0 1 5 2 Lotus Europa 30.4 4 95.1 113 3.77 1.513 16.9 1 1 5 2 Ford Pantera L 15.8 8 351.0 264 4.22 3.170 14.5 0 1 5 4 Ferrari Dino 19.7 6 145.0 175 3.62 2.770 15.5 0 1 5 6 Maserati Bora 15.0 8 301.0 335 3.54 3.570 14.6 0 1 5 8 Volvo 142E 21.4 4 121.0 109 4.11 2.780 18.6 1 1 4 2 head() and tail() can be used to see a portion of the data The summary function computes summary statistics for numeric data and performs tabulations for categorical data, which are called factors in R. &gt; summary(iris) Sepal.Length Sepal.Width Petal.Length Petal.Width Min. :4.300 Min. :2.000 Min. :1.000 Min. :0.100 1st Qu.:5.100 1st Qu.:2.800 1st Qu.:1.600 1st Qu.:0.300 Median :5.800 Median :3.000 Median :4.350 Median :1.300 Mean :5.843 Mean :3.057 Mean :3.758 Mean :1.199 3rd Qu.:6.400 3rd Qu.:3.300 3rd Qu.:5.100 3rd Qu.:1.800 Max. :7.900 Max. :4.400 Max. :6.900 Max. :2.500 Species setosa :50 versicolor:50 virginica :50 The summary() function summarizes data The unique function shows only the unique elements of an object. For vectors, this returns the set of unique elements. For rectangles such as matrices and data frames, this returns the unique rows. This function is useful if we want to check the coding of our data. If we have sex information, then we expect the result of unique to be two elements. If not, there is likely some data cleaning that must be done. The unique function is also useful for simply exploring the values that a variable can take. In the example below, we can see that in the mtcars data frame, there are only cars with 6, 4, and 8 cylinders. Note that to extract the column corresponding to cylinders, we used a dollar sign followed by the column name: $cyl. This is an example of subsetting that you will learn in later lessons. &gt; unique(mtcars$cyl) [1] 6 4 8 &gt; dat &lt;- data.frame(a = c(1,1), b = c(2,2)) &gt; dat a b 1 1 2 2 1 2 &gt; unique(dat) a b 1 1 2 The unique() shows unique elements of an object 31.0.6 Errors, Warnings, and Messages In R, there are three types information that R may return to you to your screen to provide you with additional information. These come in the form of errors, warnings, and messages. While they will often look similar to one another, it’s important to understand the difference between them. The most serious of these messages is an error message. Errors indicate that the code you tried to run did not run successfully. If you receive an error message, you should carefully look back at your code to see what went wrong. Error messages cannot be ignored as they indicate that there was no way for the code to run. Something has to be fixed before moving forward. For example, the code here produces an error, since mtca is not a data frame or object in R. unique(mtca$cyl) errors Warnings are generally less serious than error messages. They are generated when the code executes (meaning, it runs without producing an error and stopping), but produces something unexpected. Warning messages should always be read, and then you, the person writing the code, has the option to decide whether or not the code that has generated the warning needs to be re-written. For example, the log function is only defined for numbers greater than zero. If, in R, you try to take the log of a negative number, you get an output (NaN): log(-1) This output means the code executed (there was no error), but you also get a warning letting you know that NaNs were produced. If you meant to take the log of a negative number, you would leave the code as is. However, if you did not intend to do this, the warning message helps clue you into the fact that you may want to revisit your code. warnings Last but not least, messages, in general, are simply there to provide you with more information. They do not indicate that you have done anything wrong. For example, if you were to run a function that creates a directory if it does not yet exist, the function may provide you a message informing you whenever a new directory has been created. This message would just be there to provide you with more information. No further action is generally necessary when a message is provided. messages Note that all three are in the same font and same color, so they’ll look similar in your RStudio Cloud console. Over time, you’ll get more comfortable dealing with and understanding the difference between the three. For now, be sure that to remember if you get an error, your code did not execute successfully. Go back and find what caused the error. 31.0.7 Summary In this lesson, you have been introduced to a number of commonly-used commands (functions) that are available to you in R. These will help you to determine the class of objects (class()), figure out how big an object is (length(), dim(), nrow(), ncol()), get an idea of what the object looks like (str(), head(), tail()), and summarize the data contained in the object (summary(), unique()), among many others. Understanding the functions discussed in this lesson and becoming very comfortable with what each of these does is incredibly important for moving forward and programming in R. Finally, we discussed errors, warnings, and messages in R. This is the foundation of what we’ll use throughout the rest of the course, so spend some time here and ensure that you understand what the code does in each example before moving on! 31.0.8 Slides and Video Basic commands in R Slides "],["working-with-logicals.html", "Chapter 32 Working with Logicals", " Chapter 32 Working with Logicals Earlier in this course, you learned that one of the basic classes of objects in R is the class of logical objects which contain TRUE and FALSE values. Logicals come up very frequently in data management and analysis because they form the basis of conditional operations (if a condition is met, perform a task) and are instrumental in data exploration, visualization, and analysis. In this lesson, we will cover the tools you will need to work with logical values in R. As you work through this lesson, you’ll be inundated with TRUE and FALSE a lot. That is because there are only two options when it comes to logicals. However, these are incredibly important and helpful class of objects. So, take your time to understand each example. Copying and pasting the code into your own RStudio, running it, and spending time to understand the output will really help you understand how to work with logicals! 32.0.1 Logical operators One of the most common ways to create and combine logical objects is to use logical operators. Broadly speaking, operators are symbols that indicate some action. We introduced arithmetic operators in an earlier lesson for performing routine arithmetic calculations. There was + for addition, - for subtraction, * for multiplication, / for division, and ^ for exponentiation. Logical operators in R perform actions relating to logic checking and include the following: !: the “not” operator &amp;: the “and” operator |: the “or” operator (Shift + backslash() ) ==: the “equals” operator !=: the “not equal” operator &gt;: the “greater than” operator &gt;=: the “greater than or equal to” operator &lt;: the “less than” operator &lt;=: the “less than or equal to” operator %in%: the “contained in” operator Logical operators are used with one to several R objects in order to create logical objects. These logical objects are the result of checking conditions, and they store the answers to yes/no questions that you may ask throughout your work. Let’s look at several examples. We have data on ages of some students, and we have stored this information in the ages object. We have information on a common age cutoff that is applied to all students for a particular activity. This is stored in the common_cutoff object. For another activity, we have individualized age cutoffs for each student. This is stored in the indiv_cutoffs object. Let’s ask several yes/no questions relating to this data. ages &lt;- c(12, 17, 16, 13, 14) common_cutoff &lt;- 13 indiv_cutoffs &lt;- c(12, 12, 14, 14, 14) Do the students’ ages equal the cutoff? To answer this, we would use the “equals” operator ==. (Note: the equals operator requires two equals signs (==). You’ll recall that a single equals sign (=) is used for object assignment and is equivalent to &lt;- . Whenever you want to ask if two things are equal be sure you have both equals signs in your code!) Here, each number in the ages object is compared to 13. Only the fourth student meets this condition. &gt; ages == common_cutoff [1] FALSE FALSE FALSE TRUE FALSE The output from this code prints “TRUE” for the individual (the fourth person) who meets this condition. Do the students’ ages equal the individualized cutoffs? Here, each number in the ages object is compared to the corresponding number in the indiv_cutoffs vector. Only the first and fifth students meet this condition. &gt; ages == indiv_cutoffs [1] TRUE FALSE FALSE FALSE TRUE This is obvious in the output from R, where the first and the fifth values are TRUE, while the rest are FALSE. Usually cutoffs are a bound rather than a specification of an equality, so we may instead ask if the students older than the cutoff by using the “greater than” operator &gt;. &gt; ages &gt; common_cutoff [1] FALSE TRUE TRUE FALSE TRUE &gt; ages &gt; indiv_cutoffs [1] FALSE TRUE TRUE FALSE FALSE Are they at least as old as the cutoff? We can answer this with the “greater than or equal to” operator &gt;=. &gt; ages &gt;= common_cutoff [1] FALSE TRUE TRUE TRUE TRUE &gt; ages &gt;= indiv_cutoffs [1] TRUE TRUE TRUE FALSE TRUE If the cutoffs are upper bounds instead of lower bounds, we can answer similar questions as above using the “less than” &lt; and “less than or equal to” &lt;= operators. &gt; ages &lt; common_cutoff [1] TRUE FALSE FALSE FALSE FALSE &gt; ages &lt; indiv_cutoffs [1] FALSE FALSE FALSE TRUE FALSE &gt; ages &lt;= common_cutoff [1] TRUE FALSE FALSE TRUE FALSE &gt; ages &lt;= indiv_cutoffs [1] TRUE FALSE FALSE TRUE TRUE So far we have treated the common cutoff and the individualized cutoffs separately, and we have thus only used one logical operator at the time. We can use several logical operators simultaneously to answer more complex yes/no questions. Are the students older than the common cutoff and the individualized cutoffs? We can combine the “greater than” operator with the “and” &amp; operator. &gt; ages &gt; common_cutoff &amp; ages &gt; indiv_cutoffs [1] FALSE TRUE TRUE FALSE FALSE Are the students older than the common cutoff or the individualized cutoffs? We can combine the “greater than” operator with the “or” | operator. &gt; ages &gt; common_cutoff | ages &gt; indiv_cutoffs [1] FALSE TRUE TRUE FALSE TRUE Are the students older than the common cutoff but not the individualized cutoffs? We can answer this with the “not” operator or without it by reasoning through with the inequalities. In using the “not” operator, it is a good idea to wrap the condition that you are negating in parentheses to enhance clarity and avoid errors. &gt; ages &gt; common_cutoff &amp; !(ages &gt; indiv_cutoffs) [1] FALSE FALSE FALSE FALSE TRUE &gt; ages &gt; common_cutoff &amp; ages &lt;= indiv_cutoffs [1] FALSE FALSE FALSE FALSE TRUE When working with complex logical expressions, it can help to store different parts of the expression in their own objects. In reproducing the example above, we have stored the result of the logical operation dealing with the common cutoff in the meets_common_cut logical object. We have also stored the result of the logical operation dealing with the individual cutoffs in the not_meets_indiv_cut logical object. These two objects can be combined at the end in a more readable expression. &gt; meets_common_cut &lt;- ages &gt; common_cutoff &gt; not_meets_indiv_cut &lt;- !(ages &gt; indiv_cutoffs) &gt; meets_common_cut [1] FALSE TRUE TRUE FALSE TRUE &gt; not_meets_indiv_cut [1] TRUE FALSE FALSE TRUE TRUE &gt; meets_common_cut &amp; not_meets_indiv_cut [1] FALSE FALSE FALSE FALSE TRUE Although these examples have all used numbers, logical operators can also be used for character and factor objects. Let’s start with character objects. For comparing character objects, you will primarily use the “equals” == and “not equal” != operators. For example, we have a character vector of colors. Are the colors “red”? &gt; colors &lt;- c(&quot;red&quot;, &quot;red&quot;, &quot;green&quot;, &quot;orange&quot;, &quot;blue&quot;) &gt; colors == &quot;red&quot; [1] TRUE TRUE FALSE FALSE FALSE Are the colors not “blue”? &gt; colors != &quot;blue&quot; [1] TRUE TRUE TRUE TRUE FALSE Here it is useful to introduce the “contained in” operator %in%. This operator checks if the elements in the left hand object are contained in the right hand object. Are “red” and “purple” contained in this set of colors? The length of the output is the same as the length of the left hand side. We ask about two colors, “red” and “purple”, and we see that “red” is contained in the colors object but “purple” is not. &gt; c(&quot;red&quot;, &quot;purple&quot;) %in% colors [1] TRUE FALSE If we had reversed the command, we would instead be asking, “Are the colors in the colors object contained in the red and purple set?” Only the instances of “red” will be marked as TRUE. &gt; colors %in% c(&quot;red&quot;, &quot;purple&quot;) [1] TRUE TRUE FALSE FALSE FALSE When dealing with logical operations with factors, we can only use the “equals” == and “not equal” != operators. Usually we will want to compare factor objects with values of their labels. Let’s look at logical operations for the following factor object containing height category information. &gt; height_factor &lt;- factor(c(2,1,2,3,1), levels = 1:3, labels = c(&quot;short&quot;, &quot;average&quot;, &quot;tall&quot;)) &gt; height_factor [1] average short average tall short Levels: short average tall Although we create this factor object from integers, comparing it to the value 1 will not give desired results. The intention in comparing it to the integer 1 is to mark the short individuals with TRUE. We can do this by either coercing the factor object to an integer object with as.integer or by comparing the factor to the string label “short”. &gt; height_factor == 1 [1] FALSE FALSE FALSE FALSE FALSE &gt; as.integer(height_factor) [1] 2 1 2 3 1 ## coerce object to be an integer &gt; as.integer(height_factor) == 1 [1] FALSE TRUE FALSE FALSE TRUE ## compare to label directly &gt; height_factor == &quot;short&quot; [1] FALSE TRUE FALSE FALSE TRUE When we coerce the object to e an integer, we get the expected output. The second and final outputs are TRUE, corresponding to the values of “1” in the height_factor object. The output is the same for when the labels are directly compared. The output here returns TRUE for any places in the height_vector object where the factor label is (equal to) “short”. 32.0.2 Logical functions So far we have used logical operators to ask yes/no questions on a unit-by-unit basis. That is, asking the question for each data observation. This has given us TRUE/FALSE answers for each unit. We might also want to summarize the results of these multiple responses with questions such as “Do all units meet the condition?” or “Do any (at least one) units meet the condition?” For the first question, “Do all units meet the condition?”, we can use the all function. The all function takes a logical object as input and returns TRUE if all values in the logical object are TRUE, and it returns FALSE otherwise. Are all student ages equal to the individual cutoffs? Are all ages greater than or equal to zero? &gt; all(ages == indiv_cutoffs) [1] FALSE &gt; all(ages &gt;= 0) [1] TRUE For the second question, “Do any units meet the condition?”, we can use the any function. The any function takes a logical object as input and returns TRUE if at least one of the values in the logical object is TRUE, and it returns FALSE otherwise. Are any of the student ages equal to the common cutoff? Are any ages greater than 100? &gt; any(ages == common_cutoff) [1] TRUE &gt; any(ages &gt; 100) [1] FALSE Often we will want to combine the asking of yes/no questions with “who” and “how many” questions. Who meets the condition? How many units meet the condition? For the first question, “Who meets the condition?”, we can use the which function. The which function takes a logical object as input and returns the indices of TRUE values. In this example, we see that the first and second colors are the ones that are contained within the red and purple set. &gt; colors %in% c(&quot;red&quot;, &quot;purple&quot;) [1] TRUE TRUE FALSE FALSE FALSE &gt; which(colors %in% c(&quot;red&quot;, &quot;purple&quot;)) [1] 1 2 To answer, “How many units meet this condition?”, we can make use of the sum and mean functions. The idea here is that logical values have a correspondence with the integer values of 0 and 1. TRUE values correspond to 1, and FALSE values correspond to 0. Thus when we create a logical object, we can use sum to count the number of TRUE values, and we can use mean to compute the fraction of TRUE values. ## assign logical to ages that are greater than ## or equal to indiv_cutoffs &gt; meets_indiv_cut &lt;- ages &gt;= indiv_cutoffs &gt; meets_indiv_cut [1] TRUE TRUE TRUE FALSE TRUE ## sum that object &gt; sum(meets_indiv_cut) [1] 4 ## get the mean of that object &gt; mean(meets_indiv_cut) [1] 0.8 Here, the sum of the meets_indiv_cut is 4. When you sum a logical, R returns the number of TRUE responses. Similarly, when you take the mean() of an object of class logical, you get the proportion of responses that were TRUE. Here, that’s 4 out of 5, or 0.8. 32.0.3 Summary This lesson walked you through how to work with operators and logical objects. This will be incredibly helpful as you start to manipulate and clean data. Having a thorough understanding of this class of objects and how to work with them will serve you well going forward. 32.0.4 Slides and Video Working with Logicals Slides "],["data-frames-1.html", "Chapter 33 Data Frames", " Chapter 33 Data Frames TODO: Write about data frames 33.0.1 Slides and Video Slides "],["r-markdown.html", "Chapter 34 R Markdown", " Chapter 34 R Markdown We’ve spent a lot of time getting R and RStudio working, learning about projects and version control - you are practically an expert at this! There is one last major functionality of R/RStudio that we would be remiss to not include in your introduction to R - R Markdown! 34.0.1 What is R Markdown? R Markdown is a type of document that allows you to generate fully reproducible reports. In these documents, text , code, and the results of the code are all combined in one place. In fact, these lessons are written using what you’ve already learned about Markdown and all the R code you’ve recently mastered! To refresh your memory, this is how we use plain text in Markdown formatting: Markdown review Throughout this lesson we’ll remind you of what you learned in the previous lesson on Markdown and discuss all the new things you’ll be able to do with R Markdown documents! R Markdown documents generally take one of two file extensions: .Rmd, .rmd. If a file ends with either of these two file extensions (ie Project_Analysis.Rmd), then you know it’s an R Markdown document. While this type of file is a plain text file, it can be rendered (“Knit”) into HTML pages, PDFs, Word documents, or slides! We’ll get into exactly what that means in just a second! .Rmd to PDF 34.0.2 Why use R Markdown? One of the main benefits is the reproducibility of using R Markdown. Since you can easily combine text and code chunks in one document, what this means for a data science project is that you can easily integrate an introduction about what your project question is and where your data came from and the code that you are running, the results of that code, some pretty plots and figures, and your conclusions all in one document. Sharing what you did, why you did it and how it turned out becomes so simple - and that person you share it with can re-run your code and get the exact same answers you got. That’s what we mean about reproducibility. In addition to being reproducible, there will be times that you’re working working on a project that takes many weeks or months to complete. In these cases, you want to be able to see what you did a long time ago (and perhaps be reminded exactly why you were doing this). By using an R Markdown document, you’ll be able to see exactly what you did previously, what code you used AND the results of that code! Another major benefit to R Markdown is that since it is plain text, it works very well with version control systems, such as git and GitHub. It is easy to track what character changes occur between commits; unlike other formats that aren’t plain text. For example, in one version of this lesson, I may have forgotten to bold this word. When I catch my mistake, I can make the plain text changes to signal I would like that word bolded, and in the commit, you can see the exact character changes that occurred to now make the word bold. Check out this video that the RStudio developers released about R Markdown and what it is! 34.0.3 Getting started with R Markdown The best way to follow along for the rest of this lesson is to open up RStudio Cloud, and follow along on your own step-by-step. In the process, you’ll get to generate your first R Markdown document! Generating and working with RMarkdown documents is incredibly easy when working within RStudio (or RStudio Cloud). To get started in RStudio Cloud, go to File &gt; New File &gt; R Markdown.. . R Markdown… If a window pops up specifying that you need to install and update a few packages before using R Markdown, click “Yes” to install those updates. At this point, you will be presented with the following window: R Markdown You’ll want to add a Title to this document and put your name in the Author box. Title and Author information filled out When you are done entering this information, click OK, and a new .Rmd document will open with a little explanation on R Markdown files. R Markdown document There are three main sections of an R Markdown document. The first is the YAML at the top, bounded by the three dashes. This is where you can specify details like the title, your name, the date, and what kind of document you want output. If you filled in the blanks in the window earlier, these will be filled out for you. The spacing of this section matters, so if you edit anything here and then get an error when you try to Knit your document, it may be worth returning to this section to make sure spacing is as it should be. Also on this page, you can see text sections. In this section, text should be written in Markdown. This means that the “## R Markdown” will appear as an H2 header when the document is rendered. and Knit will be bold, as discussed in a previous lesson. And finally, you will see code chunks. These are bounded by the triple backticks. These are pieces of R code, and are referred to as “code chunks”. These code in these chunks can run right from within your document - and the output of this code will be included in the document when you Knit it. The easiest way to see how each of these sections behave is to produce the HTML! To do so, you’ll learn how to knit the document below. 34.0.4 “Knitting” documents When you want to preview an R Markdown document and when you are finished with an R Markdown document, you’ll want to “knit” the plain text and code from your .Rmd into your final document. To do so with the R Markdown that opened with your R Markdown file, click on the “Knit” button along the top of the source panel. Knit When you do so, it will prompt you to save the document. For now, we’ll type “test_document” into the box. (However, when you’re generating these documents for projects, you’ll want to be sure that this document is saved in the appropriate directory, which is likely the raw_code directory. Click “Save.” Save .Rmd Upon saving the document, you should see a document like this appear in a new window: Knit HTML So here you can see that the content of the header was rendered into a title, followed by your name and the date. The text chunks produced a section header called “R Markdown” which is followed by two paragraphs of text. Following this, you can see the R code summary(cars), importantly, followed by the output of running that code. And further down you will see code that ran to produce a plot, and then that plot. This is one of the huge benefits of R Markdown - rendering the results to code inline. Go back to the R Markdown file that produced this HTML and see if you can see how you signify you want text bolded. (Hint: Look at the word “Knit” and see what it is surrounded by). Additionally, feel free to change the text in this document or add additional code. Then, click on “Knit” again and see how the changes alter the HTML that is produced. Upon Knitting to HTML, an additional file will now be saved in the same directory where you saved your .Rmd file. However, as expected, this file will have the extension .html. If you make changes and re-knit your file, this HTML file will be re-generated and all changes will be saved in this file. Saved HTML file One final note on knitting. In this example, we have Knit to HTML (a format that can be easily viewed in any web browser), but you can also knit to a PDF or Word document (among other options). To Knit to a different output format, click on the arrow to right of the Knit icon to expose a drop-down menu. Select the output document you’d like from this list. The new file type will be generated and saved in the same directory where the .Rmd file is, but with the appropriate extension (i.e. .pdf if you selected “Knit to PDF”). Feel free to play around with how these different file output options look when you Knit! Other file output options when Knitting 34.0.5 Summary In this lesson we introduced you to R Markdown documents, discussing what they are and why you should use them. We briefly reviewed Markdown formatting, but if you are unclear on what Markdown is, feel free to go back to your previous Markdown lesson. In addition to introducing the what and why, we got you started with actually using R Markdown. Hopefully, you were able to generate and knit your first R Markdown document! Finally, this just touched on the basics of R Markdown. There are a number of options you can specify to display your code chunks in varied ways, different changes that can be made to your YAML to customize your output documents, and ways to create tables and use citations that we did not discuss. As you use R Markdown more and more, you’ll get more acquainted with these capabilities. For now, it’s great to know the basics and that there are more advanced features! 34.0.6 Additional Resources R Markdown Documentation, from RStudio R Markdown video, from RStudio Basic R Markdown cheatsheet “R Markdown cheatsheet” 34.0.7 Slides and Video R Markdown Slides "],["getting-help-in-r.html", "Chapter 35 Getting Help in R", " Chapter 35 Getting Help in R In a lesson in an earlier course, we discussed some basic guidelines for carrying out an effective Google Search. Now that you’ve been introduced to the basics of R, we wanted to guide you to some incredibly helpful resources that can help you work through issues when you’re trying to write your own R code. 35.0.1 R Help: ? To access documentation directly within RStudio, you can type a question mark followed by the function, dataset, or object within the R Console directly. The output for this documentation will display in the Help window at the bottom-right hand of RStudio. For example, earlier in this course, you were introduced to the function summary() in R. If you later can’t remember what this function does, but you can remember the function, you can always type ?summary in your Console. The following will display in the Help tab: ?summary documentation In this documentation we see: A general description of what the summary() function can be used for What package the function is from – “base” means it’s part of the base installation in R, rather than from a specific package The syntax you should use to carry out this function Some sample code As you work in R, you’ll find that some documentation is more helpful than others. Some packages and functions have incredibly helpful documentation pages. Others are less helpful. A thing to remember is that humans are responsible for writing this documentation. It’s great when someone who’s really great at documenting software or who has the time to do so write great documentation pages. However, for those times when the documentation proves less than helpful, there are other places you can look to for help. 35.0.2 Debugging code It is likely that after looking at R documentation, you still will have questions, or might not know exactly how to fix your code. For more tips on debugging your code, go paraphrase this guide originally written by the Childhood Cancer Data Lab. 1) Carefully read any and all error messages This may seem like a silly thing to include as a tip, but it’s very easy to gloss over an error message without actually reading it. Often, R may be telling you exactly what is wrong, but if you don’t take the time to understand what the error message means, you will have trouble fixing the error. Error messages often refer to R terms (e.g.. “argument”, “directory”) so if you need a refresher on what some terms mean, we recommend going through one of the intro to R tutorials we recommend. Secondly, realize that just because you don’t receive an error message, doesn’t mean that your code did what you intended it to. You also will need to carefully review your code (and your results) to try to find “silent” bugs (situations where R did exactly what you asked, but you didn’t get what you intended). 2) Identify which line and phrase of code is the source of the error. If you ran many lines of code, you may not know which part of your code is the origin of the error message. Isolating the source of the error and trying to better understand your problem should be your first course of action. The best way to determine this, is by running each line, and each phrase by itself, one at a time. Chunk-out your code and test the individual bits of code. Do you have a lot of lines of code, a lot of arguments, or multiple functions at once? Try each piece by itself to narrow down what piece appears to be the origin of the problem. 3) Be sure that the code you think you have run has all successfully run and in order. It could be that the problem with your code isn’t that it doesn’t work as it is written, but that you didn’t run it or didn’t run it in the correct order. This should be one of the first things you check, while checking that the objects that you believe should be in your environment, are in your environment. It’s also good practice to be periodically quitting your current R session and starting a new one, in addition to clearing your R notebook output. If you are encountering problems and haven’t refreshed your R session, you may want to do that before further troubleshooting. In the course of troubleshooting, you will want to re-run all of your code, perhaps many many many times in order to get to the bottom of the problem. 4) Google your error message The main advantage to Googling your errors is that you are likely not the first person to encounter the problem. Certain phrases and terms in the error message will yield more fruitful search results then others. 5) Look at the documentation for a function to make sure you are using it correctly Once you’ve better determined the origin of the problem, you should use whatever documentation is available to you regarding the problematic code. When using a new function from a package you are unfamiliar with, it’s worthwhile to skim through the documentation so you know how to properly use the functions. For base R functions, Tidyverse functions, and some Bioconductor packages, the documentation will give you a lot of the information you need. However, you will also likely find that not all documentation is thorough or clear. As we discussed, objects have structures and types. Having input that doesn’t match the requirements that a function has can be a common source of errors. Pay special attention to what the documentation says about what kind of input and output the function is designed to use. Use the RStudio help bar Here’s a screenshot from the help window in RStudio. Note that here we searched for the levels function. R documentation includes information about what the expected arguments are as well as examples of how to use a function. Note here that this documentation tells us that the input for x is probably a factor. search_bar For Bioconductor package functions, look at their page on bioconductor.org The documentation on Bioconductor pages have information that can be valuable for troubleshooting. Vignettes can have good example workflows to get started with (can use the browseVignettes function for RStudio to open them). In addition, every Bioconductor package has a PDF reference where all the functions and objects for that package are described. They can take some getting used to, but generally can have helpful information. Google it again Because it’s unlikely your first attempt at Googling will lead you straight to an answer; this is something you should continue to try with different wordings. Through trial and error, and also Google algorithms learning about what you look for, your search results can eventually lead you to helpful examples and forums. Ask for help! 35.0.3 Tips on asking questions! In the introduction to this course, we discussed that asking questions is central to data science and its also a crucial part of learning programming! When you are working on something, you should first ask these questions to yourself. But data science is best done as a community effort, so before you reach the point of being crazily frustrated, ask a peer or a more experienced coder for help! When you are troubleshooting code there are few things you should ask yourself (and tell others you are asking). Having this information together will help you reach a solution more efficiently! 35.0.3.1 Things to include in your request for help: What is the goal of this code? What are you trying to do? Is this the best or only way to do that? Often times in R there are many ways to achieve the same outcome, so it may be worth considering if there’s another solution that bypasses the problem you are having. What is the code that is producing this error? What part of the code is sending the error you are seeing? Try Chunking your code – trying each part piece by piece, to zero in on the problematic part. Is the code formatted correctly? It only takes a single comma, incorrectly capitalized letter, missing quote, or parenthesis to break a whole set of code! What is the error or problematic outcome? What are you seeing that is making you think something is wrong? Is it an error message? if so copy and paste that error message verbatim. Is it data that’s formatted not how it should be? Show what that looks like either with a screenshot or example. 35.0.4 Summary In this lesson we discussed documentation, how to debug code and how to ask for help. All of these items can be tools in your tool belt for when your R programming adventures are not going as you hope. Remember that learning to program can be frustrating but with time and asking for help, you will get there! 35.0.5 Additional Community Resources The R community is a welcoming and helpful community. Many people go years as R users before they learn what a rich community there is out there. We’re hoping to change that by introducing new users to a number of resources that will help them feel more welcome to the large community of individuals using R! Below is a short list of ways to connect with the R community: R for Data Science Learning Community - a welcoming and helpful community for those new to R and data science Twitter - Using or searching the hashtag #rstats can be incredibly helpful and can connect you to others who use R ROpenSci - an online community of developers developing tools for open science R Project Help in R Tidyverse Help Documentation - more details on creating a reprex 35.0.6 Slides and Video Getting Help in R Slides "],["csv-excel-and-tsv-files.html", "Chapter 36 CSV, Excel, and TSV Files", " Chapter 36 CSV, Excel, and TSV Files In this lesson, we’ll discuss a few of the main file types used to store tabular data. To review briefly, tabular data are the type of data stored in spreadsheets. Information from different variables are stored in columns and each observation is stored in a different row. The values for each observation is stored in its respective cell. 36.0.1 CSV files Comma-separated values (CSV) files allow us to store tabular data in a simple format. CSVs are plain-text files, which means that all the important information in the file is represented by text (where text is numbers, letters, and symbols you can type on your keyboard). For example, consider a dataset that includes information about the heights and blood types of three individuals. You could make a table that has three columns (names, heights, and blood types) and three rows (one for each person) in Google Docs or Microsoft Word. However, there is a better way of storing this data in plain text without needing to put them in table format. CSVs are a perfect way to store these data. In the CSV format, the values of each column for each person in the data are separated by commas and each row (each person in our case) is separated by a new line. This means your data would be stored in the following format: sample CSV Notice that CSV files have a .csv extension at the end. You can see this above at the top of the file. One of the advantages of CSV files is their simplicity. Because of this, they are one of the most common file formats used to store tabular data. Additionally, because they are plain text, they are compatible with many different types of software. CSVs can be read by most programs. Specifically, for our purposes, these files can be easily read into R (or Google Sheets, or Excel), where they can be better understood by the human eye. Here you see the same CSV opened in Google Slides, where it’s more easily interpretable by the human eye: CSV opened in Google Slides As with any file type, CSVs do have their limitations. Specifically, CSV files are best used for data that have a consistent number of variables across observations. For example, in our example, there are three variables for each observation: “name”, “height”, and “blood_type”. If, however, you had eye color and weight for the second observation, but not for the other rows, you’d have a different number of variables for the second observation than the other two. This type of data is not best suited for CSVs. However, whenever you have information the same number of variables across all observations, CSVs are a good bet! 36.0.2 Downloading CSV files If you entered the same values used above into Google Slides first and wanted to download this file as a CSV to read into R, you would enter the values in Google slides, and then click on “File” and then “Download” as and choose “Comma-separated values (.csv, current sheet)”. The dataset that you created will be downloaded as a CSV file on your computer. Make sure you know the location of your file (if on a Chromebook, this will be in your “Downloads” folder). Download as CSV file 36.0.3 Reading CSV files into RStudio Cloud Now that you have a CSV file, let’s discuss how to get it into RStudio Cloud! Log in to your RStudio Cloud account. Create a new project. On the RStudio workspace that you see, click on Upload under Files on the bottom right corner of the screen. On the window that pops up click on Choose File. Upload a file on RStudio Cloud Now, find where you saved the file (for instance “Downloads”) and click on OPEN. After this, the window closes automatically and you’ll be back in your workspace on RStudio Cloud. You will see that your CSV file now appears among other files. (A reminder: if you were working on a data science project, this would go in your “raw_data” directory. For this example, however, we’ll keep it in “cloud/project”) Find local file Now, while the file has now been uploaded to your RStudio Cloud project, it’s important to recognize the file is not yet imported to your R environment as an object. We’ll do that now! The best way to accomplish this is using the function read_csv() from the readr package. (Note, if you haven’t installed the readr package, you’ll have to do that first.) Inside the parenthesis of the function, write the name of the file in quotes, including the file extension (.csv). Make sure you type the exact file name. Save the imported data in a data frame called df_csv. Your data will now be imported into R environment. If you use the command head(df_csv) you will see the first several rows of your imported data frame: ## install.packages(&quot;readr&quot;) library(readr) ## read CSV into R df_csv &lt;- read_csv(&quot;sample_data - Sheet1.csv&quot;) ## look at the object head(df_csv) read_csv() Above, you see the simplest way to import a CSV file. However, as with many functions, there are other arguments that you can set to specify how to import your specific CSV file, a few of which are listed below. However, as usual, to see all the arguments for this function, use ?read_csv within R. col_names = FALSE to specify that the first row does NOT contain column names. skip = 2 will skip the first 2 rows. You can set the number to any number you want. Helpful if there is additional information in the first few rows of your data frame that are not actually part of the table. n_max = 100 will only read in the first 100 rows. You can set the number to any number you want. Helpful if you’re not sure how big a file is and just want to see part of it By default, read_csv() converts blank cells to missing data (NA). Finally, we introduce the function read_csv here and recommend that you use it, as it is the simplest and fastest way to read CSV files into R. However, we note that there is a function read.csv which is available by default in R. You will likely see this function in others’ code, so we just want to make sure you’re aware of it. 36.0.4 Excel files While CSV files hold plain text as a series of values separated by commas, an Excel (or .xls or .xlsx) file holds information in a workbook that comprises both values and formatting (colors, conditional formatting, font size, etc.). You can think of Excel files a fancier CSV file. While this may sound appealing, we’ll remind you that CSV files can be read by many different pieces of software, Excel files can only be viewed in specific pieces of software, and thus are generally less flexible. That said, many people save their data in Excel, so it’s important to know how to work with them in RStudio Cloud. Let’s go back to the Google Sheet that we created and instead of downloading the file locally as as CSV, download it as Microsoft Excel (.xlsx) file. Download as Excel file Save the file where you can find it. Similar to the CSV file, first, upload the file into your RStudio Cloud workspace. 36.0.5 Reading Excel files into RStudio Cloud To read this file into R, we’ll have to use a different function than above, as this file is not a CSV file. We’ll use the read_excel() function from the readxl package. Install the package first and then use the function read_excel() from the package read the Excel file into your R Environment. As above, by default, read_excel() converts blank cells to missing data (NA). ## install and load package install.packages(&quot;readxl&quot;) library(readxl) df_excel &lt;- read_excel(&quot;sample_data.xlsx&quot;) head(df_excel) Find local file 36.0.6 Text files Another common form of data is text files that usually come in the form of TXT or TSV file formats. Like CSVs, text files are simple, plain-text files; however, rather than columns being separated by commas, they are separated by tabs (represented by “ in plain-text). Like CSVs, they don’t allow text formatting (i.e. text colors in cells) and are able to be opened on many different software platforms. This makes them good candidates for storing data. 36.0.7 Reading TSV files into RStudio Cloud The process for reading these files into R is similar to what you’ve seen so far. We’ll again use the readr package, but we’ll instead use the read_tsv() function. ## read TSV into R df_tsv &lt;- read_tsv(&quot;sample_data - Sheet1.tsv&quot;) ## look at the object head(df_tsv) 36.0.8 Reading TXT files into RStudio Cloud Sometimes, tab-separated files are saved with the .txt file extension. TXT files can store tabular data, but they can also store simple text. Thus, while TSV is the more appropriate extension for tabular data that are tab-separated, you’ll often run into tabular data that individuals have saved as a TXT file. In these cases, you’ll want to use the more generic read_delim() function from readr. Google Sheets does not allow tab-separated files to be downloaded with the .txt file extension (since .tsv is more appropriate); however, if you were to have a file “sample_data.txt” uploaded into your RStudio Cloud project, you could use the following code to read it into your R Environment, where “ specifies that the file is tab-delimited. ## read TXT into R df_txt &lt;- read_delim(&quot;sample_data.txt&quot;, delim = &quot;\\t&quot;) ## look at the object head(df_txt) This function allows you to specify how the file you’re reading is in delimited. This means, rather than R knowing by default whether or not the data are comma- or tab- separated, you’ll have to specify it within the argument delim in the function. read_delim() is a more generic version of read_csv(). What this means is that you could use read_delim() to read in a CSV file. You would just need to specify that the file was comma-delimited if you were to use that function. 36.0.9 Exporting Data in R to CSV The last topic of this lesson is about how to export data from R. So far we learned about reading data into R. However, sometimes you would like to share your data with others and need to export your data from R to some format that your collaborators can see. As discussed above, CSV format is a good candidate because of its simplicity and compatibility. Let’s say you have a data frame in the R environment that you would like to export as a CSV. To do so, you could use write_csv() from the readr package. Since both methods are fairly similar, let’s look at the one from readr package. Since we’ve already created a data frame named df_csv, we can export it to a CSV file using the following code. After typing this command, a new CSV file called my_csv_file.csv will appear in the Files section. write_csv(df_csv, path = &quot;my_csv_file.csv&quot;) You could similar save your data as a TSV file using the function write_tsv() function. We’ll finally note that there are default R functions write.csv() and write.table() that accomplish similar goals. You may see these in others’ code; however, we recommend sticking to the intuitive and quick readr functions discussed in this lesson. 36.0.10 Slides and Video CSV, Excel, and TSV Files Slides "],["importing-data-from-google-sheets.html", "Chapter 37 Importing Data from Google Sheets 37.1 Recommended places to get data", " Chapter 37 Importing Data from Google Sheets In the last lesson we discussed how to read various file types into R. In each of these examples, we first had to upload the file into our RStudio Cloud project before we could read the file into R using one of the read_*() functions. What if we could cut out that first step, eliminating the need to upload the file into our project? This way, we could just use one function to read data directly into RStudio Cloud. This is capable thanks to data stored Google Sheets and the fantastic R package googlesheets4. Additionally, using this approach, we can read in and analyze data hosted on Google Sheets in real-time. This means that as the data are updated over time, you can read the data into R and analyze it in its current state. Then, when the data are updated, you just re-run your code, and you’ll get an updated analysis. To see what we mean specifically, let’s take a look at an example. Imagine you’ve sent out a survey to your friends asking about how they spend their day. Let’s say you’re mostly interested in knowing the hours spent on work, leisure, sleep, eating, socializing, and other activities. So in your Google Sheet you add these six items as columns and one column asking for your friends names. To collect this data, you then share the link with your friends, giving them the ability to edit the Google Sheet. Survey Google Sheets Your friends will then one-by-one complete the survey. And, because it’s a Google Sheet, everyone will be able to update the Google Sheet, regardless of whether or not someone else is also looking at the Sheet at the same time. As they do, you’ll be able to pull the data and import it to R for analysis at any point. You won’t have to wait for everyone to respond. You’ll be able to analyze the results in real-time by directly reading it into R from Google Sheets, avoiding the need to download it each time you do so. In other words, every time you import the data from the Google Sheets link using the googlesheets4 package, the most updated data will be imported. Let’s say, after waiting for a week, your friends’ data look something like this: Survey Data 37.0.1 The googlesheets4 package The googlesheets4 package allows R users to take advantage of the Google Sheets API. In the first lesson in this course we mentioned that an API allows different application to communicate with one another. In this case, Google has released an API that allows other software to communicate with Google Sheets and retrieve data and information directly from Google Sheets. The googlesheets4 package enables R users (you!) to then easily access that API and retrieve your Google Sheets data. Using this package is is the best and easiest way to analyze and edit Google Sheets data in R. In addition to the ability of pulling data, you can also edit a Google Sheet or create new sheets. Like any other package, we first need to install and attach the package. 37.0.1.1 Getting Started with googlesheets4 install.packages(&quot;googlesheets4&quot;) library(googlesheets4) Now, let’s get to importing your survey data into R. Every time you start a new session, you need to authenticate the use of googlesheets4 package with your Google account. This is a great features as it ensures that you want to allow access to your Google Sheets and allows the Google Sheets API to make sure that you should have access to the files you’re going to try to access. The command gs_auth(new_user = TRUE) will open a new page in your browser that asks you which Google account’s Google Sheets you’d like to give access to. Click on the appropriate Google user to provide googlesheets4 access to the Google Sheets API. Authenticate After you click “ALLOW”, giving permission for the googlesheets4 package to connect to your Google account, you will likely be shown a screen where you will be asked to copy an authentication code. Copy this authentication code and paste it in your RStudio Cloud console. Allow 37.0.1.2 Navigating googlesheets4: gs_ls() and gs_title() Once authenticated, you can use the command gs_ls() to list all your worksheets on Google Sheets as a table. In order to access a specific sheet, in this case the sheet that you created and named “survey”, you need to use the function gs_title(). We’ll assign this information to the object survey_sheet. survey_sheet &lt;- gs_title(&quot;survey&quot;) If you type the name of the sheet correctly, you will see a message that says Sheet successfully identified: “survey”. Sheet successfully identified 37.0.1.3 Reading data in using googlesheets4: gs_read() At this point, you can read the data into R using the function gs_read() with the survey_sheet object output from gs_title() as your input to gs_read(): survey_data &lt;- gs_read(survey_sheet) Sheet successfully read into R There are additional (optional) arguments to gs_read(), some are similar to those in read_csv() and read_excel(), while others are more specific to reading in Google Sheets: skip = 1 : will skip the first row of the Google Sheet ws = 1 : specifies that you want googlesheets4 to read in the first worksheet in your Google Sheet col_names = FALSE : specifies that the first row is not column names range = \"A1:G5\" : specifies the range of cells that we like to import is A1 to G5. n_max = 100 : specifies the maximum number of rows that we want to import is 100. 37.0.1.4 Adding rows and editing cells In addition to reading in data from Google Sheets directly using the googlesheets4 package, you can also modify your Google Sheet directly through R. For example, you can edit a cell or add a row to your sheet. Let’s say you’d like to add your own respond to the survey. For this you can use the command gs_add_row(). Note that the input argument specifies what you would like to add in the new row. If everything goes well, you will get a message saying Row successfully appended. my_response &lt;- c(&quot;Me&quot;, 10, 8, 2, 2, 1, 1) gs_add_row(survey_sheet, input = my_response) gs_add_row() If you now check the sheet on Google Sheets, you will see the appended row. Survey Data with Added Row To edit a specific cell you can use the command gs_edit_cell() but you will have to tell googlesheets4 which specific cell to edit. Let’s say we want to change the value of the cell D4 from 0 to 2. For this we will use the gs_edit_cells() function. The anchor argument points to the cell that we want to modify and the input argument contains the new value that we want to assign to the cell. gs_edit_cells(survey_sheet, anchor = &quot;D4&quot;, input = 2) gs_edit_cells() If you were to return to your Google Sheets, you’d notice that cell D4 now has a 2, rather than a 0 in it! 37.0.2 Importing CSV files from the web This lesson has focused on getting data from Google Sheets into RStudio Cloud; however, sometimes the data you need to work with is elsewhere online but you’d like to store it in a Google Sheet. While we will later learn that you can import them directly into R, it’s good to know that you can also import CSV files hosted on the web directly into Google Sheets. For instance, the dataset here is a CSV file containing countries GDPs (national incomes). In order to import the file directly to Google Sheets, open a blank Google Sheets document as we learned before. In the first cell (top left corner) type in =importData(\"https://raw.githubusercontent.com/datasets/gdp/master/data/gdp.csv\"). Make sure to include the equal sign (=) in the beginning. importing data directly into Google Sheets This will import all the data to your Google Sheets document. You can then use the steps discussed above any time you want to work with these data in RStudio Cloud. data in Google Sheets 37.0.3 Summary In this lesson, we’ve introduced the R package googlesheets4. We’ve discussed the need for authentication and have demonstrated a number of its basic capabilities. We’ve walked through an example of how to read a Google Sheet into R and how to add and edit content directly to your Google Sheet from R. We also briefly covered how to import CSV data into Google Sheets directly. While we’ve covered the basics, there are certainly a number of additional capabilities of the package, so feel free to explore even more! 37.0.4 Additional Resources googlesheets4 on GitHub - includes an incredibly helpful README from Jenny Bryan on the basic functions of the package as well as a table with brief descriptions of all the functions googlesheets4 vignette - a more in-depth tutorial at the packages’ functionality from Jenny Bryan and Joanna Zhao 37.0.5 Slides and Video Importing Data from Google Sheets Slides 37.1 Recommended places to get data TODO: Where to get data "],["finding-data.html", "Chapter 38 Finding Data", " Chapter 38 Finding Data Now that we know what data are, how to work with them in RStudio Cloud, and how to get them into RStudio Cloud, if you have a question you want to answer with data, where do you find data to work with? In some cases you’ll have to create your own data set but in other cases you can find data that others have already generated and start from there! In this lesson, we’ll discuss the difference between public and private data and direct you to a number of resources where you can find helpful data sets for data science projects! 38.0.1 Public versus Private Data Before discussing where to find data, we need to know the difference between private and public data. Private data are datasets to which a limited number of people or groups have access. There are many reasons why a dataset may remain private. If the dataset has personally-identifiable information within it (addresses, phone numbers, etc.), then the dataset may remain private for privacy reasons. Or, if the dataset has been generated by a company, they may hang onto it so that they have an advantage over their competitors. Often, you will not not have access to private data (although sometimes you can request and gain access to the data or pay for the data to get access). But that’s OK because, in general, public data are freely-available. Unlike private data generated by companies, data generated by governments are often made public and are available to anyone for use. 38.0.2 Publicly-available data As a data scientist, there’s a good chance you may work with private company data as part of your job. However, before you have that job, it’s great practice to work with datasets that are publicly-available and waiting for you to use them! In this section, we’ll direct you to sources of different datasets where you can find a dataset of interest to you and get working with it! 38.0.2.1 Open Datasets There are a number of companies dedicated to compiling datasets into a central location and making these data easy to access. Two of the most popular are Kaggle and data.world. On each site, you’ll have to register for a free account. After registering you’ll have access to many different types of datasets! Explore what’s available there and then start playing around with a dataset that interests you! kaggle and data.world are great places to look for datasets Publicly-available datasets are also curated at Awesome Public Datasets, so feel free to look around there as well! 38.0.2.2 Government Data Government data can provide a wealth of information to a data science. Government data sets cover topics from education and student loan debt to climate and weather. They include business and finance datasets as well as law and agriculture data. Here we provide lists of governments’ open data to just give you and idea of how many datasets are out there. This will only include a tiny portion of what cities and federal governments’ data are available for you to use. So, if there’s a place whose data you want to work with, look on Google for “open data” from that place! 38.0.2.2.1 US Data If you’re interested in working with government data from the United States, data.gov is place to get datasets that have been released by the the United States government. Here you can find hundreds of thousands of datasets. These data cover many topics, so if you’re interested in working with government data, data.gov datasets is a great place to start! data.gov has hundreds of thousands of datasets 38.0.2.2.2 Census Data The US Census is responsible for collecting data about the people within the United States and United States’ economy every ten years. These data are also accessible online and they can be worked with in R using the very helpful tidycensus package! The US Census provides data about the US people and economy 38.0.2.2.3 Open City Data The US’s federal government is of course not the only place to obtain government data. More and more cities across the world are starting to release open data at the city level. A few of these cities and their respective open city data links are provided below: Baltimore, MD (USA) Cincinnati, OH (USA) Las Vegas, NV (USA) New York City, NY (USA) San Francisco, CA (USA) Toronto, Ontario (Canada) Additionally, to see a summary of what datasets are available from cities across the USA, check out the US Open City Data Census from the Sunlight Foundation. US City Open Data Census 38.0.2.2.4 Global Data In addition to the United States, there are many other countries providing access to open data with more and more providing access and updated datasets each year. These include (but are not limited to!) datasets from many countries within Africa and Latin America as well as Canada, Ireland, Japan, Taiwan, and the UK. Additionally, to see what datasets are available globally, the Global Open Data Index is a great place to start! Global Open Data Index 38.0.2.3 APIs We’ve mentioned APIs previously, but it’s important to include them here as well. APIs provide access to data you’re interested in obtaining from websites. There are APIs for so many of the websites you access regularly. Google, Twitter, Facebook, and GitHub (among many others) all have APIs that you can access to obtain the dataset you’re interested in working with! 38.0.2.4 Company Data Finally, we mentioned above that companies often keep their data private for a number of reasons, and that’s ok! When companies do release their data, they will often be found on websites like Kaggle and data.world. If there is a company whose data you’re interested in, you can search for the company’s data on either of these two data repositories or on on the company’s website directly to see if they provide the data there or if you can scrape their website to obtain the information you need! There may not always be a way to get the exact dataset you’re looking for, but you can often find something that will work! 38.0.3 Data You Already Have Sometimes, it’s not about finding data someone else has already collected on a bunch of individuals in a population. Rather, getting data sometimes just involves taking a look at things you already have but just haven’t yet realized are data you can analyze. For example, MP4 files you’ve bought and have on your computer are data! They can be analyzed using tuneR and seewave. You could use this type of data to categorize the music in your library or to build a model that takes data on what songs were already big hits to determine what qualities of a song predict that it may be a big hit. Alternatively, you could scrape the websites you frequently visit (using rvest!) to answer interesting questions. For example, if you were interested in writing a really great title for the newest video of your pet doing something super cute, you might scrape the web for titles of pet videos that have recently gone viral. You could then craft the perfect title to use when you upload your pet video. Granted, this may not be an example answering the most important type of data science question; however, writing up how you did this would make a really great blog post, which is something we’ll discuss in a lesson in a few courses! Finally, social networking websites like Facebook and Twitter, collect a lot of data about you as an individual. You have access to this information through the websites APIs, but can also download data directly. After news of the Facebook and Cambridge Analytica data breach, many articles were published about how to download your Facebook data. These data can be downloaded and then analyzed to look at trends in your data over time. How many pictures have you uploaded and been tagged in over time - has that changed? What topics do you most frequently discuss in Messenger? Or, maybe you’re interested in mapping the places you’ve been based on where you’ve checked in. All of these data can be analyzed from data that are already there, just waiting for you to work with them! In all, sometimes getting the data just means realizing the data you already have at your disposal, figuring how to get the data into a format you can use, and then working with the data using the tools you have! 38.0.4 Summary In this lesson, our goal was to give you an idea of where to find data so that you can start working on interesting data science projects. Once you’ve located an interesting dataset, use the skills learned throughout this course to get the data into R. Then, get wrangling! Before you know it you’ll be more than halfway through an interesting data science project. Often finding and wrangling the data take up the most time! 38.0.5 Slides and Video Finding Data Slides "],["internet-safety.html", "Chapter 39 Internet Safety", " Chapter 39 Internet Safety Just like driving a car, there are inherent risks to using the Internet and doing data analysis on the cloud. These risks shouldn’t mean that you should always be fearful about your online safety, however, they should make you more aware that there are consequences if you are not cautious. Internet safety (or online safety) revolves around being knowledgeable about what these risks are, knowing how to deal with risks that arise when working online, and working hard to increase personal safety against security risks associated with using the Internet. The goal of Internet safety is to maximize personal safety and minimize security risks. We’ll discuss the basics of this below, but know that there are people whose entire careers are dedicated to Internet safety, so this will simply touch on the basics. 39.0.1 WiFi WiFi is the technology that enables you to wirelessly connect to the Internet. Computers, smartphones, video-game consoles, and TVs are among the many types of devices that are WiFi-compatible. As is often the case, increased access to the Internet comes with increased risk to network security. 39.0.1.1 Public WiFi Completely-open and free public WiFi, or Internet access that does not require a password or a screen to login from is the least secure type of network. When connected to public WiFi, be extra vigilant. Avoid working with sensitive data while on a completely open and public network, and do not make online purchases while on this network. 39.0.1.2 Semi-Open WiFi Semi-open WiFi networks are networks potentially open to everyone, but that may require a password (maybe one that is printed on your receipt at a coffee shop) or may require you to login by providing an e-mail address. When given the choice, opt to connect to these networks rather than completely-open public WiFi networks. 39.0.1.3 Password-protected WiFi The most secure option, however, is when you connect to a password-protected WiFi network, so use password-protected WiFi whenever you have the option. WiFi at your home should absolutely be password-protected. 39.0.1.4 Use HTTPS Whenever Possible The “S” in HTTPS stands for secure. So, what does HTTP stand for? HTTP refers to “Hyper Text Transfer Protocol.” You’re likely most familiar with these letters as being part of your website. When you type “www.gmail.com” into your Chrome browser, Chrome redirects you to “https://mail.google.com/mail/u/0/#inbox.” HTTP refers to how the data are sent from your browser (where you typed “www.gmail.com”) and the website to which you’re trying to connect (www.gmail.com). When the web address starts with https:// rather than http://, this means that the data sent over your Internet connection are encrypted. Encryption is a process that generates a message that cannot be decoded by anyone without a key. Thus, if someone were to intercept your encrypted data as it were transferred over the Internet, they may be able to intercept your data, but they wouldn’t be able to decipher the information, as they wouldn’t have access to the key. When a website is using encryption (https://), there will be a padlock to the left of your web address bar to indicate that the HTTPS connection is in effect. When sharing sensitive information on the Internet (ie a credit card number or personal health information), it should only ever be done on a secure (encrypted) network. 39.0.2 Passwords In the age of apps for everything and technology being everywhere, you likely have a lot of requests daily for passwords. While they may seem like an annoyance, using passwords, and importantly, using good passwords is worth the effort. 39.0.2.1 Strong Passwords Strong passwords may be harder to remember, but that’s the point. You don’t want someone else to be able to easily guess your password. Characteristics of Strong Passwords: Use a combination of random letters Use both capital and lower case letters Include numbers, letters, and symbols Disperse the letters and symbols throughout the password (not just at the beginning and the end) Has at least 12 characters What to Avoid when Creating A Password: Avoid using names of you or anyone in your family Do not include the words “Passcode” or “Password” Avoid using sequential numbers (i.e. 123) Avoid using your telephone number Don’t make obvious substitutions to words (i.e. avoid simply replacing the letter “o” in a word with the number “0”) 39.0.2.2 Utilize Passwords When given the option, use a password. Do not opt out of using a password to log in to your phone or your computer. When asked to set a password, do so, and make it a good one. In addition to setting passwords, make sure you have multiple different passwords. Do not use the same password for all your most important accounts. If someone were to log onto your WiFi network, you wouldn’t also want that person to be able to gain access to your credit card, Gmail, bank account, and/or Facebook account. Use different passwords for different accounts. 39.0.2.3 When to Change Passwords If your password was set by a third-party company (say your Internet provider), you should change your password right away. Otherwise, it’s a good practice to change passwords to your most sensitive information (i.e. WiFi, credit cards/banking, etc.) at least every six months. 39.0.2.4 Never Share Passwords A final word on passwords: never share them. Reputable companies will never ask for them. Your bank will never require you to tell it to them. And, neither will the IRS. If someone is asking for your password, it is almost certainly a scam. 39.0.3 Good Internet behavior On the Internet there are few basic guidelines to follow that will help you be a good citizen and help keep you safe. This list is surely not exhaustive, but it’s a good start. When online: * Don’t be a jerk * Never share your passwords * Think before you click * Don’t click on links sent to you from people you don’t know * Don’t click on links from someone you do know if it doesn’t seem like something they would send (i.e. an email with a weird subject line that doesn’t sound like them or a link in an email that says “Vacation Pix” when they wouldn’t normally send those pictures, wouldn’t use the word “Pix”, or haven’t recently been on a trip) 39.0.4 Online Scams While we would love if everyone on the Internet behaved well (and most people do!), there are of course bad actors. To avoid getting caught up in an online scam, beware of: people/websites posing as people from a trustworthy company who attempt to obtain your private information - emails asking for credit card numbers or passwords are scams people who call and ask for passwords to accounts and who seem to know a lot about your family and claim to be from law enforcement. This is likely a scam. You can always hang up and call your local law enforcement directly to be sure. people/websites offering prices that are way too low for housing or big purchases on the Internet. These are likely a scam. 39.0.5 Malware &amp; Spyware Finally, malware and spyware are software designed to be malicious. The goal of malware and spyware is to collect your private information (usernames, passwords, credit card numbers) without you ever knowing. This software often acts through e-mail or other software. By avoiding clicking on suspicious links and not downloading software with which you’re not familiar, you can avoid the issues caused by malicious software. 39.0.6 Security on a Chromebook Because Chromebooks do not run a typically operating system, they are much more secure than other laptops. While explained in greater depth on Google’s support documentation, Chromebooks have certain advantages over other laptops when it comes to security: Automatic updates - ensure that your Chromebook is never behind on security updates Sandboxing - each web page runs in its own environment (sandbox), so if one page is infected, that page won’t affect other tabs or apps running at the time. Verified Boot - every time the Chromebook starts up, it does a self-check to detect any issues with security. Encryption - web apps on a Chromebook store all data safely in the cloud with encryption, making it resistant to tampering 39.0.7 Slides and Video Internet Safety Slides "],["data-privacy.html", "Chapter 40 Data Privacy", " Chapter 40 Data Privacy In the previous lesson, we covered good practices when connecting to WiFi and working on the Internet. We noted that data are safer when they’re encrypted, but we didn’t go into much more detail than that. In this lesson we’ll cover what data privacy is, why it’s important, and discuss encryption in slightly more detail. Again, remember that there are people who dedicate their entire careers to data privacy. This lesson simply touches on the basics. Feel free to search on the Internet to learn even more about Data Privacy! 40.0.1 What is Data Privacy? Data privacy is: {cite: “Wikipedia”, url: “https://en.wikipedia.org/wiki/Information_privacy”} &gt; the “relationship between the collection and dissemination of data, technology, the public expectation of privacy, and the legal and political issues surrounding them.” This complex definition correctly suggests that data privacy is not a simple matter. A simpler definition of data privacy would maybe be how to keep personal and private information safe. Concerns arise with data privacy whenever there is personally identifiable information (PII) or sensitive information that is being collected, stored, used, (and eventually destroyed and deleted). When handled appropriately, only people who should have access to the information do. When mishandled, this information could be accessed by others who should not have that information. Data are everywhere, so it’s incredibly important to think about data privacy early on in every single data science project. It’s much better to be too vigilant than to make a mistake, allow data to fall into the wrong hands, and have to try to clean up the mess, as you’ll see in a few examples below. So, think of data privacy concerns early and often to avoid making a mistake. 40.0.2 Personally Identifiable Information In the US, Personally Identifiable Information, often simply referred to by the terms initials, PII, is any “information that can be used on its own or with other information to identify, contact, or locate a single person, or to identify an individual. This could be a first and last name, a picture of someone’s face, a driver’s license number, a date of birth, an address, an individual’s genetic code, or a telephone number, among many other pieces of information. All of these pieces of information could help identify a person. It’s these type of data that must be handled extremely carefully. When you sign up for an app on your computer or phone, you likely provide that company with some PII. You often give them your name and your address (among other information). You likely assume that this company will handle your data appropriately, and, if everyone is following the rules, they will. This means they won’t share it with others, use it for purposes other than those for which you’ve given them permission, or allow others companies/people to steal your information. However, as reported regularly in the news, companies do not always handle your data as they should. We’ll discuss what concerns you should have as you’re working with other people’s data and how data should be handled. 40.0.3 What is encryption? To review from the last lesson, when data are encrypted, all the information is jumbled into a code that can only be decoded by someone who has the key. This means that if data are intercepted while being transferred, the person who has intercepted the data will not be able to understand the data, as they won’t have access to the key and will only have the completely jumbled information. It is a security measure to help keep data safe. 40.0.3.1 Working in RStudio Cloud In earlier lessons, you’ve been working in RStudio Cloud and will continue to do so as your hone your data science skills. Data on RStudio Cloud are encrypted at rest (when they’re sitting in your project) and in transit (when they’re being uploaded or downloaded). This means that, if intercepted, the person who has intercepted the data will not be able to decipher the information contained, as they don’t have the key. However, if you download data from RStudio Cloud and store them directly on your computer, they are no longer encrypted. If you have PII in a dataset that is stored on your laptop directly, that information is not protected. So, be careful working with datasets that contain PII that have been downloaded to your computer. 40.0.3.2 HTTPS An additional reminder: websites that have https:// (rather than just http://) also use encryption for data transfer, increasing security for data that are transferred. When working with PII and transferring data, be sure that the websites you’re working with are using HTTPS. 40.0.4 Human Security Human security is the concept that individual people (rather than just countries) should be kept safe and secure. With regards to data science, this means that when working on the Internet, regulations and laws should be made not just to protect the security of a nation, but rather to protect every individual and their data. Data Science projects should NOT: * increase risk or harm * pose threats to individuals * make individuals’ PII publicly-available or susceptible to theft * break any laws * share data with other groups/companies without the consent of the individuals * saved data insecurely 40.0.5 Computer Security Computer Security (or cybersecurity) is {cite: “Wikipedia”, url: “https://en.wikipedia.org/wiki/Computer_security”} &gt; “the protection of computer systems from the theft and damage to their hardware, software or information, as well as from disruption or misdirection of the services they provide.” This means that, in addition to keeping individuals’ data safe (maximizing human security), data science projects must also consider how to ensure that the computers and software they use and create are designed in a secure manner. For data science projects, this means that data being transferred over the Internet should be done so safely (using encryption) and that software you develop or use should not post PII or other sensitive to the Internet. 40.0.6 Open Science There is an important movement in science currently where individuals promote what is known as open science. Practitioners of open science support making their scientific studies as transparent as possible. Specifically, they provide all the data, programming code, and software necessary to repeat their analyses. Open science is great for the scientific community and public, as everyone has access to the tools and data used. However, it is not without its privacy risk. Open Science practitioners are still responsible for protecting PII. This means that individual-level information (names, dates of birth, addresses, etc.) must all be removed from one’s dataset before it is released to the public. Being a supporter and practitioner of open science is great, but you must always ensure that when you’re releasing and sharing data, you are not inadvertently putting others at risk. 40.0.6.1 Open Data Open data are data that are freely-available to anyone. Local and federal governments as well as many scientists make their data freely-available to the public. Open data are wonderful in that anyone can work with them. Sharing data is a great thing! But, sharing must be done with the caveats already mentioned. Individual-level information (PII) should be removed from datasets prior to release. Individuals should not be identifiable from data freely-available on the Internet. 40.0.6.2 Open-source Software Like open data, open-source software are software that are designed to be freely-available to anyone. This means that the software code is all available, so others can not only download and use the software for free, but also can download the code and modify it for their own purposes. The R programming language is itself an open-source project and all packages made for R are also open-source. This means that programming in R will always be free, and the code will always be publicly-available. 40.0.7 Data Breaches To understand data privacy, it’s good to know definitions and best practices, but it’s also important to learn from past mistakes. Companies have not always handled data securely. Here, we’ll discuss a few famous data breaches and touch on what went wrong so these errors can be avoided in the future. 40.0.7.1 Facebook In March of 2018, The New York Times and The Guardian both broke stories about how data from at least 50 million Facebook profiles were used by a company called Cambridge Analytica to build profiles of individual US voters, allowing individuals be to targeted with personalized political advertisements. While the details are provided in the links provided above, briefly here, the data were mined from individuals who had consented for their data to be used for academic purposes. However, Cambridge Analytica was collecting these data for non-academic purposes and collecting data from friends of these individuals who had consented to have their data collected but who had not consented to have their data used. This data breach at Facebook demonstrated that Facebook did not have sufficient protocols in place to protect user data. As a result, Mark Zuckerberg, Facebook’s CEO, has had to testify before Congress and the company has promised to make changes to improve data security. 40.0.7.2 Equifax In the Fall of 2017 Equifax, a credit-reporting agency, disclosed that partial driver’s license information was stolen from 2.4 million US consumers. This hack was traced back to a “preventable software flaw”. In other words, in March of 2017, Equifax identified a weakness in a piece of software they were using. However, they did not move to fix that weakness quickly. Partial drivers licenses were stolen from May until June of 2017. Thus, Equifax knew about the problem before any data were actually breached. The entire breach could have been avoided. Prioritizing security and moving to fix problems immediately upon realizing an issue is critically important. 40.0.7.3 Ashley Madison In July of 2015, Ashley Madison, a website that helps people cheat on their spouses, was hacked and personal information, including e-mail addresses, from 32 million site member’s were stolen and published. The windfall rippled through society, leading to resignations, divorces and suicides. The “Impact Team,” the group of hackers responsible for this hack, publicly stated that part of the reason they decided to release the data was because Ashley Madison had been charging users a $19 fee to completely erase their profile information, but that Ashley Madison had failed to actually scrub these data from their records. The security lesson here is that there should always be a mechanism by which users can remove themselves from a dataset. In the European Union, the General Data Protection Regulation (GDPR) has stated that, by law, companies must have this feature built-in. Users should always be able to remove themselves from a dataset. 40.0.7.4 OKCupid In May of 2016, researchers scraped profiles from 70,000 users on OKCupid, an online dating site, and made them completely open to the public. These researchers did not (1) have permission from OKCupid, (2) obtain informed consent from the users, nor did they (3) remove PII from the data prior to release. Since their original release on The Open Science Framework, given the issues with the dataset just mentioned and the fact that the collection of the data did not follow OKCupid’s Terms of Service, the dataset was taken down. However, hundreds of people had already downloaded the data at that point. In this case, a set of researchers did not comply with the Terms of Service they agreed to by signing up for OKCupid. While it was likely not illegal to obtain the data, as OKCupid made the data sort-of-public, it was certainly unethical, as the researchers did not take individual data security practices into consideration. So, even when you’re not necessarily doing something illegal, you can still do something unethical that does not follow good data privacy practices. 40.0.7.5 Strava A similar example of using data legally but with unintended negative consequences occurred when data from Strava, a popular fitness-tracking app, gave away the location of secret US army bases throughout the world in late 2017. Individual users would use the app to track their activity; however, in foreign countries, where Strava-users are almost exclusively foreign military personnel, bases can be identified easily from Strava heatmaps, which show all the activity tracked by its app users, as they are the only individuals contributing to the maps in those areas. The lesson to be learned here is that when releasing data, always consider possible unintended consequences. Think hard about the implications of your data and your analyses. Being vigilant and always considering data privacy and possible unintended consequences of your work are incredibly important. 40.0.8 Conclusions Hopefully we’ve explained a number of considerations to take into account when working with and sharing data. Data are powerful. It’s important to use them responsibly. Be careful with PII Fix security issues immediately Keep individuals’ data safe Don’t steal data Even if it’s legal, it may not be right or ethical Consider unintended consequences of your work 40.0.9 Slides and Video Data Privacy Slides "],["ethical-data-science.html", "Chapter 41 Ethical Data Science", " Chapter 41 Ethical Data Science From the emails automatically marked as spam in your Inbox and facial recognition on Facebook to the targeted advertisements you see whenever you’re online, data science has made its way into our everyday lives. Often, this is a positive because data scientists generally set out to improve the world (say, by analyzing crime data in hopes of reducing violent crime) or to make our lives easier (by preventing spams in our mailboxes, for example). However, data science projects are certainly not without negative consequences. We discussed some of the companies who have run up against issues properly securing user data in the last lesson; however, protecting the privacy of users’ data is not the only time data scientists should consider the ethics of their work. In fact, ethical considerations should be made from the start of a project and should never stop being made. We’ll discuss what we mean by that in this lesson. When we talk about the ethics of data science, we’re talking about how to use data to improve the lives of individuals in our society in the world without causing harm to any groups with our work. We’re talking about putting in the work ahead of time to avoid unintended negative consequences of our work. Rather than acting surprised when groups are inadvertently harmed or only dealing with unintended consequences after they occur and harm others, an ethical data scientist will consider whether they are doing any harm at each step along the way. 41.0.1 Data Science Team Data science projects can be done by an individual; however, more often, they are carried out by a team of individuals who are all interested in using data to answer an interesting question. Whether it’s one person setting out to answer the question or a team working to answer this question, it’s important at this outset of a project to really think about whether all the necessary individuals are on the team. For example, if a group of data scientists were setting out to reduce crime in a neighborhood, it would be in their best interest to either be very familiar with that neighborhood (say, live there themselves) or to talk to individuals who currently live in that neighborhood to be as informed as possible before they set out to analyze their data. By working with individuals who have more knowledge about the neighborhood than someone who has never been there, the team will be less likely to make incorrect assumptions or leave out critical pieces of information when analyzing the neighborhood’s data. 41.0.2 The Data After ensuring that the team you’ve assembled to answer the question is the right team to do so, there are many considerations to be made when collecting data. 41.0.2.1 Sampling Bias When data are collected, it’s difficult to ever get information about an entire population. Thus, when data are conducted, researchers will typically get data from a subset of individuals within the population (a process called sampling) and then infer something about the entire population using what they learned from the subset of individuals. They will try to ensure that their subset is a random subset of the population. However, whenever sampling of a population is done, there’s a chance for sampling bias. Sampling bias occurs whenever the sample of the population collected does not accurately reflect the population as a whole. For example, if the population you’re interested in studying is half female and half male, but the subset of people you’ve sampled is made up of 70% females and 30% males, then your sample is biased. Having a plan to avoid sampling bias is an important first step in the process of data collection. Checking the data after the data have been collected to ensure that the sample is not biased is an equally important step. When data are collected by survey for example, they may be sent out to an equal number of males and females; however, maybe more males respond than females. Even though your plan was solid, your responses are biased. This has to be accounted for during the analysis, as your responses do not accurately represent the population as a whole. And to be clear, gender is not the only consideration to make when sampling. Samples can be biased by many factors including (but not limited to) race and ethnicity, age, income, and education. Sampling bias should always be avoided both when planning to collect data and after the data are collected. 41.0.2.2 Informed Consent In addition to collecting data in an unbiased manner, data must be collected ethically. This means that individuals must consent to participating in data collection. Informed consent requires that the individual agreeing to share their information knows what data are being collected, has been informed of any possible consequences, and has been provided full knowledge of any risks or benefits of participation. If data are collected on individuals and later on a data scientist wants to use those data for a different purpose, they can only do so if the initial consent allowed for the data to be used in this manner. Alternatively, if the data are de-identified, they may be able to be used for future analysis; however, this must be done with care. 41.0.2.3 Privacy While discussed in a previous lesson, for completion’s sake, we’ll discuss again here. When collecting personally-identifiable information, these data must be protected. They should not be shared without the participants’ consent and they should be stored in a secure manner. 41.0.2.4 Withdrawal of consent If an individual consents to their data being collected and later changes their mind, they have every right to do so. It is your responsibility as the person collecting the data to have an effective plan for removing any data already collected from that individual. 41.0.3 The Analysis After avoiding sampling bias, collecting data ethically, avoiding privacy issues in data storage, there are still a number of ethical considerations to take into account during ones analysis. While we don’t discuss the details in these courses, machine learning is currently a popular way to analyze data. In general, it uses existing data to predict how individuals will behave in the future. This means that the any biases in the data used to build the model (the existing data) will likely be perpetuated in the predictions. This means that, for example, in predictive policing, where data scientists are trying to predict where crimes are more likely to happen, if the data used to build the model (often referred to as an algorithm) come from crimes that have occurred in primarily black neighborhoods, they are going to predict that crime happens more in primarily black neighborhoods. Then, if police officers are placed in these neighborhoods, they are going to find more crime, not because crime has increased, but just because there are more of them in the neighborhood now. Essentially, any biases in the data used initially are going to be perpetuated in the models they generate. This means that it is critically important that data scientists fully know and understand the data their working with, its biases, and its limitations. Further, even when something like race is predictive in the model, it’s important for a data scientist to consider whether or not that variable should be included. Are you absolutely positive that race is the important variable and it’s not just that you have a biased sample? Instead, if you’re trying to predict crimes, it’s likely best to use data about crimes that have occurred and where they have occurred in the model rather than race, since race is not a measure of what you’re interested in modeling. Considering the implications of ones work when carrying out an analysis is incredibly important, and making decisions that do not unnecessarily harm any group of people is critical It was previously common for analysts to say that “data do not lie” and “algorithms are impartial,” but recent history has shown that that is simply not the case. Data are collected by humans, and humans are not without their biases. The best way to avoid bias in your data is to be aware of this and constantly check to make sure you’re not disadvantaging groups of people with your analyses. Before considering any data analysis and publishing your results, make sure: You have gone through your data and have made sure there is not any major flaw in your data collection. Data can be biased. You can’t use the result of a study that is mostly based on data from men to say anything about women. You have checked for common mistakes in your analysis and know that your methodology is valid and defensible. Messing up the data for a single variable can drastically change the result of your analysis. The results of your work can not be used to harass people, especially minorities, in any way. Your analysis is independent of your opinion about the specific problem you’re trying to solve using data. When carrying out an analysis, you should be looking for the answer to a question, but be careful not to want a specific answer. By wanting the analysis to go a certain way, you can subconsciously analyze the data to get that answer. It’s best just to collect the data ethically and analyze it carefully. Then, the answer is whatever the answer from the analysis says it is. You can do awesome things with your data science skills: cure diseases, analyze health data, prevent climate change, improve your city, or fact check politicians. Don’t let your biases or mistakes get in the way. 41.0.4 After the Algorithm Finally, after someone answers an awesome data science question with their really great analysis and tell the world, they often think their job is done. However, if you’ve designed an algorithm that is going to predict something going forward or that is going to continue to be used, it is your job to maintain that algorithm. That means that it’s your job to check for biases after the fact. Is your analysis disadvantaging groups of people? If it is, should it be? Does something need to be changed. There has to be a way for you to update your algorithm going forward. If something is continuing to be used by others, your job isn’t done once you’ve built the algorithm. It’s your job to check for biases after the fact and to update your algorithm should there be a need. 41.0.4.1 Ethical Questions to Answer To summarize this lesson up to this point, be sure to answer all of these questions for every data science project you carry out: Does the team on this project include all the necessary individuals to avoid bias in our analysis? Does our data collection plan address ways to avoid sampling bias? Are the data we’ve collected / the data we’re using to answer the question of interest biased? In what ways? Has informed consent been obtained from all participants? Do we have a mechanism do remove an individual’s data from our dataset if they so choose? Are the variables we’ve chosen to use for our analysis appropriate? Do they discriminate against anyone? Is our analysis transparent? Do we understand how and why we’re getting the answer we’re getting? Have we considered possible negative or unintended consequences of our analysis and its results? Do we have a way to update our analysis/algorithm going forward should biases in the results be found? 41.0.5 Ethics in Data Science Now that we’ve discussed the ethical considerations to be made before and throughout every data science project, we’ll discuss a few data science projects that were recently covered the popular media due to the questionable ethics of the project. We present these examples not only to highlight the ethics of the particular project, but also to state the importance of considering the implications of your work. It is not enough to argue that you just “did the analysis” but “didn’t think of the implications” of the work. As a data scientist it is your responsibility to both do the analysis and consider the implications of your work. 41.0.5.1 Data Science in Sentencing In April of 2017, Wired reported in an opinion piece that courts were using artificial intelligence to sentence criminals and made the claim that such practices must be put to an end. The piece explained that courts and corrections departments across the United States collect data on defendants that are then used in an algorithm to determine the “risk” that defendant poses. This aim of this algorithm is to determine how likely it is that the individual will commit another crime. These likelihoods of reoffending from the algorithm are then used to make decisions about how to set bail, what the sentence should be, and the details of that individual’s parole. These tools are often built by private companies. This means that exactly how they work and what data are used to assess risk are not disclosed. The article in Wired highlights the use of Compas, one of these risk-assessment tools developed by a private company and used by the Department of Corrections in Wisconsin, in a judge’s decision to give a man a long sentence, in part because of his “high risk” score from the algorithm. In a courtroom, however, because the specifics of how this algorithm works are not disclosed, a judge and jury would not be able to determine whether or not the likelihood of reoffending was calculated accurately by the algorithm. Initially, arguments were made that removing human biases and judgment from bail, sentencing, and parole decisions would be for the benefit of society. This initial goal was a noble goal that would improve society. However, over time, biases in the data used to generate these algorithms that perpetuated into biases in the algorithms’ outcomes, the lack of transparency in how they work, and failure to check for inequities and biases in the algorithms after they were put in place have led to unfair decisions being made. While individuals may have been looking to improve society with their algorithm at the outset of this project (or at least that argument can be made), lack of considerations of the implications of their work and lack of transparency in the process of generating and using the algorithm have led to questionable ethics in the use of algorithms to make sentencing decisions. 41.0.6 Artificial Intelligence in the Military In March of 2018, Gizmodo reported that Google was helping the US Department of Defense use artificial intelligence to analyze drone footage, a project that started in April of 2017. The project between Google and the Defense department is called Project Maven, and the goal of this project was initially to take drone footage and accurately identify objects (such as vehicles) and to track individuals in the footage collected. A number of Google employees were upset that Google would provide resources to the military that would be used for surveillance in drone operations. Due to the fact that in other non-military situations the use of machine learning has led to biased outcomes, other employees felt there needed to be further discussion about the ethics in developing and using machine learning technology before it was deployed by the military. In response to these concerns, a Google spokesperson stated that Google is working “to develop policies and safeguards”, that the technology is being used for “non-offensive uses only.” In this and many large data science projects where machine learning and artificial intelligence are being used in situations where lives could be negatively impacted, the project would benefit from taking ethical considerations into account and discussing these in a transparent way before deploying the technology. Developing policies and safeguards after the fact is not enough. 41.0.6.1 Facial Recognition in Law Enforcement In May of 2018, the ACLU reported that Amazon had teamed up with law enforcement agencies to use Amazon’s face recognition technology, Rekognition. The ACLU called this new technology, which can quickly scan images to “identify, track, and analyze people in real time” both “powerful” and “dangerous.” This story was picked up by many news sources, including a piece in the New York Times Proponents of using facial recognition technology in law enforcement cite that such technology can help locate and identify criminals more quickly than we would have been able to in the past and that it will help “keep residents and visitors…safe”. Proponents also argue that those who use the technology do so within the limits of the law. Opponents, like the ACLU, however, cite the civil liberties and civil rights concerns that constant surveillance with using facial recognition technology pose. The ACLU argues that there is substantial “capacity for abuse” and due to this, that citizens should not be watched by the government any time they walk outside, that facial recognition systems threaten freedom, and that the deployment of these technologies post a greater threat to communities that are already unfairly targeted by the political climate. Concerns with the technology cite that anyone can be identified, not just criminals, a problem for civil liberties. Opponents further question the accuracy of the technology. Inaccuracies, which would misidentify individuals and suggest they were guilty of a crime when they were in fact not is clearly a problem. Further, there are concerns that accuracy varies based on gender and race, which if true, poses a clear bias in the use of this technology for the identification of criminals as certain groups of individuals would be misidentified more frequently than others. 41.0.7 Additional Resources Ethical Checklist for Data Science, by Alan Fritzler Weapons of Math Destruction, by Cathy O’Neil Automating Inequality, by Virginia Eubanks Courts are Using AI to Sentence Criminals. That must Stop Now, by Jason Tashea in Wired Machine Bias, by Julia Angwin, Jeff Larson, Surya Mattu and Lauren Kirchner at ProPublica Amazon Teams Up With Law Enforcement to Deploy Dangerous New Face Recognition Technology, by Matt Cagle and Nicole A. Ozer with the ACLU Amazon Pushes Facial Recognition to Police. Critics See Surveillance Risk., by Nick Wingfield at the New York Times Google Is Helping the Pentagon Build AI for Drones, by Kate Conger and Dell Cameron at Gizmodo 41.0.8 Slides and Video Ethical Data Science Slides "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
